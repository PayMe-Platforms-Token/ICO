{
	"id": "64e8ea028ba6cb6d0f0fd86f994deb7e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/crowdsale/validation/TimedCrowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"../Crowdsale.sol\";\n\n/**\n * @title TimedCrowdsale\n * @dev Crowdsale accepting contributions only within a time frame.\n */\nabstract contract TimedCrowdsale is Crowdsale {\n    using SafeMath for uint256;\n\n    uint256 private _openingTime;\n    uint256 private _closingTime;\n\n    /**\n     * Event for crowdsale extending\n     * @param newClosingTime new closing time\n     * @param prevClosingTime old closing time\n     */\n    event TimedCrowdsaleExtended(uint256 prevClosingTime, uint256 newClosingTime);\n\n    /**\n     * @dev Reverts if not in crowdsale time range.\n     */\n    modifier onlyWhileOpen {\n        require(isOpen(), \"TimedCrowdsale: not open\");\n        _;\n    }\n\n    /**\n     * @dev Constructor, takes crowdsale opening and closing times.\n     * @param openingTime_ Crowdsale opening time\n     * @param closingTime_ Crowdsale closing time\n     */\n    constructor (uint256 openingTime_, uint256 closingTime_) {\n        // solhint-disable-next-line not-rely-on-time\n        require(openingTime_ >= block.timestamp, \"TimedCrowdsale: opening time is before current time\");\n        // solhint-disable-next-line max-line-length\n        require(closingTime_ > openingTime_, \"TimedCrowdsale: opening time is not before closing time\");\n\n        _openingTime = openingTime_;\n        _closingTime = closingTime_;\n    }\n\n    /**\n     * @return the crowdsale opening time.\n     */\n    function openingTime() public view returns (uint256) {\n        return _openingTime;\n    }\n\n    /**\n     * @return the crowdsale closing time.\n     */\n    function closingTime() public view returns (uint256) {\n        return _closingTime;\n    }\n\n    /**\n     * @return true if the crowdsale is open, false otherwise.\n     */\n    function isOpen() public view returns (bool) {\n        // solhint-disable-next-line not-rely-on-time\n        return block.timestamp >= _openingTime && block.timestamp <= _closingTime;\n    }\n\n    /**\n     * @dev Checks whether the period in which the crowdsale is open has already elapsed.\n     * @return Whether crowdsale period has elapsed\n     */\n    function hasClosed() public view returns (bool) {\n        // solhint-disable-next-line not-rely-on-time\n        return block.timestamp > _closingTime;\n    }\n\n    /**\n     * @dev Extend parent behavior requiring to be within contributing period.\n     * @param beneficiary Token purchaser\n     * @param weiAmount Amount of wei contributed\n     */\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) \n    internal \n    override\n    virtual\n    onlyWhileOpen\n     view {\n        super._preValidatePurchase(beneficiary, weiAmount);\n    }\n\n    /**\n     * @dev Extend crowdsale.\n     * @param newClosingTime Crowdsale closing time\n     */\n    function _extendTime(uint256 newClosingTime) internal {\n        require(!hasClosed(), \"TimedCrowdsale: already closed\");\n        // solhint-disable-next-line max-line-length\n        require(newClosingTime > _closingTime, \"TimedCrowdsale: new closing time is before current closing time\");\n\n        emit TimedCrowdsaleExtended(_closingTime, newClosingTime);\n        _closingTime = newClosingTime;\n    }\n}\n"
			},
			"contracts/crowdsale/Crowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n\n/**\n * @title Crowdsale\n * @dev Crowdsale is a base contract for managing a token crowdsale,\n * allowing investors to purchase tokens with ether. This contract implements\n * such functionality in its most fundamental form and can be extended to provide additional\n * functionality and/or custom behavior.\n * The external interface represents the basic interface for purchasing tokens, and conforms\n * the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n * the methods to add functionality. Consider using 'super' where appropriate to concatenate\n * behavior.\n */\ncontract Crowdsale is Context, ReentrancyGuard, AccessControl {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    // The token being sold\n    IERC20 private _token;\n\n    // Address where funds are collected\n    address payable private _wallet;\n\n    // How many token units a buyer gets per wei.\n    // The rate is the conversion between wei and the smallest and indivisible token unit.\n    // So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK\n    // 1 wei will give you 1 unit, or 0.001 TOK.\n    uint256 private _rate;\n\n    // Amount of wei raised\n    uint256 private _weiRaised;\n\n   \n\n\n    /**\n     * Event for token purchase logging\n     * @param purchaser who paid for the tokens\n     * @param beneficiary who got the tokens\n     * @param value weis paid for purchase\n     * @param amount amount of tokens purchased\n     */\n    event TokensPurchased(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\n\n    /**\n     * @param rate_ Number of token units a buyer gets per wei\n     * @dev The rate is the conversion between wei and the smallest and indivisible\n     * token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n     * with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n     * @param wallet_ Address where collected funds will be forwarded to\n     * @param token_ Address of the token being sold\n     */\n    constructor (uint256 rate_, address payable wallet_, IERC20 token_) {\n        require(rate_ > 0, \"Crowdsale: rate is 0\");\n        require(wallet_ != address(0), \"Crowdsale: wallet is the zero address\");\n        require(address(token_) != address(0), \"Crowdsale: token is the zero address\");\n\n        _rate = rate_;\n        _wallet = wallet_;\n        _token = token_;\n\n       _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n\n    /**\n     * @dev fallback function ***DO NOT OVERRIDE***\n     * Note that other contracts will transfer funds with a base gas stipend\n     * of 2300, which is not enough to call buyTokens. Consider calling\n     * buyTokens directly when purchasing tokens from a contract.\n     */\n    fallback () external payable {\n        buyTokens(_msgSender());\n    }\n\n    receive () external payable {\n        buyTokens(_msgSender());\n    }\n\n    /**\n     * @return the token being sold.\n     */\n    function token() public view returns (IERC20) {\n        return _token;\n    }\n\n    /**\n     * @return the address where funds are collected.\n     */\n    function wallet() public view returns (address payable) {\n        return _wallet;\n    }\n\n    /**\n     * @return the number of token units a buyer gets per wei.\n     */\n    function rate() public view returns (uint256) {\n        return _rate;\n    }\n\n    /**\n     * @return the amount of wei raised.\n     */\n    function weiRaised() public view returns (uint256) {\n        return _weiRaised;\n    }\n\n    /**\n     * @dev low level token purchase ***DO NOT OVERRIDE***\n     * This function has a non-reentrancy guard, so it shouldn't be called by\n     * another `nonReentrant` function.\n     * @param beneficiary Recipient of the token purchase\n     */\n    function buyTokens(address beneficiary) virtual  public nonReentrant payable {\n        uint256 weiAmount = msg.value;\n        _preValidatePurchase(beneficiary, weiAmount);\n\n        // calculate token amount to be created\n        uint256 tokens = _getTokenAmount(weiAmount);\n\n\n        _processPurchase(beneficiary, tokens);\n        emit TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens);\n\n        _updatePurchasingState(beneficiary, weiAmount);\n\n        _forwardFunds();\n        _postValidatePurchase(beneficiary, weiAmount);\n    }\n\n    /**\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     *     super._preValidatePurchase(beneficiary, weiAmount);\n     *     require(weiRaised().add(weiAmount) <= cap);\n     * @param beneficiary Address performing the token purchase\n     * @param weiAmount Value in wei involved in the purchase\n     */\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) virtual internal view {\n        require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\");\n        require(weiAmount != 0, \"Crowdsale: weiAmount is 0\");\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    }\n\n    /**\n     * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n     * conditions are not met.\n     * @param beneficiary Address performing the token purchase\n     * @param weiAmount Value in wei involved in the purchase\n     */\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount) virtual internal view {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /**\n     * @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n     * its tokens.\n     * @param beneficiary Address performing the token purchase\n     * @param tokenAmount Number of tokens to be emitted\n     */\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) virtual internal {\n        _token.safeTransfer(beneficiary, tokenAmount);\n    }\n\n    /**\n     * @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n     * tokens.\n     * @param beneficiary Address receiving the tokens\n     * @param tokenAmount Number of tokens to be purchased\n     */\n    function _processPurchase(address beneficiary, uint256 tokenAmount) virtual  internal {\n        _deliverTokens(beneficiary, tokenAmount);\n    }\n\n    /**\n     * @dev Override for extensions that require an internal state to check for validity (current user contributions,\n     * etc.)\n     * @param beneficiary Address receiving the tokens\n     * @param weiAmount Value in wei involved in the purchase\n     */\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) virtual internal {\n       \n        _weiRaised.add(weiAmount);   \n        \n    }\n\n    /**\n     * @dev Override to extend the way in which ether is converted to tokens.\n     * @param weiAmount Value in wei to be converted into tokens\n     * @return Number of tokens that can be purchased with the specified _weiAmount\n     */\n    function _getTokenAmount(uint256 weiAmount) virtual internal view returns (uint256) {\n        return weiAmount.mul(_rate);\n    }\n\n    /**\n     * @dev Determines how ETH is stored/forwarded on purchases.\n     */\n    function _forwardFunds() internal {\n        _wallet.transfer(msg.value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e7d9ea421a99da96ab506560e3354c997735689f0a90b8f5fd9309b70f82de7d64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7d9ea421a99da96ab506560e3354c997735689f0a90b8f5fd9309b70f82de7d64736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xD9 0xEA TIMESTAMP BYTE SWAP10 0xDA SWAP7 0xAB POP PUSH6 0x60E3354C9977 CALLDATALOAD PUSH9 0x9F0A90B8F5FD9309B7 0xF DUP3 0xDE PUSH30 0x64736F6C6343000809003300000000000000000000000000000000000000 ",
							"sourceMap": "707:3748:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7d9ea421a99da96ab506560e3354c997735689f0a90b8f5fd9309b70f82de7d64736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xD9 0xEA TIMESTAMP BYTE SWAP10 0xDA SWAP7 0xAB POP PUSH6 0x60E3354C9977 CALLDATALOAD PUSH9 0x9F0A90B8F5FD9309B7 0xF DUP3 0xDE PUSH30 0x64736F6C6343000809003300000000000000000000000000000000000000 ",
							"sourceMap": "707:3748:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7d9ea421a99da96ab506560e3354c997735689f0a90b8f5fd9309b70f82de7d64736f6c63430008090033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220919410102baee4ae49f3fecd64009dc614f68802b33ddab312e079faa4a9a47b64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220919410102baee4ae49f3fecd64009dc614f68802b33ddab312e079faa4a9a47b64736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SWAP5 LT LT 0x2B 0xAE 0xE4 0xAE 0x49 RETURN INVALID 0xCD PUSH5 0x9DC614F6 DUP9 MUL 0xB3 RETURNDATASIZE 0xDA 0xB3 SLT 0xE0 PUSH26 0xFAA4A9A47B64736F6C6343000809003300000000000000000000 ",
							"sourceMap": "194:8111:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220919410102baee4ae49f3fecd64009dc614f68802b33ddab312e079faa4a9a47b64736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SWAP5 LT LT 0x2B 0xAE 0xE4 0xAE 0x49 RETURN INVALID 0xCD PUSH5 0x9DC614F6 DUP9 MUL 0xB3 RETURNDATASIZE 0xDA 0xB3 SLT 0xE0 PUSH26 0xFAA4A9A47B64736F6C6343000809003300000000000000000000 ",
							"sourceMap": "194:8111:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220919410102baee4ae49f3fecd64009dc614f68802b33ddab312e079faa4a9a47b64736f6c63430008090033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b92035b42dcc3aec0b3e4eabd70fbc2c49f312baebbbc38f9fc50feda5de9d5b64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b92035b42dcc3aec0b3e4eabd70fbc2c49f312baebbbc38f9fc50feda5de9d5b64736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 KECCAK256 CALLDATALOAD 0xB4 0x2D 0xCC GASPRICE 0xEC SIGNEXTEND RETURNDATACOPY 0x4E 0xAB 0xD7 0xF 0xBC 0x2C 0x49 RETURN SLT 0xBA 0xEB 0xBB 0xC3 DUP16 SWAP16 0xC5 0xF 0xED 0xA5 0xDE SWAP14 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "161:2235:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b92035b42dcc3aec0b3e4eabd70fbc2c49f312baebbbc38f9fc50feda5de9d5b64736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 KECCAK256 CALLDATALOAD 0xB4 0x2D 0xCC GASPRICE 0xEC SIGNEXTEND RETURNDATACOPY 0x4E 0xAB 0xD7 0xF 0xBC 0x2C 0x49 RETURN SLT 0xBA 0xEB 0xBB 0xC3 DUP16 SWAP16 0xC5 0xF 0xED 0xA5 0xDE SWAP14 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "161:2235:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b92035b42dcc3aec0b3e4eabd70fbc2c49f312baebbbc38f9fc50feda5de9d5b64736f6c63430008090033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201e19bafe281e10afdf28b37c15f3954371a1144e9da491df8d9838cc3b524d1b64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e19bafe281e10afdf28b37c15f3954371a1144e9da491df8d9838cc3b524d1b64736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E NOT 0xBA INVALID 0x28 0x1E LT 0xAF 0xDF 0x28 0xB3 PUSH29 0x15F3954371A1144E9DA491DF8D9838CC3B524D1B64736F6C6343000809 STOP CALLER ",
							"sourceMap": "482:6300:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e19bafe281e10afdf28b37c15f3954371a1144e9da491df8d9838cc3b524d1b64736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E NOT 0xBA INVALID 0x28 0x1E LT 0xAF 0xDF 0x28 0xB3 PUSH29 0x15F3954371A1144E9DA491DF8D9838CC3B524D1B64736F6C6343000809 STOP CALLER ",
							"sourceMap": "482:6300:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e19bafe281e10afdf28b37c15f3954371a1144e9da491df8d9838cc3b524d1b64736f6c63430008090033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/crowdsale/Crowdsale.sol": {
				"Crowdsale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rate_",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "wallet_",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "token_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.",
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"constructor": {
								"details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
								"params": {
									"rate_": "Number of token units a buyer gets per wei",
									"token_": "Address of the token being sold",
									"wallet_": "Address where collected funds will be forwarded to"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "Crowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/crowdsale/Crowdsale.sol\":1110:7995  contract Crowdsale is Context, ReentrancyGuard, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/crowdsale/Crowdsale.sol\":2557:2981  constructor (uint256 rate_, address payable wallet_, IERC20 token_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/crowdsale/Crowdsale.sol\":2651:2652  0 */\n  0x00\n    /* \"contracts/crowdsale/Crowdsale.sol\":2643:2648  rate_ */\n  dup4\n    /* \"contracts/crowdsale/Crowdsale.sol\":2643:2652  rate_ > 0 */\n  gt\n    /* \"contracts/crowdsale/Crowdsale.sol\":2635:2677  require(rate_ > 0, \"Crowdsale: rate is 0\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"contracts/crowdsale/Crowdsale.sol\":2714:2715  0 */\n  0x00\n    /* \"contracts/crowdsale/Crowdsale.sol\":2695:2716  wallet_ != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/crowdsale/Crowdsale.sol\":2695:2702  wallet_ */\n  dup3\n    /* \"contracts/crowdsale/Crowdsale.sol\":2695:2716  wallet_ != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/crowdsale/Crowdsale.sol\":2687:2758  require(wallet_ != address(0), \"Crowdsale: wallet is the zero address\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/crowdsale/Crowdsale.sol\":2803:2804  0 */\n  0x00\n    /* \"contracts/crowdsale/Crowdsale.sol\":2776:2805  address(token_) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/crowdsale/Crowdsale.sol\":2784:2790  token_ */\n  dup2\n    /* \"contracts/crowdsale/Crowdsale.sol\":2776:2805  address(token_) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/crowdsale/Crowdsale.sol\":2768:2846  require(address(token_) != address(0), \"Crowdsale: token is the zero address\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"contracts/crowdsale/Crowdsale.sol\":2865:2870  rate_ */\n  dup3\n    /* \"contracts/crowdsale/Crowdsale.sol\":2857:2862  _rate */\n  0x04\n    /* \"contracts/crowdsale/Crowdsale.sol\":2857:2870  _rate = rate_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/crowdsale/Crowdsale.sol\":2890:2897  wallet_ */\n  dup2\n    /* \"contracts/crowdsale/Crowdsale.sol\":2880:2887  _wallet */\n  0x03\n  0x00\n    /* \"contracts/crowdsale/Crowdsale.sol\":2880:2897  _wallet = wallet_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/crowdsale/Crowdsale.sol\":2916:2922  token_ */\n  dup1\n    /* \"contracts/crowdsale/Crowdsale.sol\":2907:2913  _token */\n  0x02\n  0x00\n    /* \"contracts/crowdsale/Crowdsale.sol\":2907:2922  _token = token_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/crowdsale/Crowdsale.sol\":2932:2974  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"contracts/crowdsale/Crowdsale.sol\":2943:2961  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/crowdsale/Crowdsale.sol\":2963:2973  msg.sender */\n  caller\n    /* \"contracts/crowdsale/Crowdsale.sol\":2932:2942  _setupRole */\n  shl(0x20, tag_18)\n    /* \"contracts/crowdsale/Crowdsale.sol\":2932:2974  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"contracts/crowdsale/Crowdsale.sol\":2557:2981  constructor (uint256 rate_, address payable wallet_, IERC20 token_) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/crowdsale/Crowdsale.sol\":1110:7995  contract Crowdsale is Context, ReentrancyGuard, AccessControl {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:6934  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6902:6927  _grantRole(role, account) */\n  tag_21\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6913:6917  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6919:6926  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6902:6912  _grantRole */\n  shl(0x20, tag_22)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6902:6927  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:6934  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7474:7707  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_22:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7579  hasRole(role, account) */\n  tag_24\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7565:7569  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7571:7578  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7564  hasRole */\n  shl(0x20, tag_25)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7579  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7701  if (!hasRole(role, account)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7627:7631  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7601  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7607  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7606  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7607  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7615  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7624  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7616:7623  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7624  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7631  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7689  _msgSender() */\n  tag_27\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7687  _msgSender */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7689  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7668:7675  account */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7662:7666  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7701  if (!hasRole(role, account)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7474:7707  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_32:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_34:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_35:\n    /* \"#utility.yul\":490:514   */\n  tag_58\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_34\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_59:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_36:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_61\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_35\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_37:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:930   */\ntag_38:\n    /* \"#utility.yul\":871:878   */\n  0x00\n    /* \"#utility.yul\":900:924   */\n  tag_64\n    /* \"#utility.yul\":918:923   */\n  dup3\n    /* \"#utility.yul\":900:924   */\n  tag_37\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":889:924   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:930   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":936:1074   */\ntag_39:\n    /* \"#utility.yul\":1017:1049   */\n  tag_66\n    /* \"#utility.yul\":1043:1048   */\n  dup2\n    /* \"#utility.yul\":1017:1049   */\n  tag_38\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1010:1015   */\n  dup2\n    /* \"#utility.yul\":1007:1050   */\n  eq\n    /* \"#utility.yul\":997:1068   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1064:1065   */\n  0x00\n    /* \"#utility.yul\":1061:1062   */\n  dup1\n    /* \"#utility.yul\":1054:1066   */\n  revert\n    /* \"#utility.yul\":997:1068   */\ntag_67:\n    /* \"#utility.yul\":936:1074   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1080:1239   */\ntag_40:\n    /* \"#utility.yul\":1145:1150   */\n  0x00\n    /* \"#utility.yul\":1176:1182   */\n  dup2\n    /* \"#utility.yul\":1170:1183   */\n  mload\n    /* \"#utility.yul\":1161:1183   */\n  swap1\n  pop\n    /* \"#utility.yul\":1192:1233   */\n  tag_69\n    /* \"#utility.yul\":1227:1232   */\n  dup2\n    /* \"#utility.yul\":1192:1233   */\n  tag_39\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1080:1239   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1245:1341   */\ntag_41:\n    /* \"#utility.yul\":1282:1289   */\n  0x00\n    /* \"#utility.yul\":1311:1335   */\n  tag_71\n    /* \"#utility.yul\":1329:1334   */\n  dup3\n    /* \"#utility.yul\":1311:1335   */\n  tag_37\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1300:1335   */\n  swap1\n  pop\n    /* \"#utility.yul\":1245:1341   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1347:1457   */\ntag_42:\n    /* \"#utility.yul\":1398:1405   */\n  0x00\n    /* \"#utility.yul\":1427:1451   */\n  tag_73\n    /* \"#utility.yul\":1445:1450   */\n  dup3\n    /* \"#utility.yul\":1427:1451   */\n  tag_41\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1416:1451   */\n  swap1\n  pop\n    /* \"#utility.yul\":1347:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1613   */\ntag_43:\n    /* \"#utility.yul\":1550:1588   */\n  tag_75\n    /* \"#utility.yul\":1582:1587   */\n  dup2\n    /* \"#utility.yul\":1550:1588   */\n  tag_42\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1543:1548   */\n  dup2\n    /* \"#utility.yul\":1540:1589   */\n  eq\n    /* \"#utility.yul\":1530:1607   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1603:1604   */\n  0x00\n    /* \"#utility.yul\":1600:1601   */\n  dup1\n    /* \"#utility.yul\":1593:1605   */\n  revert\n    /* \"#utility.yul\":1530:1607   */\ntag_76:\n    /* \"#utility.yul\":1463:1613   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1619:1790   */\ntag_44:\n    /* \"#utility.yul\":1690:1695   */\n  0x00\n    /* \"#utility.yul\":1721:1727   */\n  dup2\n    /* \"#utility.yul\":1715:1728   */\n  mload\n    /* \"#utility.yul\":1706:1728   */\n  swap1\n  pop\n    /* \"#utility.yul\":1737:1784   */\n  tag_78\n    /* \"#utility.yul\":1778:1783   */\n  dup2\n    /* \"#utility.yul\":1737:1784   */\n  tag_43\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1619:1790   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1796:2503   */\ntag_3:\n    /* \"#utility.yul\":1906:1912   */\n  0x00\n    /* \"#utility.yul\":1914:1920   */\n  dup1\n    /* \"#utility.yul\":1922:1928   */\n  0x00\n    /* \"#utility.yul\":1971:1973   */\n  0x60\n    /* \"#utility.yul\":1959:1968   */\n  dup5\n    /* \"#utility.yul\":1950:1957   */\n  dup7\n    /* \"#utility.yul\":1946:1969   */\n  sub\n    /* \"#utility.yul\":1942:1974   */\n  slt\n    /* \"#utility.yul\":1939:2058   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":1977:2056   */\n  tag_81\n  tag_32\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1939:2058   */\ntag_80:\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2122:2186   */\n  tag_82\n    /* \"#utility.yul\":2178:2185   */\n  dup7\n    /* \"#utility.yul\":2169:2175   */\n  dup3\n    /* \"#utility.yul\":2158:2167   */\n  dup8\n    /* \"#utility.yul\":2154:2176   */\n  add\n    /* \"#utility.yul\":2122:2186   */\n  tag_36\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2112:2186   */\n  swap4\n  pop\n    /* \"#utility.yul\":2068:2196   */\n  pop\n    /* \"#utility.yul\":2235:2237   */\n  0x20\n    /* \"#utility.yul\":2261:2333   */\n  tag_83\n    /* \"#utility.yul\":2325:2332   */\n  dup7\n    /* \"#utility.yul\":2316:2322   */\n  dup3\n    /* \"#utility.yul\":2305:2314   */\n  dup8\n    /* \"#utility.yul\":2301:2323   */\n  add\n    /* \"#utility.yul\":2261:2333   */\n  tag_40\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2251:2333   */\n  swap3\n  pop\n    /* \"#utility.yul\":2206:2343   */\n  pop\n    /* \"#utility.yul\":2382:2384   */\n  0x40\n    /* \"#utility.yul\":2408:2486   */\n  tag_84\n    /* \"#utility.yul\":2478:2485   */\n  dup7\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2458:2467   */\n  dup8\n    /* \"#utility.yul\":2454:2476   */\n  add\n    /* \"#utility.yul\":2408:2486   */\n  tag_44\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2398:2486   */\n  swap2\n  pop\n    /* \"#utility.yul\":2353:2496   */\n  pop\n    /* \"#utility.yul\":1796:2503   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2509:2678   */\ntag_45:\n    /* \"#utility.yul\":2593:2604   */\n  0x00\n    /* \"#utility.yul\":2627:2633   */\n  dup3\n    /* \"#utility.yul\":2622:2625   */\n  dup3\n    /* \"#utility.yul\":2615:2634   */\n  mstore\n    /* \"#utility.yul\":2667:2671   */\n  0x20\n    /* \"#utility.yul\":2662:2665   */\n  dup3\n    /* \"#utility.yul\":2658:2672   */\n  add\n    /* \"#utility.yul\":2643:2672   */\n  swap1\n  pop\n    /* \"#utility.yul\":2509:2678   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2684:2854   */\ntag_46:\n    /* \"#utility.yul\":2824:2846   */\n  0x43726f776473616c653a20726174652069732030000000000000000000000000\n    /* \"#utility.yul\":2820:2821   */\n  0x00\n    /* \"#utility.yul\":2812:2818   */\n  dup3\n    /* \"#utility.yul\":2808:2822   */\n  add\n    /* \"#utility.yul\":2801:2847   */\n  mstore\n    /* \"#utility.yul\":2684:2854   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2860:3226   */\ntag_47:\n    /* \"#utility.yul\":3002:3005   */\n  0x00\n    /* \"#utility.yul\":3023:3090   */\n  tag_88\n    /* \"#utility.yul\":3087:3089   */\n  0x14\n    /* \"#utility.yul\":3082:3085   */\n  dup4\n    /* \"#utility.yul\":3023:3090   */\n  tag_45\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3016:3090   */\n  swap2\n  pop\n    /* \"#utility.yul\":3099:3192   */\n  tag_89\n    /* \"#utility.yul\":3188:3191   */\n  dup3\n    /* \"#utility.yul\":3099:3192   */\n  tag_46\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3217:3219   */\n  0x20\n    /* \"#utility.yul\":3212:3215   */\n  dup3\n    /* \"#utility.yul\":3208:3220   */\n  add\n    /* \"#utility.yul\":3201:3220   */\n  swap1\n  pop\n    /* \"#utility.yul\":2860:3226   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3232:3651   */\ntag_10:\n    /* \"#utility.yul\":3398:3402   */\n  0x00\n    /* \"#utility.yul\":3436:3438   */\n  0x20\n    /* \"#utility.yul\":3425:3434   */\n  dup3\n    /* \"#utility.yul\":3421:3439   */\n  add\n    /* \"#utility.yul\":3413:3439   */\n  swap1\n  pop\n    /* \"#utility.yul\":3485:3494   */\n  dup2\n    /* \"#utility.yul\":3479:3483   */\n  dup2\n    /* \"#utility.yul\":3475:3495   */\n  sub\n    /* \"#utility.yul\":3471:3472   */\n  0x00\n    /* \"#utility.yul\":3460:3469   */\n  dup4\n    /* \"#utility.yul\":3456:3473   */\n  add\n    /* \"#utility.yul\":3449:3496   */\n  mstore\n    /* \"#utility.yul\":3513:3644   */\n  tag_91\n    /* \"#utility.yul\":3639:3643   */\n  dup2\n    /* \"#utility.yul\":3513:3644   */\n  tag_47\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3505:3644   */\n  swap1\n  pop\n    /* \"#utility.yul\":3232:3651   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3657:3881   */\ntag_48:\n    /* \"#utility.yul\":3797:3831   */\n  0x43726f776473616c653a2077616c6c657420697320746865207a65726f206164\n    /* \"#utility.yul\":3793:3794   */\n  0x00\n    /* \"#utility.yul\":3785:3791   */\n  dup3\n    /* \"#utility.yul\":3781:3795   */\n  add\n    /* \"#utility.yul\":3774:3832   */\n  mstore\n    /* \"#utility.yul\":3866:3873   */\n  0x6472657373000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3861:3863   */\n  0x20\n    /* \"#utility.yul\":3853:3859   */\n  dup3\n    /* \"#utility.yul\":3849:3864   */\n  add\n    /* \"#utility.yul\":3842:3874   */\n  mstore\n    /* \"#utility.yul\":3657:3881   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3887:4253   */\ntag_49:\n    /* \"#utility.yul\":4029:4032   */\n  0x00\n    /* \"#utility.yul\":4050:4117   */\n  tag_94\n    /* \"#utility.yul\":4114:4116   */\n  0x25\n    /* \"#utility.yul\":4109:4112   */\n  dup4\n    /* \"#utility.yul\":4050:4117   */\n  tag_45\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4043:4117   */\n  swap2\n  pop\n    /* \"#utility.yul\":4126:4219   */\n  tag_95\n    /* \"#utility.yul\":4215:4218   */\n  dup3\n    /* \"#utility.yul\":4126:4219   */\n  tag_48\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4244:4246   */\n  0x40\n    /* \"#utility.yul\":4239:4242   */\n  dup3\n    /* \"#utility.yul\":4235:4247   */\n  add\n    /* \"#utility.yul\":4228:4247   */\n  swap1\n  pop\n    /* \"#utility.yul\":3887:4253   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4259:4678   */\ntag_13:\n    /* \"#utility.yul\":4425:4429   */\n  0x00\n    /* \"#utility.yul\":4463:4465   */\n  0x20\n    /* \"#utility.yul\":4452:4461   */\n  dup3\n    /* \"#utility.yul\":4448:4466   */\n  add\n    /* \"#utility.yul\":4440:4466   */\n  swap1\n  pop\n    /* \"#utility.yul\":4512:4521   */\n  dup2\n    /* \"#utility.yul\":4506:4510   */\n  dup2\n    /* \"#utility.yul\":4502:4522   */\n  sub\n    /* \"#utility.yul\":4498:4499   */\n  0x00\n    /* \"#utility.yul\":4487:4496   */\n  dup4\n    /* \"#utility.yul\":4483:4500   */\n  add\n    /* \"#utility.yul\":4476:4523   */\n  mstore\n    /* \"#utility.yul\":4540:4671   */\n  tag_97\n    /* \"#utility.yul\":4666:4670   */\n  dup2\n    /* \"#utility.yul\":4540:4671   */\n  tag_49\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4532:4671   */\n  swap1\n  pop\n    /* \"#utility.yul\":4259:4678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4684:4907   */\ntag_50:\n    /* \"#utility.yul\":4824:4858   */\n  0x43726f776473616c653a20746f6b656e20697320746865207a65726f20616464\n    /* \"#utility.yul\":4820:4821   */\n  0x00\n    /* \"#utility.yul\":4812:4818   */\n  dup3\n    /* \"#utility.yul\":4808:4822   */\n  add\n    /* \"#utility.yul\":4801:4859   */\n  mstore\n    /* \"#utility.yul\":4893:4899   */\n  0x7265737300000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4888:4890   */\n  0x20\n    /* \"#utility.yul\":4880:4886   */\n  dup3\n    /* \"#utility.yul\":4876:4891   */\n  add\n    /* \"#utility.yul\":4869:4900   */\n  mstore\n    /* \"#utility.yul\":4684:4907   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4913:5279   */\ntag_51:\n    /* \"#utility.yul\":5055:5058   */\n  0x00\n    /* \"#utility.yul\":5076:5143   */\n  tag_100\n    /* \"#utility.yul\":5140:5142   */\n  0x24\n    /* \"#utility.yul\":5135:5138   */\n  dup4\n    /* \"#utility.yul\":5076:5143   */\n  tag_45\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5069:5143   */\n  swap2\n  pop\n    /* \"#utility.yul\":5152:5245   */\n  tag_101\n    /* \"#utility.yul\":5241:5244   */\n  dup3\n    /* \"#utility.yul\":5152:5245   */\n  tag_50\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5270:5272   */\n  0x40\n    /* \"#utility.yul\":5265:5268   */\n  dup3\n    /* \"#utility.yul\":5261:5273   */\n  add\n    /* \"#utility.yul\":5254:5273   */\n  swap1\n  pop\n    /* \"#utility.yul\":4913:5279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5285:5704   */\ntag_16:\n    /* \"#utility.yul\":5451:5455   */\n  0x00\n    /* \"#utility.yul\":5489:5491   */\n  0x20\n    /* \"#utility.yul\":5478:5487   */\n  dup3\n    /* \"#utility.yul\":5474:5492   */\n  add\n    /* \"#utility.yul\":5466:5492   */\n  swap1\n  pop\n    /* \"#utility.yul\":5538:5547   */\n  dup2\n    /* \"#utility.yul\":5532:5536   */\n  dup2\n    /* \"#utility.yul\":5528:5548   */\n  sub\n    /* \"#utility.yul\":5524:5525   */\n  0x00\n    /* \"#utility.yul\":5513:5522   */\n  dup4\n    /* \"#utility.yul\":5509:5526   */\n  add\n    /* \"#utility.yul\":5502:5549   */\n  mstore\n    /* \"#utility.yul\":5566:5697   */\n  tag_103\n    /* \"#utility.yul\":5692:5696   */\n  dup2\n    /* \"#utility.yul\":5566:5697   */\n  tag_51\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5558:5697   */\n  swap1\n  pop\n    /* \"#utility.yul\":5285:5704   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/crowdsale/Crowdsale.sol\":1110:7995  contract Crowdsale is Context, ReentrancyGuard, AccessControl {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/crowdsale/Crowdsale.sol\":1110:7995  contract Crowdsale is Context, ReentrancyGuard, AccessControl {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x521eb273\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x521eb273\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xec8ac4d8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4042b66f\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/crowdsale/Crowdsale.sol\":3383:3406  buyTokens(_msgSender()) */\n      tag_18\n        /* \"contracts/crowdsale/Crowdsale.sol\":3393:3405  _msgSender() */\n      tag_19\n        /* \"contracts/crowdsale/Crowdsale.sol\":3393:3403  _msgSender */\n      tag_20\n        /* \"contracts/crowdsale/Crowdsale.sol\":3393:3405  _msgSender() */\n      jump\t// in\n    tag_19:\n        /* \"contracts/crowdsale/Crowdsale.sol\":3383:3392  buyTokens */\n      tag_21\n        /* \"contracts/crowdsale/Crowdsale.sol\":3383:3406  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_18:\n        /* \"contracts/crowdsale/Crowdsale.sol\":1110:7995  contract Crowdsale is Context, ReentrancyGuard, AccessControl {... */\n      stop\n    tag_2:\n        /* \"contracts/crowdsale/Crowdsale.sol\":3309:3332  buyTokens(_msgSender()) */\n      tag_24\n        /* \"contracts/crowdsale/Crowdsale.sol\":3319:3331  _msgSender() */\n      tag_25\n        /* \"contracts/crowdsale/Crowdsale.sol\":3319:3329  _msgSender */\n      tag_20\n        /* \"contracts/crowdsale/Crowdsale.sol\":3319:3331  _msgSender() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/crowdsale/Crowdsale.sol\":3309:3318  buyTokens */\n      tag_21\n        /* \"contracts/crowdsale/Crowdsale.sol\":3309:3332  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_24:\n        /* \"contracts/crowdsale/Crowdsale.sol\":1110:7995  contract Crowdsale is Context, ReentrancyGuard, AccessControl {... */\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/crowdsale/Crowdsale.sol\":3796:3871  function rate() public view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4816:4961  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5925:6139  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/crowdsale/Crowdsale.sol\":3934:4019  function weiRaised() public view returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/crowdsale/Crowdsale.sol\":3624:3711  function wallet() public view returns (address payable) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5241:5388  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/crowdsale/Crowdsale.sol\":4276:4818  function buyTokens(address beneficiary) virtual  public nonReentrant payable {... */\n    tag_13:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_21\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/crowdsale/Crowdsale.sol\":3472:3548  function token() public view returns (IERC20) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/crowdsale/Crowdsale.sol\":4276:4818  function buyTokens(address beneficiary) virtual  public nonReentrant payable {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/crowdsale/Crowdsale.sol\":4363:4380  uint256 weiAmount */\n      0x00\n        /* \"contracts/crowdsale/Crowdsale.sol\":4383:4392  msg.value */\n      callvalue\n        /* \"contracts/crowdsale/Crowdsale.sol\":4363:4392  uint256 weiAmount = msg.value */\n      swap1\n      pop\n        /* \"contracts/crowdsale/Crowdsale.sol\":4402:4446  _preValidatePurchase(beneficiary, weiAmount) */\n      tag_90\n        /* \"contracts/crowdsale/Crowdsale.sol\":4423:4434  beneficiary */\n      dup3\n        /* \"contracts/crowdsale/Crowdsale.sol\":4436:4445  weiAmount */\n      dup3\n        /* \"contracts/crowdsale/Crowdsale.sol\":4402:4422  _preValidatePurchase */\n      tag_91\n        /* \"contracts/crowdsale/Crowdsale.sol\":4402:4446  _preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_90:\n        /* \"contracts/crowdsale/Crowdsale.sol\":4505:4519  uint256 tokens */\n      0x00\n        /* \"contracts/crowdsale/Crowdsale.sol\":4522:4548  _getTokenAmount(weiAmount) */\n      tag_92\n        /* \"contracts/crowdsale/Crowdsale.sol\":4538:4547  weiAmount */\n      dup3\n        /* \"contracts/crowdsale/Crowdsale.sol\":4522:4537  _getTokenAmount */\n      tag_93\n        /* \"contracts/crowdsale/Crowdsale.sol\":4522:4548  _getTokenAmount(weiAmount) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/crowdsale/Crowdsale.sol\":4505:4548  uint256 tokens = _getTokenAmount(weiAmount) */\n      swap1\n      pop\n        /* \"contracts/crowdsale/Crowdsale.sol\":4560:4597  _processPurchase(beneficiary, tokens) */\n      tag_94\n        /* \"contracts/crowdsale/Crowdsale.sol\":4577:4588  beneficiary */\n      dup4\n        /* \"contracts/crowdsale/Crowdsale.sol\":4590:4596  tokens */\n      dup3\n        /* \"contracts/crowdsale/Crowdsale.sol\":4560:4576  _processPurchase */\n      tag_95\n        /* \"contracts/crowdsale/Crowdsale.sol\":4560:4597  _processPurchase(beneficiary, tokens) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/crowdsale/Crowdsale.sol\":4642:4653  beneficiary */\n      dup3\n        /* \"contracts/crowdsale/Crowdsale.sol\":4612:4673  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale/Crowdsale.sol\":4628:4640  _msgSender() */\n      tag_96\n        /* \"contracts/crowdsale/Crowdsale.sol\":4628:4638  _msgSender */\n      tag_20\n        /* \"contracts/crowdsale/Crowdsale.sol\":4628:4640  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"contracts/crowdsale/Crowdsale.sol\":4612:4673  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b\n        /* \"contracts/crowdsale/Crowdsale.sol\":4655:4664  weiAmount */\n      dup5\n        /* \"contracts/crowdsale/Crowdsale.sol\":4666:4672  tokens */\n      dup5\n        /* \"contracts/crowdsale/Crowdsale.sol\":4612:4673  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      mload(0x40)\n      tag_97\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/crowdsale/Crowdsale.sol\":4684:4730  _updatePurchasingState(beneficiary, weiAmount) */\n      tag_99\n        /* \"contracts/crowdsale/Crowdsale.sol\":4707:4718  beneficiary */\n      dup4\n        /* \"contracts/crowdsale/Crowdsale.sol\":4720:4729  weiAmount */\n      dup4\n        /* \"contracts/crowdsale/Crowdsale.sol\":4684:4706  _updatePurchasingState */\n      tag_100\n        /* \"contracts/crowdsale/Crowdsale.sol\":4684:4730  _updatePurchasingState(beneficiary, weiAmount) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/crowdsale/Crowdsale.sol\":4741:4756  _forwardFunds() */\n      tag_101\n        /* \"contracts/crowdsale/Crowdsale.sol\":4741:4754  _forwardFunds */\n      tag_102\n        /* \"contracts/crowdsale/Crowdsale.sol\":4741:4756  _forwardFunds() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/crowdsale/Crowdsale.sol\":4766:4811  _postValidatePurchase(beneficiary, weiAmount) */\n      tag_103\n        /* \"contracts/crowdsale/Crowdsale.sol\":4788:4799  beneficiary */\n      dup4\n        /* \"contracts/crowdsale/Crowdsale.sol\":4801:4810  weiAmount */\n      dup4\n        /* \"contracts/crowdsale/Crowdsale.sol\":4766:4787  _postValidatePurchase */\n      tag_104\n        /* \"contracts/crowdsale/Crowdsale.sol\":4766:4811  _postValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/crowdsale/Crowdsale.sol\":4353:4818  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/crowdsale/Crowdsale.sol\":4276:4818  function buyTokens(address beneficiary) virtual  public nonReentrant payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2729:2761  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2725  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_106\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2789:2800  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2788  super.supportsInterface */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4497  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4498:4502  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4484:4513  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale/Crowdsale.sol\":3796:3871  function rate() public view returns (uint256) {... */\n    tag_42:\n        /* \"contracts/crowdsale/Crowdsale.sol\":3833:3840  uint256 */\n      0x00\n        /* \"contracts/crowdsale/Crowdsale.sol\":3859:3864  _rate */\n      sload(0x04)\n        /* \"contracts/crowdsale/Crowdsale.sol\":3852:3864  return _rate */\n      swap1\n      pop\n        /* \"contracts/crowdsale/Crowdsale.sol\":3796:3871  function rate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4816:4961  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4899:4917  getRoleAdmin(role) */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4912:4916  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4899:4911  getRoleAdmin */\n      tag_37\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4899:4917  getRoleAdmin(role) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:4954  _grantRole(role, account) */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4940:4944  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4946:4953  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:4939  _grantRole */\n      tag_117\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:4954  _grantRole(role, account) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4816:4961  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5925:6139  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6031:6043  _msgSender() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6031:6041  _msgSender */\n      tag_20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6031:6043  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6020:6043  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6020:6027  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6020:6043  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6012:6095  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6106:6132  _revokeRole(role, account) */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6118:6122  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6124:6131  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6106:6117  _revokeRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6106:6132  _revokeRole(role, account) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5925:6139  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale/Crowdsale.sol\":3934:4019  function weiRaised() public view returns (uint256) {... */\n    tag_56:\n        /* \"contracts/crowdsale/Crowdsale.sol\":3976:3983  uint256 */\n      0x00\n        /* \"contracts/crowdsale/Crowdsale.sol\":4002:4012  _weiRaised */\n      sload(0x05)\n        /* \"contracts/crowdsale/Crowdsale.sol\":3995:4012  return _weiRaised */\n      swap1\n      pop\n        /* \"contracts/crowdsale/Crowdsale.sol\":3934:4019  function weiRaised() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/crowdsale/Crowdsale.sol\":3624:3711  function wallet() public view returns (address payable) {... */\n    tag_60:\n        /* \"contracts/crowdsale/Crowdsale.sol\":3663:3678  address payable */\n      0x00\n        /* \"contracts/crowdsale/Crowdsale.sol\":3697:3704  _wallet */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale/Crowdsale.sol\":3690:3704  return _wallet */\n      swap1\n      pop\n        /* \"contracts/crowdsale/Crowdsale.sol\":3624:3711  function wallet() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5241:5388  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5325:5343  getRoleAdmin(role) */\n      tag_128\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5338:5342  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5325:5337  getRoleAdmin */\n      tag_37\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5325:5343  getRoleAdmin(role) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5355:5381  _revokeRole(role, account) */\n      tag_132\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5367:5371  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5373:5380  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5355:5366  _revokeRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5355:5381  _revokeRole(role, account) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5241:5388  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale/Crowdsale.sol\":3472:3548  function token() public view returns (IERC20) {... */\n    tag_81:\n        /* \"contracts/crowdsale/Crowdsale.sol\":3510:3516  IERC20 */\n      0x00\n        /* \"contracts/crowdsale/Crowdsale.sol\":3535:3541  _token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale/Crowdsale.sol\":3528:3541  return _token */\n      swap1\n      pop\n        /* \"contracts/crowdsale/Crowdsale.sol\":3472:3548  function token() public view returns (IERC20) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/crowdsale/Crowdsale.sol\":5360:5744  function _preValidatePurchase(address beneficiary, uint256 weiAmount) virtual internal view {... */\n    tag_91:\n        /* \"contracts/crowdsale/Crowdsale.sol\":5493:5494  0 */\n      0x00\n        /* \"contracts/crowdsale/Crowdsale.sol\":5470:5495  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale/Crowdsale.sol\":5470:5481  beneficiary */\n      dup3\n        /* \"contracts/crowdsale/Crowdsale.sol\":5470:5495  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/crowdsale/Crowdsale.sol\":5462:5542  require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/crowdsale/Crowdsale.sol\":5573:5574  0 */\n      0x00\n        /* \"contracts/crowdsale/Crowdsale.sol\":5560:5569  weiAmount */\n      dup2\n        /* \"contracts/crowdsale/Crowdsale.sol\":5560:5574  weiAmount != 0 */\n      eq\n      iszero\n        /* \"contracts/crowdsale/Crowdsale.sol\":5552:5604  require(weiAmount != 0, \"Crowdsale: weiAmount is 0\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/crowdsale/Crowdsale.sol\":5360:5744  function _preValidatePurchase(address beneficiary, uint256 weiAmount) virtual internal view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale/Crowdsale.sol\":7700:7828  function _getTokenAmount(uint256 weiAmount) virtual internal view returns (uint256) {... */\n    tag_93:\n        /* \"contracts/crowdsale/Crowdsale.sol\":7775:7782  uint256 */\n      0x00\n        /* \"contracts/crowdsale/Crowdsale.sol\":7801:7821  weiAmount.mul(_rate) */\n      tag_142\n        /* \"contracts/crowdsale/Crowdsale.sol\":7815:7820  _rate */\n      sload(0x04)\n        /* \"contracts/crowdsale/Crowdsale.sol\":7801:7810  weiAmount */\n      dup4\n        /* \"contracts/crowdsale/Crowdsale.sol\":7801:7814  weiAmount.mul */\n      tag_143\n      swap1\n        /* \"contracts/crowdsale/Crowdsale.sol\":7801:7821  weiAmount.mul(_rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"contracts/crowdsale/Crowdsale.sol\":7794:7821  return weiAmount.mul(_rate) */\n      swap1\n      pop\n        /* \"contracts/crowdsale/Crowdsale.sol\":7700:7828  function _getTokenAmount(uint256 weiAmount) virtual internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale/Crowdsale.sol\":6887:7030  function _processPurchase(address beneficiary, uint256 tokenAmount) virtual  internal {... */\n    tag_95:\n        /* \"contracts/crowdsale/Crowdsale.sol\":6983:7023  _deliverTokens(beneficiary, tokenAmount) */\n      tag_145\n        /* \"contracts/crowdsale/Crowdsale.sol\":6998:7009  beneficiary */\n      dup3\n        /* \"contracts/crowdsale/Crowdsale.sol\":7011:7022  tokenAmount */\n      dup3\n        /* \"contracts/crowdsale/Crowdsale.sol\":6983:6997  _deliverTokens */\n      tag_146\n        /* \"contracts/crowdsale/Crowdsale.sol\":6983:7023  _deliverTokens(beneficiary, tokenAmount) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/crowdsale/Crowdsale.sol\":6887:7030  function _processPurchase(address beneficiary, uint256 tokenAmount) virtual  internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale/Crowdsale.sol\":7300:7451  function _updatePurchasingState(address beneficiary, uint256 weiAmount) virtual internal {... */\n    tag_100:\n        /* \"contracts/crowdsale/Crowdsale.sol\":7407:7432  _weiRaised.add(weiAmount) */\n      tag_148\n        /* \"contracts/crowdsale/Crowdsale.sol\":7422:7431  weiAmount */\n      dup2\n        /* \"contracts/crowdsale/Crowdsale.sol\":7407:7417  _weiRaised */\n      sload(0x05)\n        /* \"contracts/crowdsale/Crowdsale.sol\":7407:7421  _weiRaised.add */\n      tag_149\n      swap1\n        /* \"contracts/crowdsale/Crowdsale.sol\":7407:7432  _weiRaised.add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n      pop\n        /* \"contracts/crowdsale/Crowdsale.sol\":7300:7451  function _updatePurchasingState(address beneficiary, uint256 weiAmount) virtual internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale/Crowdsale.sol\":7915:7993  function _forwardFunds() internal {... */\n    tag_102:\n        /* \"contracts/crowdsale/Crowdsale.sol\":7959:7966  _wallet */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale/Crowdsale.sol\":7959:7975  _wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale/Crowdsale.sol\":7959:7986  _wallet.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/crowdsale/Crowdsale.sol\":7976:7985  msg.value */\n      callvalue\n        /* \"contracts/crowdsale/Crowdsale.sol\":7959:7986  _wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n        /* \"contracts/crowdsale/Crowdsale.sol\":7915:7993  function _forwardFunds() internal {... */\n      jump\t// out\n        /* \"contracts/crowdsale/Crowdsale.sol\":6039:6196  function _postValidatePurchase(address beneficiary, uint256 weiAmount) virtual internal view {... */\n    tag_104:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_156\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3427  _msgSender */\n      tag_20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7474:7707  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7579  hasRole(role, account) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7565:7569  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7571:7578  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7564  hasRole */\n      tag_66\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7579  hasRole(role, account) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7701  if (!hasRole(role, account)) {... */\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7627:7631  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7601  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7607  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7606  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7607  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7615  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7624  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7616:7623  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7624  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7631  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7689  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7687  _msgSender */\n      tag_20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7689  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7668:7675  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7662:7666  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7701  if (!hasRole(role, account)) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7474:7707  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7878:8112  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7961:7983  hasRole(role, account) */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7969:7973  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7975:7982  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7961:7968  hasRole */\n      tag_66\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7961:7983  hasRole(role, account) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7957:8106  if (hasRole(role, account)) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8031:8036  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8005  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8011  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8006:8010  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8011  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8019  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8028  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8020:8027  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8028  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8036  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8082:8094  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8082:8092  _msgSender */\n      tag_20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8082:8094  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8055:8095  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8073:8080  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8055:8095  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8067:8071  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8055:8095  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7957:8106  if (hasRole(role, account)) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7878:8112  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale/Crowdsale.sol\":6476:6621  function _deliverTokens(address beneficiary, uint256 tokenAmount) virtual internal {... */\n    tag_146:\n        /* \"contracts/crowdsale/Crowdsale.sol\":6569:6614  _token.safeTransfer(beneficiary, tokenAmount) */\n      tag_171\n        /* \"contracts/crowdsale/Crowdsale.sol\":6589:6600  beneficiary */\n      dup3\n        /* \"contracts/crowdsale/Crowdsale.sol\":6602:6613  tokenAmount */\n      dup3\n        /* \"contracts/crowdsale/Crowdsale.sol\":6569:6575  _token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale/Crowdsale.sol\":6569:6588  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n      swap1\n        /* \"contracts/crowdsale/Crowdsale.sol\":6569:6614  _token.safeTransfer(beneficiary, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contracts/crowdsale/Crowdsale.sol\":6476:6621  function _deliverTokens(address beneficiary, uint256 tokenAmount) virtual internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_174\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_177\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_66\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      tag_179\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4017:4024  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4027:4029  20 */\n      0x14\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_180\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      tag_181\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4129:4133  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4121:4134  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4136:4138  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4120  Strings.toHexString */\n      tag_180\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4161  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_182\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4193  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":925:948  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":950:952  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":954:959  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_188\n      swap3\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:894  _callOptionalReturn */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1652:2093  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1727:1740  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1771  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1797:1798  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1788:1794  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1784:1785  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1784:1794  2 * length */\n      tag_192\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1784:1798  2 * length + 2 */\n      tag_193\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1774:1799  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_194\n      jumpi\n      tag_195\n      tag_196\n      jump\t// in\n    tag_195:\n    tag_194:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_197\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_197:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1799  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1809:1824  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1809:1815  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1816:1817  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1809:1818  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_198\n      jumpi\n      tag_199\n      tag_200\n      jump\t// in\n    tag_199:\n    tag_198:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1809:1824  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1834:1849  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1834:1840  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1841:1842  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1834:1843  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_201\n      jumpi\n      tag_202\n      tag_200\n      jump\t// in\n    tag_202:\n    tag_201:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1834:1849  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1864:1873  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1889:1890  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1880:1886  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1876:1877  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1876:1886  2 * length */\n      tag_206\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1876:1890  2 * length + 1 */\n      tag_207\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1864:1890  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1896:1897  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1892:1893  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1892:1897  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1930:1942  _HEX_SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1951:1954  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1943:1948  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1943:1954  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1930:1955  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_208\n      jumpi\n      tag_209\n      tag_200\n      jump\t// in\n    tag_209:\n    tag_208:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1924  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1925:1926  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1927  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_210\n      jumpi\n      tag_211\n      tag_200\n      jump\t// in\n    tag_211:\n    tag_210:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1955  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1979:1980  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1969:1980  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1899:1902  --i */\n      dup1\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_203)\n    tag_204:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2017:2018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2008:2013  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2008:2018  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2055  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2079:2085  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2065:2086  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1652:2093  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_219\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4295:4296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4285  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3817:4453  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_227\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_228\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_233\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_234\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_242\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_241)\n    tag_242:\n      0x60\n      swap2\n      pop\n    tag_241:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_243\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_244\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_246)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8120:8130  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8114:8131  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8180:8195  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8167:8177  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8163:8165  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8159:8178  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8152:8196  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8259:8271  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_246:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_253:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_255:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_256:\n        /* \"#utility.yul\":561:584   */\n      tag_317\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_255\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_318:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_257:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_320\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_256\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_29:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_323\n      tag_253\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":833:952   */\n    tag_322:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_324\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_257\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_258:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_259:\n        /* \"#utility.yul\":1268:1289   */\n      tag_327\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_258\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_32:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_329\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_259\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_260:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_261:\n        /* \"#utility.yul\":1674:1698   */\n      tag_332\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_260\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_333:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_262:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_335\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_261\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_36:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_338\n      tag_253\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1950:2069   */\n    tag_337:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_339\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_262\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_263:\n        /* \"#utility.yul\":2296:2320   */\n      tag_341\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_260\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_39:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_343\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_263\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2638   */\n    tag_264:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2627:2632   */\n      dup2\n        /* \"#utility.yul\":2616:2632   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2644:2762   */\n    tag_265:\n        /* \"#utility.yul\":2731:2755   */\n      tag_346\n        /* \"#utility.yul\":2749:2754   */\n      dup2\n        /* \"#utility.yul\":2731:2755   */\n      tag_264\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2726:2729   */\n      dup3\n        /* \"#utility.yul\":2719:2756   */\n      mstore\n        /* \"#utility.yul\":2644:2762   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2768:2990   */\n    tag_44:\n        /* \"#utility.yul\":2861:2865   */\n      0x00\n        /* \"#utility.yul\":2899:2901   */\n      0x20\n        /* \"#utility.yul\":2888:2897   */\n      dup3\n        /* \"#utility.yul\":2884:2902   */\n      add\n        /* \"#utility.yul\":2876:2902   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:2983   */\n      tag_348\n        /* \"#utility.yul\":2980:2981   */\n      0x00\n        /* \"#utility.yul\":2969:2978   */\n      dup4\n        /* \"#utility.yul\":2965:2982   */\n      add\n        /* \"#utility.yul\":2956:2962   */\n      dup5\n        /* \"#utility.yul\":2912:2983   */\n      tag_265\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2768:2990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2996:3122   */\n    tag_266:\n        /* \"#utility.yul\":3033:3040   */\n      0x00\n        /* \"#utility.yul\":3073:3115   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3066:3071   */\n      dup3\n        /* \"#utility.yul\":3062:3116   */\n      and\n        /* \"#utility.yul\":3051:3116   */\n      swap1\n      pop\n        /* \"#utility.yul\":2996:3122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3128:3224   */\n    tag_267:\n        /* \"#utility.yul\":3165:3172   */\n      0x00\n        /* \"#utility.yul\":3194:3218   */\n      tag_351\n        /* \"#utility.yul\":3212:3217   */\n      dup3\n        /* \"#utility.yul\":3194:3218   */\n      tag_266\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":3183:3218   */\n      swap1\n      pop\n        /* \"#utility.yul\":3128:3224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3352   */\n    tag_268:\n        /* \"#utility.yul\":3303:3327   */\n      tag_353\n        /* \"#utility.yul\":3321:3326   */\n      dup2\n        /* \"#utility.yul\":3303:3327   */\n      tag_267\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3296:3301   */\n      dup2\n        /* \"#utility.yul\":3293:3328   */\n      eq\n        /* \"#utility.yul\":3283:3346   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":3342:3343   */\n      0x00\n        /* \"#utility.yul\":3339:3340   */\n      dup1\n        /* \"#utility.yul\":3332:3344   */\n      revert\n        /* \"#utility.yul\":3283:3346   */\n    tag_354:\n        /* \"#utility.yul\":3230:3352   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3358:3497   */\n    tag_269:\n        /* \"#utility.yul\":3404:3409   */\n      0x00\n        /* \"#utility.yul\":3442:3448   */\n      dup2\n        /* \"#utility.yul\":3429:3449   */\n      calldataload\n        /* \"#utility.yul\":3420:3449   */\n      swap1\n      pop\n        /* \"#utility.yul\":3458:3491   */\n      tag_356\n        /* \"#utility.yul\":3485:3490   */\n      dup2\n        /* \"#utility.yul\":3458:3491   */\n      tag_268\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3358:3497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3503:3977   */\n    tag_48:\n        /* \"#utility.yul\":3571:3577   */\n      0x00\n        /* \"#utility.yul\":3579:3585   */\n      dup1\n        /* \"#utility.yul\":3628:3630   */\n      0x40\n        /* \"#utility.yul\":3616:3625   */\n      dup4\n        /* \"#utility.yul\":3607:3614   */\n      dup6\n        /* \"#utility.yul\":3603:3626   */\n      sub\n        /* \"#utility.yul\":3599:3631   */\n      slt\n        /* \"#utility.yul\":3596:3715   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":3634:3713   */\n      tag_359\n      tag_253\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3596:3715   */\n    tag_358:\n        /* \"#utility.yul\":3754:3755   */\n      0x00\n        /* \"#utility.yul\":3779:3832   */\n      tag_360\n        /* \"#utility.yul\":3824:3831   */\n      dup6\n        /* \"#utility.yul\":3815:3821   */\n      dup3\n        /* \"#utility.yul\":3804:3813   */\n      dup7\n        /* \"#utility.yul\":3800:3822   */\n      add\n        /* \"#utility.yul\":3779:3832   */\n      tag_262\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3769:3832   */\n      swap3\n      pop\n        /* \"#utility.yul\":3725:3842   */\n      pop\n        /* \"#utility.yul\":3881:3883   */\n      0x20\n        /* \"#utility.yul\":3907:3960   */\n      tag_361\n        /* \"#utility.yul\":3952:3959   */\n      dup6\n        /* \"#utility.yul\":3943:3949   */\n      dup3\n        /* \"#utility.yul\":3932:3941   */\n      dup7\n        /* \"#utility.yul\":3928:3950   */\n      add\n        /* \"#utility.yul\":3907:3960   */\n      tag_269\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3897:3960   */\n      swap2\n      pop\n        /* \"#utility.yul\":3852:3970   */\n      pop\n        /* \"#utility.yul\":3503:3977   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3983:4087   */\n    tag_270:\n        /* \"#utility.yul\":4028:4035   */\n      0x00\n        /* \"#utility.yul\":4057:4081   */\n      tag_363\n        /* \"#utility.yul\":4075:4080   */\n      dup3\n        /* \"#utility.yul\":4057:4081   */\n      tag_266\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4046:4081   */\n      swap1\n      pop\n        /* \"#utility.yul\":3983:4087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4093:4235   */\n    tag_271:\n        /* \"#utility.yul\":4196:4228   */\n      tag_365\n        /* \"#utility.yul\":4222:4227   */\n      dup2\n        /* \"#utility.yul\":4196:4228   */\n      tag_270\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4191:4194   */\n      dup3\n        /* \"#utility.yul\":4184:4229   */\n      mstore\n        /* \"#utility.yul\":4093:4235   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4241:4495   */\n    tag_62:\n        /* \"#utility.yul\":4350:4354   */\n      0x00\n        /* \"#utility.yul\":4388:4390   */\n      0x20\n        /* \"#utility.yul\":4377:4386   */\n      dup3\n        /* \"#utility.yul\":4373:4391   */\n      add\n        /* \"#utility.yul\":4365:4391   */\n      swap1\n      pop\n        /* \"#utility.yul\":4401:4488   */\n      tag_367\n        /* \"#utility.yul\":4485:4486   */\n      0x00\n        /* \"#utility.yul\":4474:4483   */\n      dup4\n        /* \"#utility.yul\":4470:4487   */\n      add\n        /* \"#utility.yul\":4461:4467   */\n      dup5\n        /* \"#utility.yul\":4401:4488   */\n      tag_271\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":4241:4495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4501:4830   */\n    tag_78:\n        /* \"#utility.yul\":4560:4566   */\n      0x00\n        /* \"#utility.yul\":4609:4611   */\n      0x20\n        /* \"#utility.yul\":4597:4606   */\n      dup3\n        /* \"#utility.yul\":4588:4595   */\n      dup5\n        /* \"#utility.yul\":4584:4607   */\n      sub\n        /* \"#utility.yul\":4580:4612   */\n      slt\n        /* \"#utility.yul\":4577:4696   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":4615:4694   */\n      tag_370\n      tag_253\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4577:4696   */\n    tag_369:\n        /* \"#utility.yul\":4735:4736   */\n      0x00\n        /* \"#utility.yul\":4760:4813   */\n      tag_371\n        /* \"#utility.yul\":4805:4812   */\n      dup5\n        /* \"#utility.yul\":4796:4802   */\n      dup3\n        /* \"#utility.yul\":4785:4794   */\n      dup6\n        /* \"#utility.yul\":4781:4803   */\n      add\n        /* \"#utility.yul\":4760:4813   */\n      tag_269\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4750:4813   */\n      swap2\n      pop\n        /* \"#utility.yul\":4706:4823   */\n      pop\n        /* \"#utility.yul\":4501:4830   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4836:4896   */\n    tag_272:\n        /* \"#utility.yul\":4864:4867   */\n      0x00\n        /* \"#utility.yul\":4885:4890   */\n      dup2\n        /* \"#utility.yul\":4878:4890   */\n      swap1\n      pop\n        /* \"#utility.yul\":4836:4896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4902:5044   */\n    tag_273:\n        /* \"#utility.yul\":4952:4961   */\n      0x00\n        /* \"#utility.yul\":4985:5038   */\n      tag_374\n        /* \"#utility.yul\":5003:5037   */\n      tag_375\n        /* \"#utility.yul\":5012:5036   */\n      tag_376\n        /* \"#utility.yul\":5030:5035   */\n      dup5\n        /* \"#utility.yul\":5012:5036   */\n      tag_266\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5003:5037   */\n      tag_272\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4985:5038   */\n      tag_266\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4972:5038   */\n      swap1\n      pop\n        /* \"#utility.yul\":4902:5044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5050:5176   */\n    tag_274:\n        /* \"#utility.yul\":5100:5109   */\n      0x00\n        /* \"#utility.yul\":5133:5170   */\n      tag_378\n        /* \"#utility.yul\":5164:5169   */\n      dup3\n        /* \"#utility.yul\":5133:5170   */\n      tag_273\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5120:5170   */\n      swap1\n      pop\n        /* \"#utility.yul\":5050:5176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5182:5322   */\n    tag_275:\n        /* \"#utility.yul\":5246:5255   */\n      0x00\n        /* \"#utility.yul\":5279:5316   */\n      tag_380\n        /* \"#utility.yul\":5310:5315   */\n      dup3\n        /* \"#utility.yul\":5279:5316   */\n      tag_274\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5266:5316   */\n      swap1\n      pop\n        /* \"#utility.yul\":5182:5322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5328:5487   */\n    tag_276:\n        /* \"#utility.yul\":5429:5480   */\n      tag_382\n        /* \"#utility.yul\":5474:5479   */\n      dup2\n        /* \"#utility.yul\":5429:5480   */\n      tag_275\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5424:5427   */\n      dup3\n        /* \"#utility.yul\":5417:5481   */\n      mstore\n        /* \"#utility.yul\":5328:5487   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5493:5743   */\n    tag_83:\n        /* \"#utility.yul\":5600:5604   */\n      0x00\n        /* \"#utility.yul\":5638:5640   */\n      0x20\n        /* \"#utility.yul\":5627:5636   */\n      dup3\n        /* \"#utility.yul\":5623:5641   */\n      add\n        /* \"#utility.yul\":5615:5641   */\n      swap1\n      pop\n        /* \"#utility.yul\":5651:5736   */\n      tag_384\n        /* \"#utility.yul\":5733:5734   */\n      0x00\n        /* \"#utility.yul\":5722:5731   */\n      dup4\n        /* \"#utility.yul\":5718:5735   */\n      add\n        /* \"#utility.yul\":5709:5715   */\n      dup5\n        /* \"#utility.yul\":5651:5736   */\n      tag_276\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5493:5743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5749:5918   */\n    tag_277:\n        /* \"#utility.yul\":5833:5844   */\n      0x00\n        /* \"#utility.yul\":5867:5873   */\n      dup3\n        /* \"#utility.yul\":5862:5865   */\n      dup3\n        /* \"#utility.yul\":5855:5874   */\n      mstore\n        /* \"#utility.yul\":5907:5911   */\n      0x20\n        /* \"#utility.yul\":5902:5905   */\n      dup3\n        /* \"#utility.yul\":5898:5912   */\n      add\n        /* \"#utility.yul\":5883:5912   */\n      swap1\n      pop\n        /* \"#utility.yul\":5749:5918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5924:6105   */\n    tag_278:\n        /* \"#utility.yul\":6064:6097   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":6060:6061   */\n      0x00\n        /* \"#utility.yul\":6052:6058   */\n      dup3\n        /* \"#utility.yul\":6048:6062   */\n      add\n        /* \"#utility.yul\":6041:6098   */\n      mstore\n        /* \"#utility.yul\":5924:6105   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6111:6477   */\n    tag_279:\n        /* \"#utility.yul\":6253:6256   */\n      0x00\n        /* \"#utility.yul\":6274:6341   */\n      tag_388\n        /* \"#utility.yul\":6338:6340   */\n      0x1f\n        /* \"#utility.yul\":6333:6336   */\n      dup4\n        /* \"#utility.yul\":6274:6341   */\n      tag_277\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6267:6341   */\n      swap2\n      pop\n        /* \"#utility.yul\":6350:6443   */\n      tag_389\n        /* \"#utility.yul\":6439:6442   */\n      dup3\n        /* \"#utility.yul\":6350:6443   */\n      tag_278\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6468:6470   */\n      0x20\n        /* \"#utility.yul\":6463:6466   */\n      dup3\n        /* \"#utility.yul\":6459:6471   */\n      add\n        /* \"#utility.yul\":6452:6471   */\n      swap1\n      pop\n        /* \"#utility.yul\":6111:6477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6483:6902   */\n    tag_88:\n        /* \"#utility.yul\":6649:6653   */\n      0x00\n        /* \"#utility.yul\":6687:6689   */\n      0x20\n        /* \"#utility.yul\":6676:6685   */\n      dup3\n        /* \"#utility.yul\":6672:6690   */\n      add\n        /* \"#utility.yul\":6664:6690   */\n      swap1\n      pop\n        /* \"#utility.yul\":6736:6745   */\n      dup2\n        /* \"#utility.yul\":6730:6734   */\n      dup2\n        /* \"#utility.yul\":6726:6746   */\n      sub\n        /* \"#utility.yul\":6722:6723   */\n      0x00\n        /* \"#utility.yul\":6711:6720   */\n      dup4\n        /* \"#utility.yul\":6707:6724   */\n      add\n        /* \"#utility.yul\":6700:6747   */\n      mstore\n        /* \"#utility.yul\":6764:6895   */\n      tag_391\n        /* \"#utility.yul\":6890:6894   */\n      dup2\n        /* \"#utility.yul\":6764:6895   */\n      tag_279\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6756:6895   */\n      swap1\n      pop\n        /* \"#utility.yul\":6483:6902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6908:7240   */\n    tag_98:\n        /* \"#utility.yul\":7029:7033   */\n      0x00\n        /* \"#utility.yul\":7067:7069   */\n      0x40\n        /* \"#utility.yul\":7056:7065   */\n      dup3\n        /* \"#utility.yul\":7052:7070   */\n      add\n        /* \"#utility.yul\":7044:7070   */\n      swap1\n      pop\n        /* \"#utility.yul\":7080:7151   */\n      tag_393\n        /* \"#utility.yul\":7148:7149   */\n      0x00\n        /* \"#utility.yul\":7137:7146   */\n      dup4\n        /* \"#utility.yul\":7133:7150   */\n      add\n        /* \"#utility.yul\":7124:7130   */\n      dup6\n        /* \"#utility.yul\":7080:7151   */\n      tag_265\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7161:7233   */\n      tag_394\n        /* \"#utility.yul\":7229:7231   */\n      0x20\n        /* \"#utility.yul\":7218:7227   */\n      dup4\n        /* \"#utility.yul\":7214:7232   */\n      add\n        /* \"#utility.yul\":7205:7211   */\n      dup5\n        /* \"#utility.yul\":7161:7233   */\n      tag_265\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6908:7240   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7246:7480   */\n    tag_280:\n        /* \"#utility.yul\":7386:7420   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":7382:7383   */\n      0x00\n        /* \"#utility.yul\":7374:7380   */\n      dup3\n        /* \"#utility.yul\":7370:7384   */\n      add\n        /* \"#utility.yul\":7363:7421   */\n      mstore\n        /* \"#utility.yul\":7455:7472   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":7450:7452   */\n      0x20\n        /* \"#utility.yul\":7442:7448   */\n      dup3\n        /* \"#utility.yul\":7438:7453   */\n      add\n        /* \"#utility.yul\":7431:7473   */\n      mstore\n        /* \"#utility.yul\":7246:7480   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7486:7852   */\n    tag_281:\n        /* \"#utility.yul\":7628:7631   */\n      0x00\n        /* \"#utility.yul\":7649:7716   */\n      tag_397\n        /* \"#utility.yul\":7713:7715   */\n      0x2f\n        /* \"#utility.yul\":7708:7711   */\n      dup4\n        /* \"#utility.yul\":7649:7716   */\n      tag_277\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7642:7716   */\n      swap2\n      pop\n        /* \"#utility.yul\":7725:7818   */\n      tag_398\n        /* \"#utility.yul\":7814:7817   */\n      dup3\n        /* \"#utility.yul\":7725:7818   */\n      tag_280\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":7843:7845   */\n      0x40\n        /* \"#utility.yul\":7838:7841   */\n      dup3\n        /* \"#utility.yul\":7834:7846   */\n      add\n        /* \"#utility.yul\":7827:7846   */\n      swap1\n      pop\n        /* \"#utility.yul\":7486:7852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7858:8277   */\n    tag_122:\n        /* \"#utility.yul\":8024:8028   */\n      0x00\n        /* \"#utility.yul\":8062:8064   */\n      0x20\n        /* \"#utility.yul\":8051:8060   */\n      dup3\n        /* \"#utility.yul\":8047:8065   */\n      add\n        /* \"#utility.yul\":8039:8065   */\n      swap1\n      pop\n        /* \"#utility.yul\":8111:8120   */\n      dup2\n        /* \"#utility.yul\":8105:8109   */\n      dup2\n        /* \"#utility.yul\":8101:8121   */\n      sub\n        /* \"#utility.yul\":8097:8098   */\n      0x00\n        /* \"#utility.yul\":8086:8095   */\n      dup4\n        /* \"#utility.yul\":8082:8099   */\n      add\n        /* \"#utility.yul\":8075:8122   */\n      mstore\n        /* \"#utility.yul\":8139:8270   */\n      tag_400\n        /* \"#utility.yul\":8265:8269   */\n      dup2\n        /* \"#utility.yul\":8139:8270   */\n      tag_281\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":8131:8270   */\n      swap1\n      pop\n        /* \"#utility.yul\":7858:8277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8283:8512   */\n    tag_282:\n        /* \"#utility.yul\":8423:8457   */\n      0x43726f776473616c653a2062656e656669636961727920697320746865207a65\n        /* \"#utility.yul\":8419:8420   */\n      0x00\n        /* \"#utility.yul\":8411:8417   */\n      dup3\n        /* \"#utility.yul\":8407:8421   */\n      add\n        /* \"#utility.yul\":8400:8458   */\n      mstore\n        /* \"#utility.yul\":8492:8504   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8487:8489   */\n      0x20\n        /* \"#utility.yul\":8479:8485   */\n      dup3\n        /* \"#utility.yul\":8475:8490   */\n      add\n        /* \"#utility.yul\":8468:8505   */\n      mstore\n        /* \"#utility.yul\":8283:8512   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8518:8884   */\n    tag_283:\n        /* \"#utility.yul\":8660:8663   */\n      0x00\n        /* \"#utility.yul\":8681:8748   */\n      tag_403\n        /* \"#utility.yul\":8745:8747   */\n      0x2a\n        /* \"#utility.yul\":8740:8743   */\n      dup4\n        /* \"#utility.yul\":8681:8748   */\n      tag_277\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":8674:8748   */\n      swap2\n      pop\n        /* \"#utility.yul\":8757:8850   */\n      tag_404\n        /* \"#utility.yul\":8846:8849   */\n      dup3\n        /* \"#utility.yul\":8757:8850   */\n      tag_282\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":8875:8877   */\n      0x40\n        /* \"#utility.yul\":8870:8873   */\n      dup3\n        /* \"#utility.yul\":8866:8878   */\n      add\n        /* \"#utility.yul\":8859:8878   */\n      swap1\n      pop\n        /* \"#utility.yul\":8518:8884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8890:9309   */\n    tag_137:\n        /* \"#utility.yul\":9056:9060   */\n      0x00\n        /* \"#utility.yul\":9094:9096   */\n      0x20\n        /* \"#utility.yul\":9083:9092   */\n      dup3\n        /* \"#utility.yul\":9079:9097   */\n      add\n        /* \"#utility.yul\":9071:9097   */\n      swap1\n      pop\n        /* \"#utility.yul\":9143:9152   */\n      dup2\n        /* \"#utility.yul\":9137:9141   */\n      dup2\n        /* \"#utility.yul\":9133:9153   */\n      sub\n        /* \"#utility.yul\":9129:9130   */\n      0x00\n        /* \"#utility.yul\":9118:9127   */\n      dup4\n        /* \"#utility.yul\":9114:9131   */\n      add\n        /* \"#utility.yul\":9107:9154   */\n      mstore\n        /* \"#utility.yul\":9171:9302   */\n      tag_406\n        /* \"#utility.yul\":9297:9301   */\n      dup2\n        /* \"#utility.yul\":9171:9302   */\n      tag_283\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9163:9302   */\n      swap1\n      pop\n        /* \"#utility.yul\":8890:9309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9315:9490   */\n    tag_284:\n        /* \"#utility.yul\":9455:9482   */\n      0x43726f776473616c653a20776569416d6f756e74206973203000000000000000\n        /* \"#utility.yul\":9451:9452   */\n      0x00\n        /* \"#utility.yul\":9443:9449   */\n      dup3\n        /* \"#utility.yul\":9439:9453   */\n      add\n        /* \"#utility.yul\":9432:9483   */\n      mstore\n        /* \"#utility.yul\":9315:9490   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9496:9862   */\n    tag_285:\n        /* \"#utility.yul\":9638:9641   */\n      0x00\n        /* \"#utility.yul\":9659:9726   */\n      tag_409\n        /* \"#utility.yul\":9723:9725   */\n      0x19\n        /* \"#utility.yul\":9718:9721   */\n      dup4\n        /* \"#utility.yul\":9659:9726   */\n      tag_277\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9652:9726   */\n      swap2\n      pop\n        /* \"#utility.yul\":9735:9828   */\n      tag_410\n        /* \"#utility.yul\":9824:9827   */\n      dup3\n        /* \"#utility.yul\":9735:9828   */\n      tag_284\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":9853:9855   */\n      0x20\n        /* \"#utility.yul\":9848:9851   */\n      dup3\n        /* \"#utility.yul\":9844:9856   */\n      add\n        /* \"#utility.yul\":9837:9856   */\n      swap1\n      pop\n        /* \"#utility.yul\":9496:9862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9868:10287   */\n    tag_140:\n        /* \"#utility.yul\":10034:10038   */\n      0x00\n        /* \"#utility.yul\":10072:10074   */\n      0x20\n        /* \"#utility.yul\":10061:10070   */\n      dup3\n        /* \"#utility.yul\":10057:10075   */\n      add\n        /* \"#utility.yul\":10049:10075   */\n      swap1\n      pop\n        /* \"#utility.yul\":10121:10130   */\n      dup2\n        /* \"#utility.yul\":10115:10119   */\n      dup2\n        /* \"#utility.yul\":10111:10131   */\n      sub\n        /* \"#utility.yul\":10107:10108   */\n      0x00\n        /* \"#utility.yul\":10096:10105   */\n      dup4\n        /* \"#utility.yul\":10092:10109   */\n      add\n        /* \"#utility.yul\":10085:10132   */\n      mstore\n        /* \"#utility.yul\":10149:10280   */\n      tag_412\n        /* \"#utility.yul\":10275:10279   */\n      dup2\n        /* \"#utility.yul\":10149:10280   */\n      tag_285\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":10141:10280   */\n      swap1\n      pop\n        /* \"#utility.yul\":9868:10287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10293:10473   */\n    tag_286:\n        /* \"#utility.yul\":10341:10418   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10338:10339   */\n      0x00\n        /* \"#utility.yul\":10331:10419   */\n      mstore\n        /* \"#utility.yul\":10438:10442   */\n      0x11\n        /* \"#utility.yul\":10435:10436   */\n      0x04\n        /* \"#utility.yul\":10428:10443   */\n      mstore\n        /* \"#utility.yul\":10462:10466   */\n      0x24\n        /* \"#utility.yul\":10459:10460   */\n      0x00\n        /* \"#utility.yul\":10452:10467   */\n      revert\n        /* \"#utility.yul\":10479:10827   */\n    tag_169:\n        /* \"#utility.yul\":10519:10526   */\n      0x00\n        /* \"#utility.yul\":10542:10562   */\n      tag_415\n        /* \"#utility.yul\":10560:10561   */\n      dup3\n        /* \"#utility.yul\":10542:10562   */\n      tag_264\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10537:10562   */\n      swap2\n      pop\n        /* \"#utility.yul\":10576:10596   */\n      tag_416\n        /* \"#utility.yul\":10594:10595   */\n      dup4\n        /* \"#utility.yul\":10576:10596   */\n      tag_264\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":10571:10596   */\n      swap3\n      pop\n        /* \"#utility.yul\":10764:10765   */\n      dup2\n        /* \"#utility.yul\":10696:10762   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10692:10766   */\n      div\n        /* \"#utility.yul\":10689:10690   */\n      dup4\n        /* \"#utility.yul\":10686:10767   */\n      gt\n        /* \"#utility.yul\":10681:10682   */\n      dup3\n        /* \"#utility.yul\":10674:10683   */\n      iszero\n        /* \"#utility.yul\":10667:10684   */\n      iszero\n        /* \"#utility.yul\":10663:10768   */\n      and\n        /* \"#utility.yul\":10660:10791   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":10771:10789   */\n      tag_418\n      tag_286\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":10660:10791   */\n    tag_417:\n        /* \"#utility.yul\":10819:10820   */\n      dup3\n        /* \"#utility.yul\":10816:10817   */\n      dup3\n        /* \"#utility.yul\":10812:10821   */\n      mul\n        /* \"#utility.yul\":10801:10821   */\n      swap1\n      pop\n        /* \"#utility.yul\":10479:10827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10833:11138   */\n    tag_175:\n        /* \"#utility.yul\":10873:10876   */\n      0x00\n        /* \"#utility.yul\":10892:10912   */\n      tag_420\n        /* \"#utility.yul\":10910:10911   */\n      dup3\n        /* \"#utility.yul\":10892:10912   */\n      tag_264\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10887:10912   */\n      swap2\n      pop\n        /* \"#utility.yul\":10926:10946   */\n      tag_421\n        /* \"#utility.yul\":10944:10945   */\n      dup4\n        /* \"#utility.yul\":10926:10946   */\n      tag_264\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":10921:10946   */\n      swap3\n      pop\n        /* \"#utility.yul\":11080:11081   */\n      dup3\n        /* \"#utility.yul\":11012:11078   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11008:11082   */\n      sub\n        /* \"#utility.yul\":11005:11006   */\n      dup3\n        /* \"#utility.yul\":11002:11083   */\n      gt\n        /* \"#utility.yul\":10999:11106   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":11086:11104   */\n      tag_423\n      tag_286\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":10999:11106   */\n    tag_422:\n        /* \"#utility.yul\":11130:11131   */\n      dup3\n        /* \"#utility.yul\":11127:11128   */\n      dup3\n        /* \"#utility.yul\":11123:11132   */\n      add\n        /* \"#utility.yul\":11116:11132   */\n      swap1\n      pop\n        /* \"#utility.yul\":10833:11138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11144:11292   */\n    tag_287:\n        /* \"#utility.yul\":11246:11257   */\n      0x00\n        /* \"#utility.yul\":11283:11286   */\n      dup2\n        /* \"#utility.yul\":11268:11286   */\n      swap1\n      pop\n        /* \"#utility.yul\":11144:11292   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11298:11471   */\n    tag_288:\n        /* \"#utility.yul\":11438:11463   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":11434:11435   */\n      0x00\n        /* \"#utility.yul\":11426:11432   */\n      dup3\n        /* \"#utility.yul\":11422:11436   */\n      add\n        /* \"#utility.yul\":11415:11464   */\n      mstore\n        /* \"#utility.yul\":11298:11471   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11477:11879   */\n    tag_289:\n        /* \"#utility.yul\":11637:11640   */\n      0x00\n        /* \"#utility.yul\":11658:11743   */\n      tag_427\n        /* \"#utility.yul\":11740:11742   */\n      0x17\n        /* \"#utility.yul\":11735:11738   */\n      dup4\n        /* \"#utility.yul\":11658:11743   */\n      tag_287\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11651:11743   */\n      swap2\n      pop\n        /* \"#utility.yul\":11752:11845   */\n      tag_428\n        /* \"#utility.yul\":11841:11844   */\n      dup3\n        /* \"#utility.yul\":11752:11845   */\n      tag_288\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11870:11872   */\n      0x17\n        /* \"#utility.yul\":11865:11868   */\n      dup3\n        /* \"#utility.yul\":11861:11873   */\n      add\n        /* \"#utility.yul\":11854:11873   */\n      swap1\n      pop\n        /* \"#utility.yul\":11477:11879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11885:11984   */\n    tag_290:\n        /* \"#utility.yul\":11937:11943   */\n      0x00\n        /* \"#utility.yul\":11971:11976   */\n      dup2\n        /* \"#utility.yul\":11965:11977   */\n      mload\n        /* \"#utility.yul\":11955:11977   */\n      swap1\n      pop\n        /* \"#utility.yul\":11885:11984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11990:12297   */\n    tag_291:\n        /* \"#utility.yul\":12058:12059   */\n      0x00\n        /* \"#utility.yul\":12068:12181   */\n    tag_431:\n        /* \"#utility.yul\":12082:12088   */\n      dup4\n        /* \"#utility.yul\":12079:12080   */\n      dup2\n        /* \"#utility.yul\":12076:12089   */\n      lt\n        /* \"#utility.yul\":12068:12181   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":12167:12168   */\n      dup1\n        /* \"#utility.yul\":12162:12165   */\n      dup3\n        /* \"#utility.yul\":12158:12169   */\n      add\n        /* \"#utility.yul\":12152:12170   */\n      mload\n        /* \"#utility.yul\":12148:12149   */\n      dup2\n        /* \"#utility.yul\":12143:12146   */\n      dup5\n        /* \"#utility.yul\":12139:12150   */\n      add\n        /* \"#utility.yul\":12132:12171   */\n      mstore\n        /* \"#utility.yul\":12104:12106   */\n      0x20\n        /* \"#utility.yul\":12101:12102   */\n      dup2\n        /* \"#utility.yul\":12097:12107   */\n      add\n        /* \"#utility.yul\":12092:12107   */\n      swap1\n      pop\n        /* \"#utility.yul\":12068:12181   */\n      jump(tag_431)\n    tag_433:\n        /* \"#utility.yul\":12199:12205   */\n      dup4\n        /* \"#utility.yul\":12196:12197   */\n      dup2\n        /* \"#utility.yul\":12193:12206   */\n      gt\n        /* \"#utility.yul\":12190:12291   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":12279:12280   */\n      0x00\n        /* \"#utility.yul\":12270:12276   */\n      dup5\n        /* \"#utility.yul\":12265:12268   */\n      dup5\n        /* \"#utility.yul\":12261:12277   */\n      add\n        /* \"#utility.yul\":12254:12281   */\n      mstore\n        /* \"#utility.yul\":12190:12291   */\n    tag_434:\n        /* \"#utility.yul\":12039:12297   */\n      pop\n        /* \"#utility.yul\":11990:12297   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12303:12680   */\n    tag_292:\n        /* \"#utility.yul\":12409:12412   */\n      0x00\n        /* \"#utility.yul\":12437:12476   */\n      tag_436\n        /* \"#utility.yul\":12470:12475   */\n      dup3\n        /* \"#utility.yul\":12437:12476   */\n      tag_290\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":12492:12581   */\n      tag_437\n        /* \"#utility.yul\":12574:12580   */\n      dup2\n        /* \"#utility.yul\":12569:12572   */\n      dup6\n        /* \"#utility.yul\":12492:12581   */\n      tag_287\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":12485:12581   */\n      swap4\n      pop\n        /* \"#utility.yul\":12590:12642   */\n      tag_438\n        /* \"#utility.yul\":12635:12641   */\n      dup2\n        /* \"#utility.yul\":12630:12633   */\n      dup6\n        /* \"#utility.yul\":12623:12627   */\n      0x20\n        /* \"#utility.yul\":12616:12621   */\n      dup7\n        /* \"#utility.yul\":12612:12628   */\n      add\n        /* \"#utility.yul\":12590:12642   */\n      tag_291\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":12667:12673   */\n      dup1\n        /* \"#utility.yul\":12662:12665   */\n      dup5\n        /* \"#utility.yul\":12658:12674   */\n      add\n        /* \"#utility.yul\":12651:12674   */\n      swap2\n      pop\n        /* \"#utility.yul\":12413:12680   */\n      pop\n        /* \"#utility.yul\":12303:12680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12686:12853   */\n    tag_293:\n        /* \"#utility.yul\":12826:12845   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":12822:12823   */\n      0x00\n        /* \"#utility.yul\":12814:12820   */\n      dup3\n        /* \"#utility.yul\":12810:12824   */\n      add\n        /* \"#utility.yul\":12803:12846   */\n      mstore\n        /* \"#utility.yul\":12686:12853   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12859:13261   */\n    tag_294:\n        /* \"#utility.yul\":13019:13022   */\n      0x00\n        /* \"#utility.yul\":13040:13125   */\n      tag_441\n        /* \"#utility.yul\":13122:13124   */\n      0x11\n        /* \"#utility.yul\":13117:13120   */\n      dup4\n        /* \"#utility.yul\":13040:13125   */\n      tag_287\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13033:13125   */\n      swap2\n      pop\n        /* \"#utility.yul\":13134:13227   */\n      tag_442\n        /* \"#utility.yul\":13223:13226   */\n      dup3\n        /* \"#utility.yul\":13134:13227   */\n      tag_293\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13252:13254   */\n      0x11\n        /* \"#utility.yul\":13247:13250   */\n      dup3\n        /* \"#utility.yul\":13243:13255   */\n      add\n        /* \"#utility.yul\":13236:13255   */\n      swap1\n      pop\n        /* \"#utility.yul\":12859:13261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13267:14234   */\n    tag_183:\n        /* \"#utility.yul\":13649:13652   */\n      0x00\n        /* \"#utility.yul\":13671:13819   */\n      tag_444\n        /* \"#utility.yul\":13815:13818   */\n      dup3\n        /* \"#utility.yul\":13671:13819   */\n      tag_289\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13664:13819   */\n      swap2\n      pop\n        /* \"#utility.yul\":13836:13931   */\n      tag_445\n        /* \"#utility.yul\":13927:13930   */\n      dup3\n        /* \"#utility.yul\":13918:13924   */\n      dup6\n        /* \"#utility.yul\":13836:13931   */\n      tag_292\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":13829:13931   */\n      swap2\n      pop\n        /* \"#utility.yul\":13948:14096   */\n      tag_446\n        /* \"#utility.yul\":14092:14095   */\n      dup3\n        /* \"#utility.yul\":13948:14096   */\n      tag_294\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":13941:14096   */\n      swap2\n      pop\n        /* \"#utility.yul\":14113:14208   */\n      tag_447\n        /* \"#utility.yul\":14204:14207   */\n      dup3\n        /* \"#utility.yul\":14195:14201   */\n      dup5\n        /* \"#utility.yul\":14113:14208   */\n      tag_292\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":14106:14208   */\n      swap2\n      pop\n        /* \"#utility.yul\":14225:14228   */\n      dup2\n        /* \"#utility.yul\":14218:14228   */\n      swap1\n      pop\n        /* \"#utility.yul\":13267:14234   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14240:14342   */\n    tag_295:\n        /* \"#utility.yul\":14281:14287   */\n      0x00\n        /* \"#utility.yul\":14332:14334   */\n      0x1f\n        /* \"#utility.yul\":14328:14335   */\n      not\n        /* \"#utility.yul\":14323:14325   */\n      0x1f\n        /* \"#utility.yul\":14316:14321   */\n      dup4\n        /* \"#utility.yul\":14312:14326   */\n      add\n        /* \"#utility.yul\":14308:14336   */\n      and\n        /* \"#utility.yul\":14298:14336   */\n      swap1\n      pop\n        /* \"#utility.yul\":14240:14342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14348:14712   */\n    tag_296:\n        /* \"#utility.yul\":14436:14439   */\n      0x00\n        /* \"#utility.yul\":14464:14503   */\n      tag_450\n        /* \"#utility.yul\":14497:14502   */\n      dup3\n        /* \"#utility.yul\":14464:14503   */\n      tag_290\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":14519:14590   */\n      tag_451\n        /* \"#utility.yul\":14583:14589   */\n      dup2\n        /* \"#utility.yul\":14578:14581   */\n      dup6\n        /* \"#utility.yul\":14519:14590   */\n      tag_277\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":14512:14590   */\n      swap4\n      pop\n        /* \"#utility.yul\":14599:14651   */\n      tag_452\n        /* \"#utility.yul\":14644:14650   */\n      dup2\n        /* \"#utility.yul\":14639:14642   */\n      dup6\n        /* \"#utility.yul\":14632:14636   */\n      0x20\n        /* \"#utility.yul\":14625:14630   */\n      dup7\n        /* \"#utility.yul\":14621:14637   */\n      add\n        /* \"#utility.yul\":14599:14651   */\n      tag_291\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14676:14705   */\n      tag_453\n        /* \"#utility.yul\":14698:14704   */\n      dup2\n        /* \"#utility.yul\":14676:14705   */\n      tag_295\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":14671:14674   */\n      dup5\n        /* \"#utility.yul\":14667:14706   */\n      add\n        /* \"#utility.yul\":14660:14706   */\n      swap2\n      pop\n        /* \"#utility.yul\":14440:14712   */\n      pop\n        /* \"#utility.yul\":14348:14712   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14718:15031   */\n    tag_185:\n        /* \"#utility.yul\":14831:14835   */\n      0x00\n        /* \"#utility.yul\":14869:14871   */\n      0x20\n        /* \"#utility.yul\":14858:14867   */\n      dup3\n        /* \"#utility.yul\":14854:14872   */\n      add\n        /* \"#utility.yul\":14846:14872   */\n      swap1\n      pop\n        /* \"#utility.yul\":14918:14927   */\n      dup2\n        /* \"#utility.yul\":14912:14916   */\n      dup2\n        /* \"#utility.yul\":14908:14928   */\n      sub\n        /* \"#utility.yul\":14904:14905   */\n      0x00\n        /* \"#utility.yul\":14893:14902   */\n      dup4\n        /* \"#utility.yul\":14889:14906   */\n      add\n        /* \"#utility.yul\":14882:14929   */\n      mstore\n        /* \"#utility.yul\":14946:15024   */\n      tag_455\n        /* \"#utility.yul\":15019:15023   */\n      dup2\n        /* \"#utility.yul\":15010:15016   */\n      dup5\n        /* \"#utility.yul\":14946:15024   */\n      tag_296\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":14938:15024   */\n      swap1\n      pop\n        /* \"#utility.yul\":14718:15031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15037:15155   */\n    tag_297:\n        /* \"#utility.yul\":15124:15148   */\n      tag_457\n        /* \"#utility.yul\":15142:15147   */\n      dup2\n        /* \"#utility.yul\":15124:15148   */\n      tag_267\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":15119:15122   */\n      dup3\n        /* \"#utility.yul\":15112:15149   */\n      mstore\n        /* \"#utility.yul\":15037:15155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15161:15493   */\n    tag_189:\n        /* \"#utility.yul\":15282:15286   */\n      0x00\n        /* \"#utility.yul\":15320:15322   */\n      0x40\n        /* \"#utility.yul\":15309:15318   */\n      dup3\n        /* \"#utility.yul\":15305:15323   */\n      add\n        /* \"#utility.yul\":15297:15323   */\n      swap1\n      pop\n        /* \"#utility.yul\":15333:15404   */\n      tag_459\n        /* \"#utility.yul\":15401:15402   */\n      0x00\n        /* \"#utility.yul\":15390:15399   */\n      dup4\n        /* \"#utility.yul\":15386:15403   */\n      add\n        /* \"#utility.yul\":15377:15383   */\n      dup6\n        /* \"#utility.yul\":15333:15404   */\n      tag_297\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":15414:15486   */\n      tag_460\n        /* \"#utility.yul\":15482:15484   */\n      0x20\n        /* \"#utility.yul\":15471:15480   */\n      dup4\n        /* \"#utility.yul\":15467:15485   */\n      add\n        /* \"#utility.yul\":15458:15464   */\n      dup5\n        /* \"#utility.yul\":15414:15486   */\n      tag_265\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":15161:15493   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15499:15679   */\n    tag_196:\n        /* \"#utility.yul\":15547:15624   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15544:15545   */\n      0x00\n        /* \"#utility.yul\":15537:15625   */\n      mstore\n        /* \"#utility.yul\":15644:15648   */\n      0x41\n        /* \"#utility.yul\":15641:15642   */\n      0x04\n        /* \"#utility.yul\":15634:15649   */\n      mstore\n        /* \"#utility.yul\":15668:15672   */\n      0x24\n        /* \"#utility.yul\":15665:15666   */\n      0x00\n        /* \"#utility.yul\":15658:15673   */\n      revert\n        /* \"#utility.yul\":15685:15865   */\n    tag_200:\n        /* \"#utility.yul\":15733:15810   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15730:15731   */\n      0x00\n        /* \"#utility.yul\":15723:15811   */\n      mstore\n        /* \"#utility.yul\":15830:15834   */\n      0x32\n        /* \"#utility.yul\":15827:15828   */\n      0x04\n        /* \"#utility.yul\":15820:15835   */\n      mstore\n        /* \"#utility.yul\":15854:15858   */\n      0x24\n        /* \"#utility.yul\":15851:15852   */\n      0x00\n        /* \"#utility.yul\":15844:15859   */\n      revert\n        /* \"#utility.yul\":15871:16042   */\n    tag_213:\n        /* \"#utility.yul\":15910:15913   */\n      0x00\n        /* \"#utility.yul\":15933:15957   */\n      tag_464\n        /* \"#utility.yul\":15951:15956   */\n      dup3\n        /* \"#utility.yul\":15933:15957   */\n      tag_264\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":15924:15957   */\n      swap2\n      pop\n        /* \"#utility.yul\":15979:15983   */\n      0x00\n        /* \"#utility.yul\":15972:15977   */\n      dup3\n        /* \"#utility.yul\":15969:15984   */\n      eq\n        /* \"#utility.yul\":15966:16007   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":15987:16005   */\n      tag_466\n      tag_286\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":15966:16007   */\n    tag_465:\n        /* \"#utility.yul\":16034:16035   */\n      0x01\n        /* \"#utility.yul\":16027:16032   */\n      dup3\n        /* \"#utility.yul\":16023:16036   */\n      sub\n        /* \"#utility.yul\":16016:16036   */\n      swap1\n      pop\n        /* \"#utility.yul\":15871:16042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16048:16230   */\n    tag_298:\n        /* \"#utility.yul\":16188:16222   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":16184:16185   */\n      0x00\n        /* \"#utility.yul\":16176:16182   */\n      dup3\n        /* \"#utility.yul\":16172:16186   */\n      add\n        /* \"#utility.yul\":16165:16223   */\n      mstore\n        /* \"#utility.yul\":16048:16230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16236:16602   */\n    tag_299:\n        /* \"#utility.yul\":16378:16381   */\n      0x00\n        /* \"#utility.yul\":16399:16466   */\n      tag_469\n        /* \"#utility.yul\":16463:16465   */\n      0x20\n        /* \"#utility.yul\":16458:16461   */\n      dup4\n        /* \"#utility.yul\":16399:16466   */\n      tag_277\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":16392:16466   */\n      swap2\n      pop\n        /* \"#utility.yul\":16475:16568   */\n      tag_470\n        /* \"#utility.yul\":16564:16567   */\n      dup3\n        /* \"#utility.yul\":16475:16568   */\n      tag_298\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":16593:16595   */\n      0x20\n        /* \"#utility.yul\":16588:16591   */\n      dup3\n        /* \"#utility.yul\":16584:16596   */\n      add\n        /* \"#utility.yul\":16577:16596   */\n      swap1\n      pop\n        /* \"#utility.yul\":16236:16602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16608:17027   */\n    tag_216:\n        /* \"#utility.yul\":16774:16778   */\n      0x00\n        /* \"#utility.yul\":16812:16814   */\n      0x20\n        /* \"#utility.yul\":16801:16810   */\n      dup3\n        /* \"#utility.yul\":16797:16815   */\n      add\n        /* \"#utility.yul\":16789:16815   */\n      swap1\n      pop\n        /* \"#utility.yul\":16861:16870   */\n      dup2\n        /* \"#utility.yul\":16855:16859   */\n      dup2\n        /* \"#utility.yul\":16851:16871   */\n      sub\n        /* \"#utility.yul\":16847:16848   */\n      0x00\n        /* \"#utility.yul\":16836:16845   */\n      dup4\n        /* \"#utility.yul\":16832:16849   */\n      add\n        /* \"#utility.yul\":16825:16872   */\n      mstore\n        /* \"#utility.yul\":16889:17020   */\n      tag_472\n        /* \"#utility.yul\":17015:17019   */\n      dup2\n        /* \"#utility.yul\":16889:17020   */\n      tag_299\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":16881:17020   */\n      swap1\n      pop\n        /* \"#utility.yul\":16608:17027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17033:17149   */\n    tag_300:\n        /* \"#utility.yul\":17103:17124   */\n      tag_474\n        /* \"#utility.yul\":17118:17123   */\n      dup2\n        /* \"#utility.yul\":17103:17124   */\n      tag_258\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":17096:17101   */\n      dup2\n        /* \"#utility.yul\":17093:17125   */\n      eq\n        /* \"#utility.yul\":17083:17143   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":17139:17140   */\n      0x00\n        /* \"#utility.yul\":17136:17137   */\n      dup1\n        /* \"#utility.yul\":17129:17141   */\n      revert\n        /* \"#utility.yul\":17083:17143   */\n    tag_475:\n        /* \"#utility.yul\":17033:17149   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17155:17292   */\n    tag_301:\n        /* \"#utility.yul\":17209:17214   */\n      0x00\n        /* \"#utility.yul\":17240:17246   */\n      dup2\n        /* \"#utility.yul\":17234:17247   */\n      mload\n        /* \"#utility.yul\":17225:17247   */\n      swap1\n      pop\n        /* \"#utility.yul\":17256:17286   */\n      tag_477\n        /* \"#utility.yul\":17280:17285   */\n      dup2\n        /* \"#utility.yul\":17256:17286   */\n      tag_300\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":17155:17292   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17298:17643   */\n    tag_222:\n        /* \"#utility.yul\":17365:17371   */\n      0x00\n        /* \"#utility.yul\":17414:17416   */\n      0x20\n        /* \"#utility.yul\":17402:17411   */\n      dup3\n        /* \"#utility.yul\":17393:17400   */\n      dup5\n        /* \"#utility.yul\":17389:17412   */\n      sub\n        /* \"#utility.yul\":17385:17417   */\n      slt\n        /* \"#utility.yul\":17382:17501   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":17420:17499   */\n      tag_480\n      tag_253\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":17382:17501   */\n    tag_479:\n        /* \"#utility.yul\":17540:17541   */\n      0x00\n        /* \"#utility.yul\":17565:17626   */\n      tag_481\n        /* \"#utility.yul\":17618:17625   */\n      dup5\n        /* \"#utility.yul\":17609:17615   */\n      dup3\n        /* \"#utility.yul\":17598:17607   */\n      dup6\n        /* \"#utility.yul\":17594:17616   */\n      add\n        /* \"#utility.yul\":17565:17626   */\n      tag_301\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":17555:17626   */\n      swap2\n      pop\n        /* \"#utility.yul\":17511:17636   */\n      pop\n        /* \"#utility.yul\":17298:17643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17649:17878   */\n    tag_302:\n        /* \"#utility.yul\":17789:17823   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":17785:17786   */\n      0x00\n        /* \"#utility.yul\":17777:17783   */\n      dup3\n        /* \"#utility.yul\":17773:17787   */\n      add\n        /* \"#utility.yul\":17766:17824   */\n      mstore\n        /* \"#utility.yul\":17858:17870   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17853:17855   */\n      0x20\n        /* \"#utility.yul\":17845:17851   */\n      dup3\n        /* \"#utility.yul\":17841:17856   */\n      add\n        /* \"#utility.yul\":17834:17871   */\n      mstore\n        /* \"#utility.yul\":17649:17878   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17884:18250   */\n    tag_303:\n        /* \"#utility.yul\":18026:18029   */\n      0x00\n        /* \"#utility.yul\":18047:18114   */\n      tag_484\n        /* \"#utility.yul\":18111:18113   */\n      0x2a\n        /* \"#utility.yul\":18106:18109   */\n      dup4\n        /* \"#utility.yul\":18047:18114   */\n      tag_277\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":18040:18114   */\n      swap2\n      pop\n        /* \"#utility.yul\":18123:18216   */\n      tag_485\n        /* \"#utility.yul\":18212:18215   */\n      dup3\n        /* \"#utility.yul\":18123:18216   */\n      tag_302\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":18241:18243   */\n      0x40\n        /* \"#utility.yul\":18236:18239   */\n      dup3\n        /* \"#utility.yul\":18232:18244   */\n      add\n        /* \"#utility.yul\":18225:18244   */\n      swap1\n      pop\n        /* \"#utility.yul\":17884:18250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18256:18675   */\n    tag_225:\n        /* \"#utility.yul\":18422:18426   */\n      0x00\n        /* \"#utility.yul\":18460:18462   */\n      0x20\n        /* \"#utility.yul\":18449:18458   */\n      dup3\n        /* \"#utility.yul\":18445:18463   */\n      add\n        /* \"#utility.yul\":18437:18463   */\n      swap1\n      pop\n        /* \"#utility.yul\":18509:18518   */\n      dup2\n        /* \"#utility.yul\":18503:18507   */\n      dup2\n        /* \"#utility.yul\":18499:18519   */\n      sub\n        /* \"#utility.yul\":18495:18496   */\n      0x00\n        /* \"#utility.yul\":18484:18493   */\n      dup4\n        /* \"#utility.yul\":18480:18497   */\n      add\n        /* \"#utility.yul\":18473:18520   */\n      mstore\n        /* \"#utility.yul\":18537:18668   */\n      tag_487\n        /* \"#utility.yul\":18663:18667   */\n      dup2\n        /* \"#utility.yul\":18537:18668   */\n      tag_303\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":18529:18668   */\n      swap1\n      pop\n        /* \"#utility.yul\":18256:18675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18681:18906   */\n    tag_304:\n        /* \"#utility.yul\":18821:18855   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":18817:18818   */\n      0x00\n        /* \"#utility.yul\":18809:18815   */\n      dup3\n        /* \"#utility.yul\":18805:18819   */\n      add\n        /* \"#utility.yul\":18798:18856   */\n      mstore\n        /* \"#utility.yul\":18890:18898   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18885:18887   */\n      0x20\n        /* \"#utility.yul\":18877:18883   */\n      dup3\n        /* \"#utility.yul\":18873:18888   */\n      add\n        /* \"#utility.yul\":18866:18899   */\n      mstore\n        /* \"#utility.yul\":18681:18906   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18912:19278   */\n    tag_305:\n        /* \"#utility.yul\":19054:19057   */\n      0x00\n        /* \"#utility.yul\":19075:19142   */\n      tag_490\n        /* \"#utility.yul\":19139:19141   */\n      0x26\n        /* \"#utility.yul\":19134:19137   */\n      dup4\n        /* \"#utility.yul\":19075:19142   */\n      tag_277\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":19068:19142   */\n      swap2\n      pop\n        /* \"#utility.yul\":19151:19244   */\n      tag_491\n        /* \"#utility.yul\":19240:19243   */\n      dup3\n        /* \"#utility.yul\":19151:19244   */\n      tag_304\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":19269:19271   */\n      0x40\n        /* \"#utility.yul\":19264:19267   */\n      dup3\n        /* \"#utility.yul\":19260:19272   */\n      add\n        /* \"#utility.yul\":19253:19272   */\n      swap1\n      pop\n        /* \"#utility.yul\":18912:19278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19284:19703   */\n    tag_232:\n        /* \"#utility.yul\":19450:19454   */\n      0x00\n        /* \"#utility.yul\":19488:19490   */\n      0x20\n        /* \"#utility.yul\":19477:19486   */\n      dup3\n        /* \"#utility.yul\":19473:19491   */\n      add\n        /* \"#utility.yul\":19465:19491   */\n      swap1\n      pop\n        /* \"#utility.yul\":19537:19546   */\n      dup2\n        /* \"#utility.yul\":19531:19535   */\n      dup2\n        /* \"#utility.yul\":19527:19547   */\n      sub\n        /* \"#utility.yul\":19523:19524   */\n      0x00\n        /* \"#utility.yul\":19512:19521   */\n      dup4\n        /* \"#utility.yul\":19508:19525   */\n      add\n        /* \"#utility.yul\":19501:19548   */\n      mstore\n        /* \"#utility.yul\":19565:19696   */\n      tag_493\n        /* \"#utility.yul\":19691:19695   */\n      dup2\n        /* \"#utility.yul\":19565:19696   */\n      tag_305\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":19557:19696   */\n      swap1\n      pop\n        /* \"#utility.yul\":19284:19703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19709:19888   */\n    tag_306:\n        /* \"#utility.yul\":19849:19880   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":19845:19846   */\n      0x00\n        /* \"#utility.yul\":19837:19843   */\n      dup3\n        /* \"#utility.yul\":19833:19847   */\n      add\n        /* \"#utility.yul\":19826:19881   */\n      mstore\n        /* \"#utility.yul\":19709:19888   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19894:20260   */\n    tag_307:\n        /* \"#utility.yul\":20036:20039   */\n      0x00\n        /* \"#utility.yul\":20057:20124   */\n      tag_496\n        /* \"#utility.yul\":20121:20123   */\n      0x1d\n        /* \"#utility.yul\":20116:20119   */\n      dup4\n        /* \"#utility.yul\":20057:20124   */\n      tag_277\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":20050:20124   */\n      swap2\n      pop\n        /* \"#utility.yul\":20133:20226   */\n      tag_497\n        /* \"#utility.yul\":20222:20225   */\n      dup3\n        /* \"#utility.yul\":20133:20226   */\n      tag_306\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":20251:20253   */\n      0x20\n        /* \"#utility.yul\":20246:20249   */\n      dup3\n        /* \"#utility.yul\":20242:20254   */\n      add\n        /* \"#utility.yul\":20235:20254   */\n      swap1\n      pop\n        /* \"#utility.yul\":19894:20260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20266:20685   */\n    tag_237:\n        /* \"#utility.yul\":20432:20436   */\n      0x00\n        /* \"#utility.yul\":20470:20472   */\n      0x20\n        /* \"#utility.yul\":20459:20468   */\n      dup3\n        /* \"#utility.yul\":20455:20473   */\n      add\n        /* \"#utility.yul\":20447:20473   */\n      swap1\n      pop\n        /* \"#utility.yul\":20519:20528   */\n      dup2\n        /* \"#utility.yul\":20513:20517   */\n      dup2\n        /* \"#utility.yul\":20509:20529   */\n      sub\n        /* \"#utility.yul\":20505:20506   */\n      0x00\n        /* \"#utility.yul\":20494:20503   */\n      dup4\n        /* \"#utility.yul\":20490:20507   */\n      add\n        /* \"#utility.yul\":20483:20530   */\n      mstore\n        /* \"#utility.yul\":20547:20678   */\n      tag_499\n        /* \"#utility.yul\":20673:20677   */\n      dup2\n        /* \"#utility.yul\":20547:20678   */\n      tag_307\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":20539:20678   */\n      swap1\n      pop\n        /* \"#utility.yul\":20266:20685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20691:20789   */\n    tag_308:\n        /* \"#utility.yul\":20742:20748   */\n      0x00\n        /* \"#utility.yul\":20776:20781   */\n      dup2\n        /* \"#utility.yul\":20770:20782   */\n      mload\n        /* \"#utility.yul\":20760:20782   */\n      swap1\n      pop\n        /* \"#utility.yul\":20691:20789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20795:20942   */\n    tag_309:\n        /* \"#utility.yul\":20896:20907   */\n      0x00\n        /* \"#utility.yul\":20933:20936   */\n      dup2\n        /* \"#utility.yul\":20918:20936   */\n      swap1\n      pop\n        /* \"#utility.yul\":20795:20942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20948:21321   */\n    tag_310:\n        /* \"#utility.yul\":21052:21055   */\n      0x00\n        /* \"#utility.yul\":21080:21118   */\n      tag_503\n        /* \"#utility.yul\":21112:21117   */\n      dup3\n        /* \"#utility.yul\":21080:21118   */\n      tag_308\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":21134:21222   */\n      tag_504\n        /* \"#utility.yul\":21215:21221   */\n      dup2\n        /* \"#utility.yul\":21210:21213   */\n      dup6\n        /* \"#utility.yul\":21134:21222   */\n      tag_309\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":21127:21222   */\n      swap4\n      pop\n        /* \"#utility.yul\":21231:21283   */\n      tag_505\n        /* \"#utility.yul\":21276:21282   */\n      dup2\n        /* \"#utility.yul\":21271:21274   */\n      dup6\n        /* \"#utility.yul\":21264:21268   */\n      0x20\n        /* \"#utility.yul\":21257:21262   */\n      dup7\n        /* \"#utility.yul\":21253:21269   */\n      add\n        /* \"#utility.yul\":21231:21283   */\n      tag_291\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":21308:21314   */\n      dup1\n        /* \"#utility.yul\":21303:21306   */\n      dup5\n        /* \"#utility.yul\":21299:21315   */\n      add\n        /* \"#utility.yul\":21292:21315   */\n      swap2\n      pop\n        /* \"#utility.yul\":21056:21321   */\n      pop\n        /* \"#utility.yul\":20948:21321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21327:21598   */\n    tag_239:\n        /* \"#utility.yul\":21457:21460   */\n      0x00\n        /* \"#utility.yul\":21479:21572   */\n      tag_507\n        /* \"#utility.yul\":21568:21571   */\n      dup3\n        /* \"#utility.yul\":21559:21565   */\n      dup5\n        /* \"#utility.yul\":21479:21572   */\n      tag_310\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":21472:21572   */\n      swap2\n      pop\n        /* \"#utility.yul\":21589:21592   */\n      dup2\n        /* \"#utility.yul\":21582:21592   */\n      swap1\n      pop\n        /* \"#utility.yul\":21327:21598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207fe8da5c9b3ac1b40555d8f8988569c44a30fd4b3047c6476f5e76c19b5800a964736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1820": {
									"entryPoint": null,
									"id": 1820,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_287": {
									"entryPoint": 552,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1134": {
									"entryPoint": 900,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupRole_227": {
									"entryPoint": 530,
									"id": 227,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 793,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$510_fromMemory": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$510_fromMemory": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$510": {
									"entryPoint": 1093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82": {
									"entryPoint": 1537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78": {
									"entryPoint": 1271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$510": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5707:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:14"
															},
															"nodeType": "YulIf",
															"src": "470:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:14",
														"type": ""
													}
												],
												"src": "417:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:14",
														"type": ""
													}
												],
												"src": "545:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "749:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "760:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "721:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "731:7:14",
														"type": ""
													}
												],
												"src": "694:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "889:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "918:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "900:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "900:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "889:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "861:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "871:7:14",
														"type": ""
													}
												],
												"src": "826:104:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "987:87:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1052:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1061:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1054:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1054:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1010:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1043:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1017:25:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1017:32:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1007:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1007:43:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1000:51:14"
															},
															"nodeType": "YulIf",
															"src": "997:71:14"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "980:5:14",
														"type": ""
													}
												],
												"src": "936:138:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1151:88:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1161:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1176:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1170:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1170:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1161:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1227:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "1192:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1192:41:14"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1129:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1137:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1145:5:14",
														"type": ""
													}
												],
												"src": "1080:159:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1290:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1300:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1329:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1311:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1300:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1272:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1282:7:14",
														"type": ""
													}
												],
												"src": "1245:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1406:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1416:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1445:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1427:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1427:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1416:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$510",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1388:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1398:7:14",
														"type": ""
													}
												],
												"src": "1347:110:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1520:93:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1591:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1600:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1593:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1593:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1543:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1582:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$510",
																					"nodeType": "YulIdentifier",
																					"src": "1550:31:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1550:38:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1540:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1540:49:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:57:14"
															},
															"nodeType": "YulIf",
															"src": "1530:77:14"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$510",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1513:5:14",
														"type": ""
													}
												],
												"src": "1463:150:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1696:94:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1706:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1721:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1715:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1715:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1778:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$510",
																	"nodeType": "YulIdentifier",
																	"src": "1737:40:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1737:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1737:47:14"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$510_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1674:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1682:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1690:5:14",
														"type": ""
													}
												],
												"src": "1619:171:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1929:574:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1975:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1977:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1977:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1977:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1950:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1959:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1946:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1946:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1971:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1942:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:32:14"
															},
															"nodeType": "YulIf",
															"src": "1939:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "2068:128:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2083:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2087:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2112:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2122:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2112:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2206:137:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2221:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2235:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2225:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2251:82:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2305:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2316:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2301:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2301:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2325:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2261:39:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2261:72:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2251:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2353:143:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2368:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2382:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2372:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2398:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2458:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2469:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2454:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2454:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2478:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$510_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2408:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2398:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$510_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1883:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1894:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1906:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1914:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1922:6:14",
														"type": ""
													}
												],
												"src": "1796:707:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2605:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2622:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2627:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2615:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2615:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2643:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2662:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2667:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2643:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2577:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2582:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2593:11:14",
														"type": ""
													}
												],
												"src": "2509:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2790:64:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2812:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2820:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:14:14"
																	},
																	{
																		"hexValue": "43726f776473616c653a20726174652069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2824:22:14",
																		"type": "",
																		"value": "Crowdsale: rate is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2801:46:14"
														}
													]
												},
												"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2782:6:14",
														"type": ""
													}
												],
												"src": "2684:170:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3006:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3016:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3082:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3087:2:14",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3023:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3188:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																	"nodeType": "YulIdentifier",
																	"src": "3099:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3099:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3201:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3212:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3208:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3201:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2994:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3002:3:14",
														"type": ""
													}
												],
												"src": "2860:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3403:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3413:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3436:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3421:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3421:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3413:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3460:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3471:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3456:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3456:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3479:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3485:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3475:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3449:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3449:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3505:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3639:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3513:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3505:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3383:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3398:4:14",
														"type": ""
													}
												],
												"src": "3232:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3763:118:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3785:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3793:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3781:14:14"
																	},
																	{
																		"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3797:34:14",
																		"type": "",
																		"value": "Crowdsale: wallet is the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3774:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3774:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3774:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3853:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3861:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3849:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3849:15:14"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3866:7:14",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3842:32:14"
														}
													]
												},
												"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3755:6:14",
														"type": ""
													}
												],
												"src": "3657:224:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4033:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4043:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4109:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4114:2:14",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4050:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4050:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4043:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4215:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																	"nodeType": "YulIdentifier",
																	"src": "4126:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4126:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4228:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4239:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4244:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4235:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4235:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4228:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4021:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4029:3:14",
														"type": ""
													}
												],
												"src": "3887:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4430:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4440:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4452:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4448:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4440:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4487:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4498:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4483:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4483:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4506:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4512:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4502:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4502:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4476:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4476:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4476:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4532:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4666:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4540:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4540:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4532:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4410:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4425:4:14",
														"type": ""
													}
												],
												"src": "4259:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4790:117:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4812:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4820:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4808:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4808:14:14"
																	},
																	{
																		"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4824:34:14",
																		"type": "",
																		"value": "Crowdsale: token is the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4880:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4888:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4876:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4876:15:14"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4893:6:14",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4869:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4869:31:14"
														}
													]
												},
												"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4782:6:14",
														"type": ""
													}
												],
												"src": "4684:223:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5059:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5069:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5135:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5140:2:14",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5076:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5076:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5069:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5241:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																	"nodeType": "YulIdentifier",
																	"src": "5152:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5152:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5254:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5265:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5270:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5261:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5261:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5254:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5047:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5055:3:14",
														"type": ""
													}
												],
												"src": "4913:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5456:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5466:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5478:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5489:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5474:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5466:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5532:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5538:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5528:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5502:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5502:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5558:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5692:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5566:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5558:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5436:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5451:4:14",
														"type": ""
													}
												],
												"src": "5285:419:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$510(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$510(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$510(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$510_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$510(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$510_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20_$510_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: rate is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: wallet is the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: token is the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x226C CODESIZE SUB DUP1 PUSH3 0x226C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT PUSH3 0x85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP1 PUSH3 0x547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0xF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xEF SWAP1 PUSH3 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x16B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x162 SWAP1 PUSH3 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x209 PUSH1 0x0 DUP1 SHL CALLER PUSH3 0x212 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x699 JUMP JUMPDEST PUSH3 0x224 DUP3 DUP3 PUSH3 0x228 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x23A DUP3 DUP3 PUSH3 0x319 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x315 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x2BA PUSH3 0x384 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3A6 DUP2 PUSH3 0x391 JUMP JUMPDEST DUP2 EQ PUSH3 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3C6 DUP2 PUSH3 0x39B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3F9 DUP3 PUSH3 0x3CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x40B DUP2 PUSH3 0x3EC JUMP JUMPDEST DUP2 EQ PUSH3 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x42B DUP2 PUSH3 0x400 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x43E DUP3 PUSH3 0x3CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x452 DUP3 PUSH3 0x431 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x464 DUP2 PUSH3 0x445 JUMP JUMPDEST DUP2 EQ PUSH3 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x484 DUP2 PUSH3 0x459 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x4A6 JUMPI PUSH3 0x4A5 PUSH3 0x38C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP7 DUP3 DUP8 ADD PUSH3 0x3B5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x4C9 DUP7 DUP3 DUP8 ADD PUSH3 0x41A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x4DC DUP7 DUP3 DUP8 ADD PUSH3 0x473 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20726174652069732030000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x52F PUSH1 0x14 DUP4 PUSH3 0x4E6 JUMP JUMPDEST SWAP2 POP PUSH3 0x53C DUP3 PUSH3 0x4F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x562 DUP2 PUSH3 0x520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2077616C6C657420697320746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5C7 PUSH1 0x25 DUP4 PUSH3 0x4E6 JUMP JUMPDEST SWAP2 POP PUSH3 0x5D4 DUP3 PUSH3 0x569 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x5FA DUP2 PUSH3 0x5B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20746F6B656E20697320746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x65F PUSH1 0x24 DUP4 PUSH3 0x4E6 JUMP JUMPDEST SWAP2 POP PUSH3 0x66C DUP3 PUSH3 0x601 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x692 DUP2 PUSH3 0x650 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC3 DUP1 PUSH3 0x6A9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x521EB273 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2CE JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0x1CB JUMPI PUSH2 0xC2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xC2 JUMPI PUSH2 0xC0 PUSH2 0xBB PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD2 PUSH2 0xCD PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x347 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH2 0x35E DUP3 DUP3 PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369 DUP3 PUSH2 0x6FD JUMP JUMPDEST SWAP1 POP PUSH2 0x375 DUP4 DUP3 PUSH2 0x71B JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x394 PUSH2 0x2F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP3 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x3ED DUP4 DUP4 PUSH2 0x729 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x3FF DUP4 DUP4 PUSH2 0x7AE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x47F JUMPI POP PUSH2 0x47E DUP3 PUSH2 0x7B2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4B9 DUP3 PUSH2 0x486 JUMP JUMPDEST PUSH2 0x4C2 DUP2 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x4CC DUP4 DUP4 PUSH2 0x830 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4D9 PUSH2 0x2F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x550 DUP3 DUP3 PUSH2 0x910 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x603 DUP3 PUSH2 0x486 JUMP JUMPDEST PUSH2 0x60C DUP2 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x616 DUP4 DUP4 PUSH2 0x910 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714 PUSH1 0x4 SLOAD DUP4 PUSH2 0x9F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x725 DUP3 DUP3 PUSH2 0xA08 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x73E DUP2 PUSH1 0x5 SLOAD PUSH2 0xA59 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82D DUP2 PUSH2 0x828 PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0xA6F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x83A DUP3 DUP3 PUSH2 0x588 JUMP JUMPDEST PUSH2 0x90C JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8B1 PUSH2 0x2F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x91A DUP3 DUP3 PUSH2 0x588 JUMP JUMPDEST ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x993 PUSH2 0x2F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0x15B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA55 DUP3 DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB0C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA67 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA79 DUP3 DUP3 PUSH2 0x588 JUMP JUMPDEST PUSH2 0xB08 JUMPI PUSH2 0xA9E DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0xAAC DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xABD SWAP3 SWAP2 SWAP1 PUSH2 0x1774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB8D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB2B SWAP3 SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xDCE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x15B2 JUMP JUMPDEST PUSH2 0xBAF SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBC8 JUMPI PUSH2 0xBC7 PUSH2 0x1852 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBFA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC32 JUMPI PUSH2 0xC31 PUSH2 0x1881 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC96 JUMPI PUSH2 0xC95 PUSH2 0x1881 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xCD6 SWAP2 SWAP1 PUSH2 0x15B2 JUMP JUMPDEST PUSH2 0xCE0 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD80 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xD22 JUMPI PUSH2 0xD21 PUSH2 0x1881 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD39 JUMPI PUSH2 0xD38 PUSH2 0x1881 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xD79 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST SWAP1 POP PUSH2 0xCE3 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBB SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE30 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE95 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xE90 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xE50 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH2 0xE8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE86 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEA4 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xEAD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE9 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEFB DUP6 PUSH2 0xFC1 JUMP JUMPDEST PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF31 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF63 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFA0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFA5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xFB5 DUP3 DUP3 DUP7 PUSH2 0xFE4 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xFF4 JUMPI DUP3 SWAP1 POP PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1007 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103B SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1085 DUP2 PUSH2 0x1050 JUMP JUMPDEST DUP2 EQ PUSH2 0x1090 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A2 DUP2 PUSH2 0x107C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BE JUMPI PUSH2 0x10BD PUSH2 0x104B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CC DUP5 DUP3 DUP6 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EA DUP2 PUSH2 0x10D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1105 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111E DUP2 PUSH2 0x110B JUMP JUMPDEST DUP2 EQ PUSH2 0x1129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113B DUP2 PUSH2 0x1115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1157 JUMPI PUSH2 0x1156 PUSH2 0x104B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1165 DUP5 DUP3 DUP6 ADD PUSH2 0x112C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1177 DUP2 PUSH2 0x110B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1192 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x116E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AB DUP2 PUSH2 0x1198 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F7 DUP3 PUSH2 0x11CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1207 DUP2 PUSH2 0x11EC JUMP JUMPDEST DUP2 EQ PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1224 DUP2 PUSH2 0x11FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1241 JUMPI PUSH2 0x1240 PUSH2 0x104B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x124F DUP6 DUP3 DUP7 ADD PUSH2 0x112C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1260 DUP6 DUP3 DUP7 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1275 DUP3 PUSH2 0x11CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1285 DUP2 PUSH2 0x126A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BC JUMPI PUSH2 0x12BB PUSH2 0x104B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12CA DUP5 DUP3 DUP6 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F8 PUSH2 0x12F3 PUSH2 0x12EE DUP5 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0x11CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130A DUP3 PUSH2 0x12DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131C DUP3 PUSH2 0x12FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x132C DUP2 PUSH2 0x1311 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1347 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1323 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1394 PUSH1 0x1F DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x139F DUP3 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13C3 DUP2 PUSH2 0x1387 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13DF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x11A2 JUMP JUMPDEST PUSH2 0x13EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144F PUSH1 0x2F DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x145A DUP3 PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x147E DUP2 PUSH2 0x1442 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E1 PUSH1 0x2A DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x14EC DUP3 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1510 DUP2 PUSH2 0x14D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D PUSH1 0x19 DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x1558 DUP3 PUSH2 0x1517 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x157C DUP2 PUSH2 0x1540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15BD DUP3 PUSH2 0x1198 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C8 DUP4 PUSH2 0x1198 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x1583 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1617 DUP3 PUSH2 0x1198 JUMP JUMPDEST SWAP2 POP PUSH2 0x1622 DUP4 PUSH2 0x1198 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1657 JUMPI PUSH2 0x1656 PUSH2 0x1583 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A3 PUSH1 0x17 DUP4 PUSH2 0x1662 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AE DUP3 PUSH2 0x166D JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16C7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16F1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1702 DUP3 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x170C DUP2 DUP6 PUSH2 0x1662 JUMP JUMPDEST SWAP4 POP PUSH2 0x171C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16C4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175E PUSH1 0x11 DUP4 PUSH2 0x1662 JUMP JUMPDEST SWAP2 POP PUSH2 0x1769 DUP3 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177F DUP3 PUSH2 0x1696 JUMP JUMPDEST SWAP2 POP PUSH2 0x178B DUP3 DUP6 PUSH2 0x16F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1796 DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A2 DUP3 DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CA DUP3 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x17D4 DUP2 DUP6 PUSH2 0x134D JUMP JUMPDEST SWAP4 POP PUSH2 0x17E4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x17ED DUP2 PUSH2 0x17AE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1812 DUP2 DUP5 PUSH2 0x17BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1823 DUP2 PUSH2 0x11EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x183E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x184B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18BB DUP3 PUSH2 0x1198 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x18CF JUMPI PUSH2 0x18CE PUSH2 0x1583 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1910 PUSH1 0x20 DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x191B DUP3 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x193F DUP2 PUSH2 0x1903 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x194F DUP2 PUSH2 0x10D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x195A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x196C DUP2 PUSH2 0x1946 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1988 JUMPI PUSH2 0x1987 PUSH2 0x104B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1996 DUP5 DUP3 DUP6 ADD PUSH2 0x195D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FB PUSH1 0x2A DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A06 DUP3 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A2A DUP2 PUSH2 0x19EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8D PUSH1 0x26 DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A98 DUP3 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ABC DUP2 PUSH2 0x1A80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF9 PUSH1 0x1D DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B04 DUP3 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B28 DUP2 PUSH2 0x1AEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 DUP3 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0x1B5A DUP2 DUP6 PUSH2 0x1B3A JUMP JUMPDEST SWAP4 POP PUSH2 0x1B6A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16C4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B82 DUP3 DUP5 PUSH2 0x1B45 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xE8DA5C9B3AC1B40555D8F8988569C44A30FD4B3047C6476F5E76C19B5800A964 PUSH20 0x6F6C634300080900330000000000000000000000 ",
							"sourceMap": "1110:6885:12:-:0;;;2557:424;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:2;1806:7;:22;;;;2651:1:12;2643:5;:9;2635:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2714:1;2695:21;;:7;:21;;;;2687:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2803:1;2776:29;;2784:6;2776:29;;;;2768:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2865:5;2857;:13;;;;2890:7;2880;;:17;;;;;;;;;;;;;;;;;;2916:6;2907;;:15;;;;;;;;;;;;;;;;;;2932:42;2072:4:0;2943:18:12;;2963:10;2932;;;:42;;:::i;:::-;2557:424;;;1110:6885;;6824:110:0;6902:25;6913:4;6919:7;6902:10;;;:25;;:::i;:::-;6824:110;;:::o;7474:233::-;7557:22;7565:4;7571:7;7557;;;:22;;:::i;:::-;7552:149;;7627:4;7595:6;:12;7602:4;7595:12;;;;;;;;;;;:20;;:29;7616:7;7595:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7677:12;:10;;;:12;;:::i;:::-;7650:40;;7668:7;7650:40;;7662:4;7650:40;;;;;;;;;;7552:149;7474:233;;:::o;2895:145::-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;640:96:7:-;693:7;719:10;712:17;;640:96;:::o;88:117:14:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:104::-;871:7;900:24;918:5;900:24;:::i;:::-;889:35;;826:104;;;:::o;936:138::-;1017:32;1043:5;1017:32;:::i;:::-;1010:5;1007:43;997:71;;1064:1;1061;1054:12;997:71;936:138;:::o;1080:159::-;1145:5;1176:6;1170:13;1161:22;;1192:41;1227:5;1192:41;:::i;:::-;1080:159;;;;:::o;1245:96::-;1282:7;1311:24;1329:5;1311:24;:::i;:::-;1300:35;;1245:96;;;:::o;1347:110::-;1398:7;1427:24;1445:5;1427:24;:::i;:::-;1416:35;;1347:110;;;:::o;1463:150::-;1550:38;1582:5;1550:38;:::i;:::-;1543:5;1540:49;1530:77;;1603:1;1600;1593:12;1530:77;1463:150;:::o;1619:171::-;1690:5;1721:6;1715:13;1706:22;;1737:47;1778:5;1737:47;:::i;:::-;1619:171;;;;:::o;1796:707::-;1906:6;1914;1922;1971:2;1959:9;1950:7;1946:23;1942:32;1939:119;;;1977:79;;:::i;:::-;1939:119;2097:1;2122:64;2178:7;2169:6;2158:9;2154:22;2122:64;:::i;:::-;2112:74;;2068:128;2235:2;2261:72;2325:7;2316:6;2305:9;2301:22;2261:72;:::i;:::-;2251:82;;2206:137;2382:2;2408:78;2478:7;2469:6;2458:9;2454:22;2408:78;:::i;:::-;2398:88;;2353:143;1796:707;;;;;:::o;2509:169::-;2593:11;2627:6;2622:3;2615:19;2667:4;2662:3;2658:14;2643:29;;2509:169;;;;:::o;2684:170::-;2824:22;2820:1;2812:6;2808:14;2801:46;2684:170;:::o;2860:366::-;3002:3;3023:67;3087:2;3082:3;3023:67;:::i;:::-;3016:74;;3099:93;3188:3;3099:93;:::i;:::-;3217:2;3212:3;3208:12;3201:19;;2860:366;;;:::o;3232:419::-;3398:4;3436:2;3425:9;3421:18;3413:26;;3485:9;3479:4;3475:20;3471:1;3460:9;3456:17;3449:47;3513:131;3639:4;3513:131;:::i;:::-;3505:139;;3232:419;;;:::o;3657:224::-;3797:34;3793:1;3785:6;3781:14;3774:58;3866:7;3861:2;3853:6;3849:15;3842:32;3657:224;:::o;3887:366::-;4029:3;4050:67;4114:2;4109:3;4050:67;:::i;:::-;4043:74;;4126:93;4215:3;4126:93;:::i;:::-;4244:2;4239:3;4235:12;4228:19;;3887:366;;;:::o;4259:419::-;4425:4;4463:2;4452:9;4448:18;4440:26;;4512:9;4506:4;4502:20;4498:1;4487:9;4483:17;4476:47;4540:131;4666:4;4540:131;:::i;:::-;4532:139;;4259:419;;;:::o;4684:223::-;4824:34;4820:1;4812:6;4808:14;4801:58;4893:6;4888:2;4880:6;4876:15;4869:31;4684:223;:::o;4913:366::-;5055:3;5076:67;5140:2;5135:3;5076:67;:::i;:::-;5069:74;;5152:93;5241:3;5152:93;:::i;:::-;5270:2;5265:3;5261:12;5254:19;;4913:366;;;:::o;5285:419::-;5451:4;5489:2;5478:9;5474:18;5466:26;;5538:9;5532:4;5528:20;5524:1;5513:9;5509:17;5502:47;5566:131;5692:4;5566:131;:::i;:::-;5558:139;;5285:419;;;:::o;1110:6885:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": 1523,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1830": {
									"entryPoint": null,
									"id": 1830,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1839": {
									"entryPoint": null,
									"id": 1839,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_826": {
									"entryPoint": 3534,
									"id": 826,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_135": {
									"entryPoint": 2671,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 2076,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_deliverTokens_1980": {
									"entryPoint": 2568,
									"id": 1980,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_forwardFunds_2035": {
									"entryPoint": 1859,
									"id": 2035,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTokenAmount_2023": {
									"entryPoint": 1789,
									"id": 2023,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_grantRole_287": {
									"entryPoint": 2096,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1134": {
									"entryPoint": 761,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_postValidatePurchase_1964": {
									"entryPoint": 1966,
									"id": 1964,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_1955": {
									"entryPoint": 1605,
									"id": 1955,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_processPurchase_1994": {
									"entryPoint": 1819,
									"id": 1994,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revokeRole_318": {
									"entryPoint": 2320,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updatePurchasingState_2009": {
									"entryPoint": 1833,
									"id": 2009,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1582": {
									"entryPoint": 2649,
									"id": 1582,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@buyTokens_1927": {
									"entryPoint": 769,
									"id": 1927,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_986": {
									"entryPoint": 3757,
									"id": 986,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_916": {
									"entryPoint": 3733,
									"id": 916,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getRoleAdmin_150": {
									"entryPoint": 1158,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_170": {
									"entryPoint": 1200,
									"id": 170,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 1416,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_845": {
									"entryPoint": 4033,
									"id": 845,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_1612": {
									"entryPoint": 2546,
									"id": 1612,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rate_1867": {
									"entryPoint": 1190,
									"id": 1867,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_213": {
									"entryPoint": 1233,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_190": {
									"entryPoint": 1530,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransfer_578": {
									"entryPoint": 2828,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_1393": {
									"entryPoint": 1970,
									"id": 1393,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_60": {
									"entryPoint": 1036,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_1349": {
									"entryPoint": 2962,
									"id": 1349,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1849": {
									"entryPoint": 1563,
									"id": 1849,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResult_1121": {
									"entryPoint": 4068,
									"id": 1121,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@wallet_1858": {
									"entryPoint": 1374,
									"id": 1858,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@weiRaised_1876": {
									"entryPoint": 1364,
									"id": 1876,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 4396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 4732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$510_to_t_address_fromStack": {
									"entryPoint": 4899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6004,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 4747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6185,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 4477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$510__to_t_address__fromStack_reversed": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5066,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 4714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$510_to_t_address": {
									"entryPoint": 4881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5828,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4171,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 6705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 5741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 6559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c": {
									"entryPoint": 5399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 5928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 5107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21601:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:14",
														"type": ""
													}
												],
												"src": "334:149:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:14"
															},
															"nodeType": "YulIf",
															"src": "541:62:14"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:14",
														"type": ""
													}
												],
												"src": "489:120:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:14",
														"type": ""
													}
												],
												"src": "615:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:14"
															},
															"nodeType": "YulIf",
															"src": "833:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:14",
														"type": ""
													}
												],
												"src": "758:327:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:14",
														"type": ""
													}
												],
												"src": "1091:90:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:14",
														"type": ""
													}
												],
												"src": "1187:109:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:14",
														"type": ""
													}
												],
												"src": "1302:210:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1584:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:14",
														"type": ""
													}
												],
												"src": "1518:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1644:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1701:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:43:14"
															},
															"nodeType": "YulIf",
															"src": "1654:63:14"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1637:5:14",
														"type": ""
													}
												],
												"src": "1601:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1781:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1791:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:14"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1759:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1767:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:14",
														"type": ""
													}
												],
												"src": "1729:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1940:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1986:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:32:14"
															},
															"nodeType": "YulIf",
															"src": "1950:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "2079:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2123:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1910:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1921:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1933:6:14",
														"type": ""
													}
												],
												"src": "1874:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:14"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2262:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2269:3:14",
														"type": ""
													}
												],
												"src": "2209:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2431:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2441:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2403:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2415:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2426:4:14",
														"type": ""
													}
												],
												"src": "2333:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2606:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2616:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2627:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2588:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2598:7:14",
														"type": ""
													}
												],
												"src": "2561:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2709:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2726:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2749:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2731:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2719:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2719:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2719:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2697:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2704:3:14",
														"type": ""
													}
												],
												"src": "2644:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2866:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2876:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2888:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2899:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2884:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2884:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2876:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2956:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2969:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2980:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2965:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2965:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2912:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2912:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2912:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2838:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2850:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2861:4:14",
														"type": ""
													}
												],
												"src": "2768:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3041:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3051:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3066:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3073:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3062:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3062:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3051:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3023:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3033:7:14",
														"type": ""
													}
												],
												"src": "2996:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3173:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3183:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3212:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3194:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3194:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3183:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3155:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3165:7:14",
														"type": ""
													}
												],
												"src": "3128:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3273:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3330:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3342:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3332:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3296:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3321:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3303:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3303:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3293:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3293:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:43:14"
															},
															"nodeType": "YulIf",
															"src": "3283:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3266:5:14",
														"type": ""
													}
												],
												"src": "3230:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3420:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3442:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3429:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3429:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3420:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3485:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3458:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3458:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3458:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3388:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3396:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3404:5:14",
														"type": ""
													}
												],
												"src": "3358:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3586:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3632:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3634:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3634:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3634:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3607:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3616:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3603:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3603:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3599:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:32:14"
															},
															"nodeType": "YulIf",
															"src": "3596:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "3725:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3740:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3754:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3744:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3769:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3804:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3815:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3800:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3800:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3824:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3779:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3779:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3769:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3852:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3867:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3881:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3871:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3897:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3932:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3943:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3928:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3928:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3952:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3907:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3907:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3897:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3548:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3559:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3571:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3579:6:14",
														"type": ""
													}
												],
												"src": "3503:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4075:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4057:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4046:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4018:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4028:7:14",
														"type": ""
													}
												],
												"src": "3983:104:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4174:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4191:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4222:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "4196:25:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4196:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4184:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:45:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4184:45:14"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4162:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4169:3:14",
														"type": ""
													}
												],
												"src": "4093:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4355:140:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4365:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4377:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4388:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4373:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4365:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4461:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4474:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4485:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4470:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4470:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4401:59:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4401:87:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4401:87:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4327:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4339:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4350:4:14",
														"type": ""
													}
												],
												"src": "4241:254:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4567:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4613:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4615:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4615:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4615:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4588:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4597:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4584:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4584:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4609:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4580:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4580:32:14"
															},
															"nodeType": "YulIf",
															"src": "4577:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "4706:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4721:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4735:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4725:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4750:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4785:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4796:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4781:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4781:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4805:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4760:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4760:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4750:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4537:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4548:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4560:6:14",
														"type": ""
													}
												],
												"src": "4501:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4868:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4878:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4885:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4854:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4864:3:14",
														"type": ""
													}
												],
												"src": "4836:60:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4962:82:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4972:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5030:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "5012:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5012:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5003:8:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5003:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4985:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4985:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4972:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4942:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4952:9:14",
														"type": ""
													}
												],
												"src": "4902:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5110:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5120:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5164:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5133:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5133:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5120:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5090:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5100:9:14",
														"type": ""
													}
												],
												"src": "5050:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5256:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5266:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5310:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5279:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5279:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5266:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$510_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5236:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5246:9:14",
														"type": ""
													}
												],
												"src": "5182:140:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5407:80:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5424:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5474:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$510_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5429:44:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5429:51:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5417:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5417:64:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5417:64:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$510_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5395:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5402:3:14",
														"type": ""
													}
												],
												"src": "5328:159:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5605:138:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5615:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5627:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5638:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5623:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5615:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5709:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5722:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5733:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5718:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5718:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$510_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5651:57:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5651:85:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5651:85:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$510__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5577:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5589:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5600:4:14",
														"type": ""
													}
												],
												"src": "5493:250:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5845:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5862:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5867:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5855:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5855:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5855:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5883:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5902:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5907:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5898:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5898:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5883:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5817:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5822:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5833:11:14",
														"type": ""
													}
												],
												"src": "5749:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6030:75:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6052:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6060:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6048:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6048:14:14"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6064:33:14",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6041:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6041:57:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6041:57:14"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6022:6:14",
														"type": ""
													}
												],
												"src": "5924:181:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6257:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6267:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6333:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6338:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6274:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6274:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6267:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6439:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "6350:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6350:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6350:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6452:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6463:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6468:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6459:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6452:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6245:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6253:3:14",
														"type": ""
													}
												],
												"src": "6111:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6654:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6664:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6676:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6687:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6672:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6672:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6664:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6711:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6722:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6707:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6707:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6730:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6736:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6726:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6726:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6700:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6700:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6700:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6756:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6890:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6764:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6764:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6756:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6634:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6649:4:14",
														"type": ""
													}
												],
												"src": "6483:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7034:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7044:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7056:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7067:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7052:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7052:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7044:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7124:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7137:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7148:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7133:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7133:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7080:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7080:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7080:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7205:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7218:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7229:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7214:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7214:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7161:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7161:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6998:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7010:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7018:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7029:4:14",
														"type": ""
													}
												],
												"src": "6908:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7352:128:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7374:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7382:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7370:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7370:14:14"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7386:34:14",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7363:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7363:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7363:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7442:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7450:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7438:15:14"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7455:17:14",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7431:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7431:42:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7431:42:14"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7344:6:14",
														"type": ""
													}
												],
												"src": "7246:234:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7632:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7642:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7708:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:2:14",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7649:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7642:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7814:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "7725:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7725:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7725:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7827:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7838:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7843:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7834:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7834:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7827:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7620:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7628:3:14",
														"type": ""
													}
												],
												"src": "7486:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8029:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8039:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8051:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8062:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8039:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8086:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8097:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8082:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8082:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8105:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8111:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8101:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8101:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8075:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8075:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8075:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8131:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8265:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8139:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8139:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8131:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8009:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8024:4:14",
														"type": ""
													}
												],
												"src": "7858:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8389:123:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8411:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8419:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8407:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8407:14:14"
																	},
																	{
																		"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8423:34:14",
																		"type": "",
																		"value": "Crowdsale: beneficiary is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8400:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8400:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8400:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8479:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8487:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8475:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8475:15:14"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8492:12:14",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8468:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8468:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8468:37:14"
														}
													]
												},
												"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8381:6:14",
														"type": ""
													}
												],
												"src": "8283:229:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8664:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8674:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8740:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8745:2:14",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8681:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8681:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8674:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8846:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																	"nodeType": "YulIdentifier",
																	"src": "8757:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8757:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8757:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8859:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8870:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8875:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8866:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8859:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8652:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8660:3:14",
														"type": ""
													}
												],
												"src": "8518:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9061:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9071:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9083:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9094:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9079:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9079:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9071:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9118:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9129:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9114:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9114:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9137:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9143:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9133:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9133:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9107:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9107:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9107:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9163:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9297:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9171:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9171:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9163:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9041:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9056:4:14",
														"type": ""
													}
												],
												"src": "8890:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9421:69:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9443:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9451:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9439:14:14"
																	},
																	{
																		"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9455:27:14",
																		"type": "",
																		"value": "Crowdsale: weiAmount is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9432:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9432:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9432:51:14"
														}
													]
												},
												"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9413:6:14",
														"type": ""
													}
												],
												"src": "9315:175:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9642:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9652:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9718:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9723:2:14",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9659:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9659:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9652:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9824:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																	"nodeType": "YulIdentifier",
																	"src": "9735:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9735:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9735:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9837:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9848:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9853:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9844:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9844:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9837:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9630:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9638:3:14",
														"type": ""
													}
												],
												"src": "9496:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10039:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10049:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10061:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10072:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10057:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10057:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10049:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10096:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10107:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10092:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10092:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10115:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10121:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10111:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10111:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10085:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10085:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10085:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10141:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10275:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10149:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10149:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10141:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10019:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10034:4:14",
														"type": ""
													}
												],
												"src": "9868:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10321:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10338:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10341:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10331:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10331:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10331:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10435:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10438:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10428:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10428:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10428:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10459:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10462:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10452:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10452:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10452:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10293:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10527:300:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10537:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10560:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10542:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10542:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10537:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10571:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10594:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10576:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10576:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10571:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10769:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10771:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10771:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10771:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10681:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10674:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10674:9:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10667:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10667:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10689:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10696:66:14",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10764:1:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10692:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10692:74:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10686:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10686:81:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10663:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10663:105:14"
															},
															"nodeType": "YulIf",
															"src": "10660:131:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10801:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10816:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10819:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10812:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10812:9:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10801:7:14"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10510:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10513:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10519:7:14",
														"type": ""
													}
												],
												"src": "10479:348:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10877:261:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10887:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10910:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10892:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10892:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10887:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10921:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10944:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10926:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10926:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10921:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11084:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11086:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11086:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11086:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11005:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11012:66:14",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11080:1:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11008:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11008:74:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11002:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11002:81:14"
															},
															"nodeType": "YulIf",
															"src": "10999:107:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11116:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11127:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11130:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11123:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11123:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11116:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10864:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10867:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10873:3:14",
														"type": ""
													}
												],
												"src": "10833:305:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11258:34:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11268:18:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11283:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11268:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11230:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11235:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11246:11:14",
														"type": ""
													}
												],
												"src": "11144:148:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11404:67:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11426:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11434:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11422:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11422:14:14"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11438:25:14",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11415:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11415:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11415:49:14"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11396:6:14",
														"type": ""
													}
												],
												"src": "11298:173:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11641:238:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11651:92:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11735:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11740:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11658:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11658:85:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11651:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11841:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "11752:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11752:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11752:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11854:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11865:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11870:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11861:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11861:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11854:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11629:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11637:3:14",
														"type": ""
													}
												],
												"src": "11477:402:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11944:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11955:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11971:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11965:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11965:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11955:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11927:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11937:6:14",
														"type": ""
													}
												],
												"src": "11885:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12039:258:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12049:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12058:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12053:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12118:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12143:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12148:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12139:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12139:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "12162:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12167:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12158:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12158:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12152:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12152:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12132:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12132:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12132:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12079:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12082:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12076:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12076:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12090:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12092:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12101:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12104:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12097:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12097:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12092:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12072:3:14",
																"statements": []
															},
															"src": "12068:113:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12215:76:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12265:3:14"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12270:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12261:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12261:16:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12279:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12254:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12254:27:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12254:27:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12196:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12199:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12193:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12193:13:14"
															},
															"nodeType": "YulIf",
															"src": "12190:101:14"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12021:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12026:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12031:6:14",
														"type": ""
													}
												],
												"src": "11990:307:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12413:267:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12423:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12470:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12437:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12437:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12427:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12485:96:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12569:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12574:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12492:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12492:89:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12485:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12616:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12623:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12612:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12612:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12630:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12635:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12590:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12590:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12590:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12651:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12662:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12667:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12658:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12658:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12651:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12394:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12401:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12409:3:14",
														"type": ""
													}
												],
												"src": "12303:377:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12792:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12814:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12822:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12810:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12810:14:14"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12826:19:14",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12803:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12803:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12803:43:14"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12784:6:14",
														"type": ""
													}
												],
												"src": "12686:167:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13023:238:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13033:92:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13117:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13122:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13040:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13040:85:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13033:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13223:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "13134:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13134:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13134:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13236:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13247:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13252:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13243:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13243:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13236:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13011:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13019:3:14",
														"type": ""
													}
												],
												"src": "12859:402:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13653:581:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13664:155:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13815:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13671:142:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13671:148:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13664:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13829:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13918:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13927:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13836:81:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13836:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13829:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13941:155:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14092:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13948:142:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13948:148:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13941:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14106:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14195:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14204:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14113:81:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14113:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14106:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14218:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14225:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14218:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13624:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13630:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13638:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13649:3:14",
														"type": ""
													}
												],
												"src": "13267:967:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14288:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14298:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14316:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14323:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14312:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14312:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14332:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14328:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14328:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14308:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14308:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14298:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14271:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "14281:6:14",
														"type": ""
													}
												],
												"src": "14240:102:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14440:272:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14450:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14497:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14464:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14464:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14454:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14512:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14578:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14583:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14519:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14519:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14512:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14625:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14632:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14621:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14621:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14639:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14644:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "14599:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14599:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14599:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14660:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14671:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14698:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "14676:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14676:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14667:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14667:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14660:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14421:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14428:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14436:3:14",
														"type": ""
													}
												],
												"src": "14348:364:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14836:195:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14846:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14858:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14869:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14854:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14854:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14846:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14893:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14904:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14889:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14889:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14912:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14918:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14908:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14908:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14882:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14882:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14882:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14938:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15010:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15019:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14946:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14946:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14938:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14808:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14820:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14831:4:14",
														"type": ""
													}
												],
												"src": "14718:313:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15102:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15119:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15142:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15124:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15124:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15112:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15112:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15112:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15090:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15097:3:14",
														"type": ""
													}
												],
												"src": "15037:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15287:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15297:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15309:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15320:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15305:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15305:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15297:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15377:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15390:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15401:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15386:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15386:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15333:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15333:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15333:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15458:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15471:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15482:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15467:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15467:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15414:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15414:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15414:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15251:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15263:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15271:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15282:4:14",
														"type": ""
													}
												],
												"src": "15161:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15527:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15544:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15547:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15537:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15537:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15537:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15641:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15644:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15634:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15634:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15665:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15668:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15658:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15658:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15658:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15499:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15713:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15730:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15733:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15723:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15723:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15723:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15827:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15830:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15820:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15820:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15820:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15851:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15854:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15844:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15844:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15844:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15685:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15914:128:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15924:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15951:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15933:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15933:24:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15924:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15985:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15987:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15987:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15987:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15972:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15979:4:14",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15969:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15969:15:14"
															},
															"nodeType": "YulIf",
															"src": "15966:41:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16016:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16027:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16034:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16023:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16023:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16016:3:14"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15900:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15910:3:14",
														"type": ""
													}
												],
												"src": "15871:171:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16154:76:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16176:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16184:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16172:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16172:14:14"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16188:34:14",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16165:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16165:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16165:58:14"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16146:6:14",
														"type": ""
													}
												],
												"src": "16048:182:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16382:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16392:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16458:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16463:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16399:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16399:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16392:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16564:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "16475:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16475:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16475:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16577:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16588:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16593:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16584:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16584:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16577:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16370:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16378:3:14",
														"type": ""
													}
												],
												"src": "16236:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16779:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16789:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16801:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16812:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16797:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16797:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16789:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16836:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16847:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16832:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16832:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16855:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16861:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16851:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16851:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16825:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16825:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16825:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16881:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17015:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16889:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16889:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16881:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16759:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16774:4:14",
														"type": ""
													}
												],
												"src": "16608:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17073:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17127:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17136:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17139:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17129:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17129:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17129:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17096:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17118:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "17103:14:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17103:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17093:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17093:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17086:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17086:40:14"
															},
															"nodeType": "YulIf",
															"src": "17083:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17066:5:14",
														"type": ""
													}
												],
												"src": "17033:116:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17215:77:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17225:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17240:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17234:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17234:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17225:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17280:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "17256:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17256:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17256:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17193:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17201:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17209:5:14",
														"type": ""
													}
												],
												"src": "17155:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17372:271:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17418:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17420:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17420:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17420:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17393:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17402:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17389:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17389:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17414:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17385:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17385:32:14"
															},
															"nodeType": "YulIf",
															"src": "17382:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "17511:125:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17526:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17540:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17530:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17555:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17598:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17609:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17594:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17594:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17618:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "17565:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17565:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17555:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17342:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17353:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17365:6:14",
														"type": ""
													}
												],
												"src": "17298:345:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17755:123:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17777:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17785:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17773:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17773:14:14"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17789:34:14",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17766:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17766:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17766:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17845:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17853:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17841:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17841:15:14"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17858:12:14",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17834:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17834:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17834:37:14"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17747:6:14",
														"type": ""
													}
												],
												"src": "17649:229:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18030:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18040:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18106:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18111:2:14",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18047:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18047:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18040:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18212:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "18123:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18123:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18123:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18225:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18236:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18241:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18232:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18232:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18225:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18018:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18026:3:14",
														"type": ""
													}
												],
												"src": "17884:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18427:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18437:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18449:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18460:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18445:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18445:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18437:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18484:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18495:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18480:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18480:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18503:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18509:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18499:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18499:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18473:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18473:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18473:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18529:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18663:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18537:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18537:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18529:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18407:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18422:4:14",
														"type": ""
													}
												],
												"src": "18256:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18787:119:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18809:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18817:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18805:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18805:14:14"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18821:34:14",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18798:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18798:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18798:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18877:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18885:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18873:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18873:15:14"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18890:8:14",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18866:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18866:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18866:33:14"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18779:6:14",
														"type": ""
													}
												],
												"src": "18681:225:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19058:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19068:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19134:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19139:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19075:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19075:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19068:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19240:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "19151:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19151:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19151:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19253:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19264:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19269:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19260:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19260:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19253:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19046:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19054:3:14",
														"type": ""
													}
												],
												"src": "18912:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19455:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19465:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19477:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19488:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19473:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19473:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19465:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19512:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19523:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19508:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19508:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19531:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19537:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19527:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19527:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19501:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19501:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19501:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19557:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19691:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19565:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19565:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19557:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19435:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19450:4:14",
														"type": ""
													}
												],
												"src": "19284:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19815:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19837:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19845:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19833:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19833:14:14"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19849:31:14",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19826:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19826:55:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19826:55:14"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19807:6:14",
														"type": ""
													}
												],
												"src": "19709:179:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20040:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20050:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20116:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20121:2:14",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20057:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20057:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20050:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20222:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "20133:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20133:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20133:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20235:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20246:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20251:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20242:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20242:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20235:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20028:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20036:3:14",
														"type": ""
													}
												],
												"src": "19894:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20437:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20447:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20459:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20470:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20455:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20455:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20447:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20494:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20505:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20490:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20490:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20513:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20519:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20509:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20509:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20483:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20483:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20483:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20539:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20673:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20547:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20547:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20539:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20417:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20432:4:14",
														"type": ""
													}
												],
												"src": "20266:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20749:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20760:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20776:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20770:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20770:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20760:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20732:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20742:6:14",
														"type": ""
													}
												],
												"src": "20691:98:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20908:34:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20918:18:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "20933:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "20918:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20880:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20885:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "20896:11:14",
														"type": ""
													}
												],
												"src": "20795:147:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21056:265:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21066:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21112:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21080:31:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21080:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21070:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21127:95:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21210:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21215:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21134:75:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21134:88:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21127:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21257:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21264:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21253:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21253:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21271:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21276:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "21231:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21231:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21231:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21292:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21303:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21308:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21299:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21299:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21292:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21037:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21044:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21052:3:14",
														"type": ""
													}
												],
												"src": "20948:373:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21461:137:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21472:100:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21559:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21568:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21479:79:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21479:93:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21472:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21582:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "21589:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21582:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21440:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21446:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21457:3:14",
														"type": ""
													}
												],
												"src": "21327:271:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$510_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$510_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$510_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$510__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$510_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: beneficiary is the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: weiAmount is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100ab5760003560e01c8063521eb27311610064578063521eb273146101f657806391d1485414610221578063a217fddf1461025e578063d547741f14610289578063ec8ac4d8146102b2578063fc0c546a146102ce576100c2565b806301ffc9a7146100d4578063248a9ca3146101115780632c4e722e1461014e5780632f2ff15d1461017957806336568abe146101a25780634042b66f146101cb576100c2565b366100c2576100c06100bb6102f9565b610301565b005b6100d26100cd6102f9565b610301565b005b3480156100e057600080fd5b506100fb60048036038101906100f691906110a8565b61040c565b60405161010891906110f0565b60405180910390f35b34801561011d57600080fd5b5061013860048036038101906101339190611141565b610486565b604051610145919061117d565b60405180910390f35b34801561015a57600080fd5b506101636104a6565b60405161017091906111b1565b60405180910390f35b34801561018557600080fd5b506101a0600480360381019061019b919061122a565b6104b0565b005b3480156101ae57600080fd5b506101c960048036038101906101c4919061122a565b6104d1565b005b3480156101d757600080fd5b506101e0610554565b6040516101ed91906111b1565b60405180910390f35b34801561020257600080fd5b5061020b61055e565b604051610218919061128b565b60405180910390f35b34801561022d57600080fd5b506102486004803603810190610243919061122a565b610588565b60405161025591906110f0565b60405180910390f35b34801561026a57600080fd5b506102736105f3565b604051610280919061117d565b60405180910390f35b34801561029557600080fd5b506102b060048036038101906102ab919061122a565b6105fa565b005b6102cc60048036038101906102c791906112a6565b610301565b005b3480156102da57600080fd5b506102e361061b565b6040516102f09190611332565b60405180910390f35b600033905090565b60026000541415610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033e906113aa565b60405180910390fd5b6002600081905550600034905061035e8282610645565b6000610369826106fd565b9050610375838261071b565b8273ffffffffffffffffffffffffffffffffffffffff166103946102f9565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b84846040516103db9291906113ca565b60405180910390a36103ed8383610729565b6103f5610743565b6103ff83836107ae565b5050600160008190555050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061047f575061047e826107b2565b5b9050919050565b600060016000838152602001908152602001600020600101549050919050565b6000600454905090565b6104b982610486565b6104c28161081c565b6104cc8383610830565b505050565b6104d96102f9565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053d90611465565b60405180910390fd5b6105508282610910565b5050565b6000600554905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b61060382610486565b61060c8161081c565b6106168383610910565b505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ac906114f7565b60405180910390fd5b60008114156106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f090611563565b60405180910390fd5b5050565b6000610714600454836109f290919063ffffffff16565b9050919050565b6107258282610a08565b5050565b61073e81600554610a5990919063ffffffff16565b505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156107ab573d6000803e3d6000fd5b50565b5050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61082d816108286102f9565b610a6f565b50565b61083a8282610588565b61090c57600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506108b16102f9565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61091a8282610588565b156109ee5760006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506109936102f9565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008183610a0091906115b2565b905092915050565b610a558282600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610b0c9092919063ffffffff16565b5050565b60008183610a67919061160c565b905092915050565b610a798282610588565b610b0857610a9e8173ffffffffffffffffffffffffffffffffffffffff166014610b92565b610aac8360001c6020610b92565b604051602001610abd929190611774565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aff91906117f8565b60405180910390fd5b5050565b610b8d8363a9059cbb60e01b8484604051602401610b2b929190611829565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610dce565b505050565b606060006002836002610ba591906115b2565b610baf919061160c565b67ffffffffffffffff811115610bc857610bc7611852565b5b6040519080825280601f01601f191660200182016040528015610bfa5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610c3257610c31611881565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610c9657610c95611881565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610cd691906115b2565b610ce0919061160c565b90505b6001811115610d80577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610d2257610d21611881565b5b1a60f81b828281518110610d3957610d38611881565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610d79906118b0565b9050610ce3565b5060008414610dc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbb90611926565b60405180910390fd5b8091505092915050565b6000610e30826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610e959092919063ffffffff16565b9050600081511115610e905780806020019051810190610e509190611972565b610e8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8690611a11565b60405180910390fd5b5b505050565b6060610ea48484600085610ead565b90509392505050565b606082471015610ef2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee990611aa3565b60405180910390fd5b610efb85610fc1565b610f3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3190611b0f565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610f639190611b76565b60006040518083038185875af1925050503d8060008114610fa0576040519150601f19603f3d011682016040523d82523d6000602084013e610fa5565b606091505b5091509150610fb5828286610fe4565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610ff457829050611044565b6000835111156110075782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103b91906117f8565b60405180910390fd5b9392505050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61108581611050565b811461109057600080fd5b50565b6000813590506110a28161107c565b92915050565b6000602082840312156110be576110bd61104b565b5b60006110cc84828501611093565b91505092915050565b60008115159050919050565b6110ea816110d5565b82525050565b600060208201905061110560008301846110e1565b92915050565b6000819050919050565b61111e8161110b565b811461112957600080fd5b50565b60008135905061113b81611115565b92915050565b6000602082840312156111575761115661104b565b5b60006111658482850161112c565b91505092915050565b6111778161110b565b82525050565b6000602082019050611192600083018461116e565b92915050565b6000819050919050565b6111ab81611198565b82525050565b60006020820190506111c660008301846111a2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111f7826111cc565b9050919050565b611207816111ec565b811461121257600080fd5b50565b600081359050611224816111fe565b92915050565b600080604083850312156112415761124061104b565b5b600061124f8582860161112c565b925050602061126085828601611215565b9150509250929050565b6000611275826111cc565b9050919050565b6112858161126a565b82525050565b60006020820190506112a0600083018461127c565b92915050565b6000602082840312156112bc576112bb61104b565b5b60006112ca84828501611215565b91505092915050565b6000819050919050565b60006112f86112f36112ee846111cc565b6112d3565b6111cc565b9050919050565b600061130a826112dd565b9050919050565b600061131c826112ff565b9050919050565b61132c81611311565b82525050565b60006020820190506113476000830184611323565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611394601f8361134d565b915061139f8261135e565b602082019050919050565b600060208201905081810360008301526113c381611387565b9050919050565b60006040820190506113df60008301856111a2565b6113ec60208301846111a2565b9392505050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b600061144f602f8361134d565b915061145a826113f3565b604082019050919050565b6000602082019050818103600083015261147e81611442565b9050919050565b7f43726f776473616c653a2062656e656669636961727920697320746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b60006114e1602a8361134d565b91506114ec82611485565b604082019050919050565b60006020820190508181036000830152611510816114d4565b9050919050565b7f43726f776473616c653a20776569416d6f756e74206973203000000000000000600082015250565b600061154d60198361134d565b915061155882611517565b602082019050919050565b6000602082019050818103600083015261157c81611540565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115bd82611198565b91506115c883611198565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561160157611600611583565b5b828202905092915050565b600061161782611198565b915061162283611198565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561165757611656611583565b5b828201905092915050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006116a3601783611662565b91506116ae8261166d565b601782019050919050565b600081519050919050565b60005b838110156116e25780820151818401526020810190506116c7565b838111156116f1576000848401525b50505050565b6000611702826116b9565b61170c8185611662565b935061171c8185602086016116c4565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b600061175e601183611662565b915061176982611728565b601182019050919050565b600061177f82611696565b915061178b82856116f7565b915061179682611751565b91506117a282846116f7565b91508190509392505050565b6000601f19601f8301169050919050565b60006117ca826116b9565b6117d4818561134d565b93506117e48185602086016116c4565b6117ed816117ae565b840191505092915050565b6000602082019050818103600083015261181281846117bf565b905092915050565b611823816111ec565b82525050565b600060408201905061183e600083018561181a565b61184b60208301846111a2565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006118bb82611198565b915060008214156118cf576118ce611583565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061191060208361134d565b915061191b826118da565b602082019050919050565b6000602082019050818103600083015261193f81611903565b9050919050565b61194f816110d5565b811461195a57600080fd5b50565b60008151905061196c81611946565b92915050565b6000602082840312156119885761198761104b565b5b60006119968482850161195d565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006119fb602a8361134d565b9150611a068261199f565b604082019050919050565b60006020820190508181036000830152611a2a816119ee565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611a8d60268361134d565b9150611a9882611a31565b604082019050919050565b60006020820190508181036000830152611abc81611a80565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611af9601d8361134d565b9150611b0482611ac3565b602082019050919050565b60006020820190508181036000830152611b2881611aec565b9050919050565b600081519050919050565b600081905092915050565b6000611b5082611b2f565b611b5a8185611b3a565b9350611b6a8185602086016116c4565b80840191505092915050565b6000611b828284611b45565b91508190509291505056fea26469706673582212207fe8da5c9b3ac1b40555d8f8988569c44a30fd4b3047c6476f5e76c19b5800a964736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x521EB273 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2CE JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0x1CB JUMPI PUSH2 0xC2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xC2 JUMPI PUSH2 0xC0 PUSH2 0xBB PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD2 PUSH2 0xCD PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x347 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH2 0x35E DUP3 DUP3 PUSH2 0x645 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369 DUP3 PUSH2 0x6FD JUMP JUMPDEST SWAP1 POP PUSH2 0x375 DUP4 DUP3 PUSH2 0x71B JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x394 PUSH2 0x2F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP3 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x3ED DUP4 DUP4 PUSH2 0x729 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x3FF DUP4 DUP4 PUSH2 0x7AE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x47F JUMPI POP PUSH2 0x47E DUP3 PUSH2 0x7B2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4B9 DUP3 PUSH2 0x486 JUMP JUMPDEST PUSH2 0x4C2 DUP2 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x4CC DUP4 DUP4 PUSH2 0x830 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4D9 PUSH2 0x2F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x550 DUP3 DUP3 PUSH2 0x910 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x603 DUP3 PUSH2 0x486 JUMP JUMPDEST PUSH2 0x60C DUP2 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x616 DUP4 DUP4 PUSH2 0x910 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714 PUSH1 0x4 SLOAD DUP4 PUSH2 0x9F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x725 DUP3 DUP3 PUSH2 0xA08 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x73E DUP2 PUSH1 0x5 SLOAD PUSH2 0xA59 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82D DUP2 PUSH2 0x828 PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0xA6F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x83A DUP3 DUP3 PUSH2 0x588 JUMP JUMPDEST PUSH2 0x90C JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8B1 PUSH2 0x2F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x91A DUP3 DUP3 PUSH2 0x588 JUMP JUMPDEST ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x993 PUSH2 0x2F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0x15B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA55 DUP3 DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB0C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA67 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA79 DUP3 DUP3 PUSH2 0x588 JUMP JUMPDEST PUSH2 0xB08 JUMPI PUSH2 0xA9E DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0xAAC DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xABD SWAP3 SWAP2 SWAP1 PUSH2 0x1774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB8D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB2B SWAP3 SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xDCE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x15B2 JUMP JUMPDEST PUSH2 0xBAF SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBC8 JUMPI PUSH2 0xBC7 PUSH2 0x1852 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBFA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC32 JUMPI PUSH2 0xC31 PUSH2 0x1881 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC96 JUMPI PUSH2 0xC95 PUSH2 0x1881 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xCD6 SWAP2 SWAP1 PUSH2 0x15B2 JUMP JUMPDEST PUSH2 0xCE0 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD80 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xD22 JUMPI PUSH2 0xD21 PUSH2 0x1881 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD39 JUMPI PUSH2 0xD38 PUSH2 0x1881 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xD79 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST SWAP1 POP PUSH2 0xCE3 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBB SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE30 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE95 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xE90 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xE50 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH2 0xE8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE86 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEA4 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xEAD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE9 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEFB DUP6 PUSH2 0xFC1 JUMP JUMPDEST PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF31 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF63 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFA0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFA5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xFB5 DUP3 DUP3 DUP7 PUSH2 0xFE4 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xFF4 JUMPI DUP3 SWAP1 POP PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1007 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103B SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1085 DUP2 PUSH2 0x1050 JUMP JUMPDEST DUP2 EQ PUSH2 0x1090 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A2 DUP2 PUSH2 0x107C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BE JUMPI PUSH2 0x10BD PUSH2 0x104B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CC DUP5 DUP3 DUP6 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EA DUP2 PUSH2 0x10D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1105 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111E DUP2 PUSH2 0x110B JUMP JUMPDEST DUP2 EQ PUSH2 0x1129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113B DUP2 PUSH2 0x1115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1157 JUMPI PUSH2 0x1156 PUSH2 0x104B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1165 DUP5 DUP3 DUP6 ADD PUSH2 0x112C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1177 DUP2 PUSH2 0x110B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1192 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x116E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AB DUP2 PUSH2 0x1198 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F7 DUP3 PUSH2 0x11CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1207 DUP2 PUSH2 0x11EC JUMP JUMPDEST DUP2 EQ PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1224 DUP2 PUSH2 0x11FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1241 JUMPI PUSH2 0x1240 PUSH2 0x104B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x124F DUP6 DUP3 DUP7 ADD PUSH2 0x112C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1260 DUP6 DUP3 DUP7 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1275 DUP3 PUSH2 0x11CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1285 DUP2 PUSH2 0x126A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BC JUMPI PUSH2 0x12BB PUSH2 0x104B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12CA DUP5 DUP3 DUP6 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F8 PUSH2 0x12F3 PUSH2 0x12EE DUP5 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0x11CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130A DUP3 PUSH2 0x12DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131C DUP3 PUSH2 0x12FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x132C DUP2 PUSH2 0x1311 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1347 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1323 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1394 PUSH1 0x1F DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x139F DUP3 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13C3 DUP2 PUSH2 0x1387 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13DF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x11A2 JUMP JUMPDEST PUSH2 0x13EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144F PUSH1 0x2F DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x145A DUP3 PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x147E DUP2 PUSH2 0x1442 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E1 PUSH1 0x2A DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x14EC DUP3 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1510 DUP2 PUSH2 0x14D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D PUSH1 0x19 DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x1558 DUP3 PUSH2 0x1517 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x157C DUP2 PUSH2 0x1540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15BD DUP3 PUSH2 0x1198 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C8 DUP4 PUSH2 0x1198 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x1583 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1617 DUP3 PUSH2 0x1198 JUMP JUMPDEST SWAP2 POP PUSH2 0x1622 DUP4 PUSH2 0x1198 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1657 JUMPI PUSH2 0x1656 PUSH2 0x1583 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A3 PUSH1 0x17 DUP4 PUSH2 0x1662 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AE DUP3 PUSH2 0x166D JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16C7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16F1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1702 DUP3 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x170C DUP2 DUP6 PUSH2 0x1662 JUMP JUMPDEST SWAP4 POP PUSH2 0x171C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16C4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175E PUSH1 0x11 DUP4 PUSH2 0x1662 JUMP JUMPDEST SWAP2 POP PUSH2 0x1769 DUP3 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177F DUP3 PUSH2 0x1696 JUMP JUMPDEST SWAP2 POP PUSH2 0x178B DUP3 DUP6 PUSH2 0x16F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1796 DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A2 DUP3 DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CA DUP3 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x17D4 DUP2 DUP6 PUSH2 0x134D JUMP JUMPDEST SWAP4 POP PUSH2 0x17E4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x17ED DUP2 PUSH2 0x17AE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1812 DUP2 DUP5 PUSH2 0x17BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1823 DUP2 PUSH2 0x11EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x183E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x184B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18BB DUP3 PUSH2 0x1198 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x18CF JUMPI PUSH2 0x18CE PUSH2 0x1583 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1910 PUSH1 0x20 DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x191B DUP3 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x193F DUP2 PUSH2 0x1903 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x194F DUP2 PUSH2 0x10D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x195A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x196C DUP2 PUSH2 0x1946 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1988 JUMPI PUSH2 0x1987 PUSH2 0x104B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1996 DUP5 DUP3 DUP6 ADD PUSH2 0x195D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FB PUSH1 0x2A DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A06 DUP3 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A2A DUP2 PUSH2 0x19EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8D PUSH1 0x26 DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A98 DUP3 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ABC DUP2 PUSH2 0x1A80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF9 PUSH1 0x1D DUP4 PUSH2 0x134D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B04 DUP3 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B28 DUP2 PUSH2 0x1AEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 DUP3 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0x1B5A DUP2 DUP6 PUSH2 0x1B3A JUMP JUMPDEST SWAP4 POP PUSH2 0x1B6A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16C4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B82 DUP3 DUP5 PUSH2 0x1B45 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xE8DA5C9B3AC1B40555D8F8988569C44A30FD4B3047C6476F5E76C19B5800A964 PUSH20 0x6F6C634300080900330000000000000000000000 ",
							"sourceMap": "1110:6885:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3383:23;3393:12;:10;:12::i;:::-;3383:9;:23::i;:::-;1110:6885;;3309:23;3319:12;:10;:12::i;:::-;3309:9;:23::i;:::-;1110:6885;2606:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4391:129;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3796:75:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4816:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5925:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3934:85:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3624:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2895:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5241:147;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4276:542:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3472:76;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;640:96:7;693:7;719:10;712:17;;640:96;:::o;4276:542:12:-;1744:1:2;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;4363:17:12::1;4383:9;4363:29;;4402:44;4423:11;4436:9;4402:20;:44::i;:::-;4505:14;4522:26;4538:9;4522:15;:26::i;:::-;4505:43;;4560:37;4577:11;4590:6;4560:16;:37::i;:::-;4642:11;4612:61;;4628:12;:10;:12::i;:::-;4612:61;;;4655:9;4666:6;4612:61;;;;;;;:::i;:::-;;;;;;;;4684:46;4707:11;4720:9;4684:22;:46::i;:::-;4741:15;:13;:15::i;:::-;4766:45;4788:11;4801:9;4766:21;:45::i;:::-;4353:465;;1701:1:2::0;2628:7;:22;;;;4276:542:12;:::o;2606:202:0:-;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;4391:129::-;4465:7;4491:6;:12;4498:4;4491:12;;;;;;;;;;;:22;;;4484:29;;4391:129;;;:::o;3796:75:12:-;3833:7;3859:5;;3852:12;;3796:75;:::o;4816:145:0:-;4899:18;4912:4;4899:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4929:25:::1;4940:4;4946:7;4929:10;:25::i;:::-;4816:145:::0;;;:::o;5925:214::-;6031:12;:10;:12::i;:::-;6020:23;;:7;:23;;;6012:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6106:26;6118:4;6124:7;6106:11;:26::i;:::-;5925:214;;:::o;3934:85:12:-;3976:7;4002:10;;3995:17;;3934:85;:::o;3624:87::-;3663:15;3697:7;;;;;;;;;;;3690:14;;3624:87;:::o;2895:145:0:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;2027:49::-;2072:4;2027:49;;;:::o;5241:147::-;5325:18;5338:4;5325:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5355:26:::1;5367:4;5373:7;5355:11;:26::i;:::-;5241:147:::0;;;:::o;3472:76:12:-;3510:6;3535;;;;;;;;;;;3528:13;;3472:76;:::o;5360:384::-;5493:1;5470:25;;:11;:25;;;;5462:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;5573:1;5560:9;:14;;5552:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5360:384;;:::o;7700:128::-;7775:7;7801:20;7815:5;;7801:9;:13;;:20;;;;:::i;:::-;7794:27;;7700:128;;;:::o;6887:143::-;6983:40;6998:11;7011;6983:14;:40::i;:::-;6887:143;;:::o;7300:151::-;7407:25;7422:9;7407:10;;:14;;:25;;;;:::i;:::-;;7300:151;;:::o;7915:78::-;7959:7;;;;;;;;;;;:16;;:27;7976:9;7959:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7915:78::o;6039:157::-;;;:::o;829:155:9:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3334:103:0:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;7474:233::-;7557:22;7565:4;7571:7;7557;:22::i;:::-;7552:149;;7627:4;7595:6;:12;7602:4;7595:12;;;;;;;;;;;:20;;:29;7616:7;7595:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7677:12;:10;:12::i;:::-;7650:40;;7668:7;7650:40;;7662:4;7650:40;;;;;;;;;;7552:149;7474:233;;:::o;7878:234::-;7961:22;7969:4;7975:7;7961;:22::i;:::-;7957:149;;;8031:5;7999:6;:12;8006:4;7999:12;;;;;;;;;;;:20;;:29;8020:7;7999:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8082:12;:10;:12::i;:::-;8055:40;;8073:7;8055:40;;8067:4;8055:40;;;;;;;;;;7957:149;7878:234;;:::o;3465:96:11:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;6476:145:12:-;6569:45;6589:11;6602;6569:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6476:145;;:::o;2755:96:11:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3718:492:0:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;3989:41;;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4121:13;;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:349;;;;;;;;;;;:::i;:::-;;;;;;;;3801:403;3718:492;;:::o;763:205:5:-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;1652:441:8:-;1727:13;1752:19;1797:1;1788:6;1784:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1774:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1752:47;;1809:15;:6;1816:1;1809:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1834;:6;1841:1;1834:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1864:9;1889:1;1880:6;1876:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;1930:12;1951:3;1943:5;:11;1930:25;;;;;;;:::i;:::-;;;;;1918:6;1925:1;1918:9;;;;;;;;:::i;:::-;;;;;:37;;;;;;;;;;;1979:1;1969:11;;;;;1899:3;;;;:::i;:::-;;;1859:132;;;;2017:1;2008:5;:10;2000:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2079:6;2065:21;;;1652:441;;;;:::o;3747:706:5:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;3861:223:6:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:742::-;7707:12;7735:7;7731:566;;;7765:10;7758:17;;;;7731:566;7896:1;7876:10;:17;:21;7872:415;;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:742;;;;;;:::o;88:117:14:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:77::-;2598:7;2627:5;2616:16;;2561:77;;;:::o;2644:118::-;2731:24;2749:5;2731:24;:::i;:::-;2726:3;2719:37;2644:118;;:::o;2768:222::-;2861:4;2899:2;2888:9;2884:18;2876:26;;2912:71;2980:1;2969:9;2965:17;2956:6;2912:71;:::i;:::-;2768:222;;;;:::o;2996:126::-;3033:7;3073:42;3066:5;3062:54;3051:65;;2996:126;;;:::o;3128:96::-;3165:7;3194:24;3212:5;3194:24;:::i;:::-;3183:35;;3128:96;;;:::o;3230:122::-;3303:24;3321:5;3303:24;:::i;:::-;3296:5;3293:35;3283:63;;3342:1;3339;3332:12;3283:63;3230:122;:::o;3358:139::-;3404:5;3442:6;3429:20;3420:29;;3458:33;3485:5;3458:33;:::i;:::-;3358:139;;;;:::o;3503:474::-;3571:6;3579;3628:2;3616:9;3607:7;3603:23;3599:32;3596:119;;;3634:79;;:::i;:::-;3596:119;3754:1;3779:53;3824:7;3815:6;3804:9;3800:22;3779:53;:::i;:::-;3769:63;;3725:117;3881:2;3907:53;3952:7;3943:6;3932:9;3928:22;3907:53;:::i;:::-;3897:63;;3852:118;3503:474;;;;;:::o;3983:104::-;4028:7;4057:24;4075:5;4057:24;:::i;:::-;4046:35;;3983:104;;;:::o;4093:142::-;4196:32;4222:5;4196:32;:::i;:::-;4191:3;4184:45;4093:142;;:::o;4241:254::-;4350:4;4388:2;4377:9;4373:18;4365:26;;4401:87;4485:1;4474:9;4470:17;4461:6;4401:87;:::i;:::-;4241:254;;;;:::o;4501:329::-;4560:6;4609:2;4597:9;4588:7;4584:23;4580:32;4577:119;;;4615:79;;:::i;:::-;4577:119;4735:1;4760:53;4805:7;4796:6;4785:9;4781:22;4760:53;:::i;:::-;4750:63;;4706:117;4501:329;;;;:::o;4836:60::-;4864:3;4885:5;4878:12;;4836:60;;;:::o;4902:142::-;4952:9;4985:53;5003:34;5012:24;5030:5;5012:24;:::i;:::-;5003:34;:::i;:::-;4985:53;:::i;:::-;4972:66;;4902:142;;;:::o;5050:126::-;5100:9;5133:37;5164:5;5133:37;:::i;:::-;5120:50;;5050:126;;;:::o;5182:140::-;5246:9;5279:37;5310:5;5279:37;:::i;:::-;5266:50;;5182:140;;;:::o;5328:159::-;5429:51;5474:5;5429:51;:::i;:::-;5424:3;5417:64;5328:159;;:::o;5493:250::-;5600:4;5638:2;5627:9;5623:18;5615:26;;5651:85;5733:1;5722:9;5718:17;5709:6;5651:85;:::i;:::-;5493:250;;;;:::o;5749:169::-;5833:11;5867:6;5862:3;5855:19;5907:4;5902:3;5898:14;5883:29;;5749:169;;;;:::o;5924:181::-;6064:33;6060:1;6052:6;6048:14;6041:57;5924:181;:::o;6111:366::-;6253:3;6274:67;6338:2;6333:3;6274:67;:::i;:::-;6267:74;;6350:93;6439:3;6350:93;:::i;:::-;6468:2;6463:3;6459:12;6452:19;;6111:366;;;:::o;6483:419::-;6649:4;6687:2;6676:9;6672:18;6664:26;;6736:9;6730:4;6726:20;6722:1;6711:9;6707:17;6700:47;6764:131;6890:4;6764:131;:::i;:::-;6756:139;;6483:419;;;:::o;6908:332::-;7029:4;7067:2;7056:9;7052:18;7044:26;;7080:71;7148:1;7137:9;7133:17;7124:6;7080:71;:::i;:::-;7161:72;7229:2;7218:9;7214:18;7205:6;7161:72;:::i;:::-;6908:332;;;;;:::o;7246:234::-;7386:34;7382:1;7374:6;7370:14;7363:58;7455:17;7450:2;7442:6;7438:15;7431:42;7246:234;:::o;7486:366::-;7628:3;7649:67;7713:2;7708:3;7649:67;:::i;:::-;7642:74;;7725:93;7814:3;7725:93;:::i;:::-;7843:2;7838:3;7834:12;7827:19;;7486:366;;;:::o;7858:419::-;8024:4;8062:2;8051:9;8047:18;8039:26;;8111:9;8105:4;8101:20;8097:1;8086:9;8082:17;8075:47;8139:131;8265:4;8139:131;:::i;:::-;8131:139;;7858:419;;;:::o;8283:229::-;8423:34;8419:1;8411:6;8407:14;8400:58;8492:12;8487:2;8479:6;8475:15;8468:37;8283:229;:::o;8518:366::-;8660:3;8681:67;8745:2;8740:3;8681:67;:::i;:::-;8674:74;;8757:93;8846:3;8757:93;:::i;:::-;8875:2;8870:3;8866:12;8859:19;;8518:366;;;:::o;8890:419::-;9056:4;9094:2;9083:9;9079:18;9071:26;;9143:9;9137:4;9133:20;9129:1;9118:9;9114:17;9107:47;9171:131;9297:4;9171:131;:::i;:::-;9163:139;;8890:419;;;:::o;9315:175::-;9455:27;9451:1;9443:6;9439:14;9432:51;9315:175;:::o;9496:366::-;9638:3;9659:67;9723:2;9718:3;9659:67;:::i;:::-;9652:74;;9735:93;9824:3;9735:93;:::i;:::-;9853:2;9848:3;9844:12;9837:19;;9496:366;;;:::o;9868:419::-;10034:4;10072:2;10061:9;10057:18;10049:26;;10121:9;10115:4;10111:20;10107:1;10096:9;10092:17;10085:47;10149:131;10275:4;10149:131;:::i;:::-;10141:139;;9868:419;;;:::o;10293:180::-;10341:77;10338:1;10331:88;10438:4;10435:1;10428:15;10462:4;10459:1;10452:15;10479:348;10519:7;10542:20;10560:1;10542:20;:::i;:::-;10537:25;;10576:20;10594:1;10576:20;:::i;:::-;10571:25;;10764:1;10696:66;10692:74;10689:1;10686:81;10681:1;10674:9;10667:17;10663:105;10660:131;;;10771:18;;:::i;:::-;10660:131;10819:1;10816;10812:9;10801:20;;10479:348;;;;:::o;10833:305::-;10873:3;10892:20;10910:1;10892:20;:::i;:::-;10887:25;;10926:20;10944:1;10926:20;:::i;:::-;10921:25;;11080:1;11012:66;11008:74;11005:1;11002:81;10999:107;;;11086:18;;:::i;:::-;10999:107;11130:1;11127;11123:9;11116:16;;10833:305;;;;:::o;11144:148::-;11246:11;11283:3;11268:18;;11144:148;;;;:::o;11298:173::-;11438:25;11434:1;11426:6;11422:14;11415:49;11298:173;:::o;11477:402::-;11637:3;11658:85;11740:2;11735:3;11658:85;:::i;:::-;11651:92;;11752:93;11841:3;11752:93;:::i;:::-;11870:2;11865:3;11861:12;11854:19;;11477:402;;;:::o;11885:99::-;11937:6;11971:5;11965:12;11955:22;;11885:99;;;:::o;11990:307::-;12058:1;12068:113;12082:6;12079:1;12076:13;12068:113;;;12167:1;12162:3;12158:11;12152:18;12148:1;12143:3;12139:11;12132:39;12104:2;12101:1;12097:10;12092:15;;12068:113;;;12199:6;12196:1;12193:13;12190:101;;;12279:1;12270:6;12265:3;12261:16;12254:27;12190:101;12039:258;11990:307;;;:::o;12303:377::-;12409:3;12437:39;12470:5;12437:39;:::i;:::-;12492:89;12574:6;12569:3;12492:89;:::i;:::-;12485:96;;12590:52;12635:6;12630:3;12623:4;12616:5;12612:16;12590:52;:::i;:::-;12667:6;12662:3;12658:16;12651:23;;12413:267;12303:377;;;;:::o;12686:167::-;12826:19;12822:1;12814:6;12810:14;12803:43;12686:167;:::o;12859:402::-;13019:3;13040:85;13122:2;13117:3;13040:85;:::i;:::-;13033:92;;13134:93;13223:3;13134:93;:::i;:::-;13252:2;13247:3;13243:12;13236:19;;12859:402;;;:::o;13267:967::-;13649:3;13671:148;13815:3;13671:148;:::i;:::-;13664:155;;13836:95;13927:3;13918:6;13836:95;:::i;:::-;13829:102;;13948:148;14092:3;13948:148;:::i;:::-;13941:155;;14113:95;14204:3;14195:6;14113:95;:::i;:::-;14106:102;;14225:3;14218:10;;13267:967;;;;;:::o;14240:102::-;14281:6;14332:2;14328:7;14323:2;14316:5;14312:14;14308:28;14298:38;;14240:102;;;:::o;14348:364::-;14436:3;14464:39;14497:5;14464:39;:::i;:::-;14519:71;14583:6;14578:3;14519:71;:::i;:::-;14512:78;;14599:52;14644:6;14639:3;14632:4;14625:5;14621:16;14599:52;:::i;:::-;14676:29;14698:6;14676:29;:::i;:::-;14671:3;14667:39;14660:46;;14440:272;14348:364;;;;:::o;14718:313::-;14831:4;14869:2;14858:9;14854:18;14846:26;;14918:9;14912:4;14908:20;14904:1;14893:9;14889:17;14882:47;14946:78;15019:4;15010:6;14946:78;:::i;:::-;14938:86;;14718:313;;;;:::o;15037:118::-;15124:24;15142:5;15124:24;:::i;:::-;15119:3;15112:37;15037:118;;:::o;15161:332::-;15282:4;15320:2;15309:9;15305:18;15297:26;;15333:71;15401:1;15390:9;15386:17;15377:6;15333:71;:::i;:::-;15414:72;15482:2;15471:9;15467:18;15458:6;15414:72;:::i;:::-;15161:332;;;;;:::o;15499:180::-;15547:77;15544:1;15537:88;15644:4;15641:1;15634:15;15668:4;15665:1;15658:15;15685:180;15733:77;15730:1;15723:88;15830:4;15827:1;15820:15;15854:4;15851:1;15844:15;15871:171;15910:3;15933:24;15951:5;15933:24;:::i;:::-;15924:33;;15979:4;15972:5;15969:15;15966:41;;;15987:18;;:::i;:::-;15966:41;16034:1;16027:5;16023:13;16016:20;;15871:171;;;:::o;16048:182::-;16188:34;16184:1;16176:6;16172:14;16165:58;16048:182;:::o;16236:366::-;16378:3;16399:67;16463:2;16458:3;16399:67;:::i;:::-;16392:74;;16475:93;16564:3;16475:93;:::i;:::-;16593:2;16588:3;16584:12;16577:19;;16236:366;;;:::o;16608:419::-;16774:4;16812:2;16801:9;16797:18;16789:26;;16861:9;16855:4;16851:20;16847:1;16836:9;16832:17;16825:47;16889:131;17015:4;16889:131;:::i;:::-;16881:139;;16608:419;;;:::o;17033:116::-;17103:21;17118:5;17103:21;:::i;:::-;17096:5;17093:32;17083:60;;17139:1;17136;17129:12;17083:60;17033:116;:::o;17155:137::-;17209:5;17240:6;17234:13;17225:22;;17256:30;17280:5;17256:30;:::i;:::-;17155:137;;;;:::o;17298:345::-;17365:6;17414:2;17402:9;17393:7;17389:23;17385:32;17382:119;;;17420:79;;:::i;:::-;17382:119;17540:1;17565:61;17618:7;17609:6;17598:9;17594:22;17565:61;:::i;:::-;17555:71;;17511:125;17298:345;;;;:::o;17649:229::-;17789:34;17785:1;17777:6;17773:14;17766:58;17858:12;17853:2;17845:6;17841:15;17834:37;17649:229;:::o;17884:366::-;18026:3;18047:67;18111:2;18106:3;18047:67;:::i;:::-;18040:74;;18123:93;18212:3;18123:93;:::i;:::-;18241:2;18236:3;18232:12;18225:19;;17884:366;;;:::o;18256:419::-;18422:4;18460:2;18449:9;18445:18;18437:26;;18509:9;18503:4;18499:20;18495:1;18484:9;18480:17;18473:47;18537:131;18663:4;18537:131;:::i;:::-;18529:139;;18256:419;;;:::o;18681:225::-;18821:34;18817:1;18809:6;18805:14;18798:58;18890:8;18885:2;18877:6;18873:15;18866:33;18681:225;:::o;18912:366::-;19054:3;19075:67;19139:2;19134:3;19075:67;:::i;:::-;19068:74;;19151:93;19240:3;19151:93;:::i;:::-;19269:2;19264:3;19260:12;19253:19;;18912:366;;;:::o;19284:419::-;19450:4;19488:2;19477:9;19473:18;19465:26;;19537:9;19531:4;19527:20;19523:1;19512:9;19508:17;19501:47;19565:131;19691:4;19565:131;:::i;:::-;19557:139;;19284:419;;;:::o;19709:179::-;19849:31;19845:1;19837:6;19833:14;19826:55;19709:179;:::o;19894:366::-;20036:3;20057:67;20121:2;20116:3;20057:67;:::i;:::-;20050:74;;20133:93;20222:3;20133:93;:::i;:::-;20251:2;20246:3;20242:12;20235:19;;19894:366;;;:::o;20266:419::-;20432:4;20470:2;20459:9;20455:18;20447:26;;20519:9;20513:4;20509:20;20505:1;20494:9;20490:17;20483:47;20547:131;20673:4;20547:131;:::i;:::-;20539:139;;20266:419;;;:::o;20691:98::-;20742:6;20776:5;20770:12;20760:22;;20691:98;;;:::o;20795:147::-;20896:11;20933:3;20918:18;;20795:147;;;;:::o;20948:373::-;21052:3;21080:38;21112:5;21080:38;:::i;:::-;21134:88;21215:6;21210:3;21134:88;:::i;:::-;21127:95;;21231:52;21276:6;21271:3;21264:4;21257:5;21253:16;21231:52;:::i;:::-;21308:6;21303:3;21299:16;21292:23;;21056:265;20948:373;;;;:::o;21327:271::-;21457:3;21479:93;21568:3;21559:6;21479:93;:::i;:::-;21472:100;;21589:3;21582:10;;21327:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1421400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"DEFAULT_ADMIN_ROLE()": "379",
								"buyTokens(address)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3162",
								"rate()": "2482",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "728",
								"token()": "infinite",
								"wallet()": "2522",
								"weiRaised()": "2548"
							},
							"internal": {
								"_deliverTokens(address,uint256)": "infinite",
								"_forwardFunds()": "infinite",
								"_getTokenAmount(uint256)": "infinite",
								"_postValidatePurchase(address,uint256)": "13",
								"_preValidatePurchase(address,uint256)": "infinite",
								"_processPurchase(address,uint256)": "infinite",
								"_updatePurchasingState(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1110,
									"end": 7995,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1110,
									"end": 7995,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1110,
									"end": 7995,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2651,
									"end": 2652,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2643,
									"end": 2648,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "PUSH",
									"source": 12,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2714,
									"end": 2715,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2695,
									"end": 2716,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2695,
									"end": 2716,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2695,
									"end": 2702,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2695,
									"end": 2716,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2695,
									"end": 2716,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2695,
									"end": 2716,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2695,
									"end": 2716,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "PUSH",
									"source": 12,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 2687,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2803,
									"end": 2804,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2776,
									"end": 2805,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2776,
									"end": 2805,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2776,
									"end": 2805,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2776,
									"end": 2805,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2776,
									"end": 2805,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2776,
									"end": 2805,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "PUSH",
									"source": 12,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2768,
									"end": 2846,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2865,
									"end": 2870,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2857,
									"end": 2862,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2857,
									"end": 2870,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2857,
									"end": 2870,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2857,
									"end": 2870,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2857,
									"end": 2870,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2890,
									"end": 2897,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2887,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2880,
									"end": 2887,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2897,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2916,
									"end": 2922,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2913,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2907,
									"end": 2913,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 2974,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2943,
									"end": 2961,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2943,
									"end": 2961,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2963,
									"end": 2973,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 2942,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 2932,
									"end": 2942,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2932,
									"end": 2942,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 2974,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2932,
									"end": 2974,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 2974,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2932,
									"end": 2974,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 2932,
									"end": 2974,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2981,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1110,
									"end": 7995,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1110,
									"end": 7995,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6824,
									"end": 6934,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6824,
									"end": 6934,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6902,
									"end": 6927,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6913,
									"end": 6917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6919,
									"end": 6926,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6902,
									"end": 6912,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6902,
									"end": 6912,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6902,
									"end": 6912,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6902,
									"end": 6927,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6902,
									"end": 6927,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6902,
									"end": 6927,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6902,
									"end": 6927,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6902,
									"end": 6927,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 6934,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 6934,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 6934,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7557,
									"end": 7579,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7565,
									"end": 7569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7571,
									"end": 7578,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7557,
									"end": 7564,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 7557,
									"end": 7564,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7557,
									"end": 7564,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7557,
									"end": 7579,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7557,
									"end": 7579,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7557,
									"end": 7579,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7557,
									"end": 7579,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7557,
									"end": 7579,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7552,
									"end": 7701,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 7552,
									"end": 7701,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7627,
									"end": 7631,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7595,
									"end": 7601,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7602,
									"end": 7606,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7615,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7595,
									"end": 7615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7616,
									"end": 7623,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 7677,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 7677,
									"end": 7687,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7677,
									"end": 7687,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7668,
									"end": 7675,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7662,
									"end": 7666,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7552,
									"end": 7701,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 7552,
									"end": 7701,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3032,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 826,
									"end": 930,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 826,
									"end": 930,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 871,
									"end": 878,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 918,
									"end": 923,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "tag",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 889,
									"end": 924,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 889,
									"end": 924,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 826,
									"end": 930,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 826,
									"end": 930,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 1043,
									"end": 1048,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "tag",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1010,
									"end": 1015,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1007,
									"end": 1050,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1064,
									"end": 1065,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1061,
									"end": 1062,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1054,
									"end": 1066,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "tag",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1145,
									"end": 1150,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1182,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1170,
									"end": 1183,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 1227,
									"end": 1232,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "tag",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1282,
									"end": 1289,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 1329,
									"end": 1334,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "tag",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1398,
									"end": 1405,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1445,
									"end": 1450,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "tag",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 1582,
									"end": 1587,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "tag",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1543,
									"end": 1548,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1540,
									"end": 1589,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "tag",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1690,
									"end": 1695,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1721,
									"end": 1727,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1715,
									"end": 1728,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 1778,
									"end": 1783,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "tag",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1906,
									"end": 1912,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1914,
									"end": 1920,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1971,
									"end": 1973,
									"name": "PUSH",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 1959,
									"end": 1968,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1950,
									"end": 1957,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 1969,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1942,
									"end": 1974,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "tag",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "tag",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "82"
								},
								{
									"begin": 2178,
									"end": 2185,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2169,
									"end": 2175,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2158,
									"end": 2167,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 2154,
									"end": 2176,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "tag",
									"source": 14,
									"value": "82"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2112,
									"end": 2186,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 2112,
									"end": 2186,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2068,
									"end": 2196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2235,
									"end": 2237,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 2325,
									"end": 2332,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2316,
									"end": 2322,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2305,
									"end": 2314,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 2301,
									"end": 2323,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "tag",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2333,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2333,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2206,
									"end": 2343,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2382,
									"end": 2384,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 2478,
									"end": 2485,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2458,
									"end": 2467,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 2454,
									"end": 2476,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "tag",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2398,
									"end": 2486,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2398,
									"end": 2486,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2353,
									"end": 2496,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2593,
									"end": 2604,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2633,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2622,
									"end": 2625,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2615,
									"end": 2634,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2667,
									"end": 2671,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2662,
									"end": 2665,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2658,
									"end": 2672,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2643,
									"end": 2672,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2643,
									"end": 2672,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2824,
									"end": 2846,
									"name": "PUSH",
									"source": 14,
									"value": "43726F776473616C653A20726174652069732030000000000000000000000000"
								},
								{
									"begin": 2820,
									"end": 2821,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2812,
									"end": 2818,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2808,
									"end": 2822,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2801,
									"end": 2847,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3002,
									"end": 3005,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 3087,
									"end": 3089,
									"name": "PUSH",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 3082,
									"end": 3085,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "tag",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3016,
									"end": 3090,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3016,
									"end": 3090,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 3188,
									"end": 3191,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "tag",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3217,
									"end": 3219,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3212,
									"end": 3215,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3208,
									"end": 3220,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3201,
									"end": 3220,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3201,
									"end": 3220,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "tag",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3398,
									"end": 3402,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3438,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3425,
									"end": 3434,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3421,
									"end": 3439,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3475,
									"end": 3495,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 3471,
									"end": 3472,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3460,
									"end": 3469,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3473,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3449,
									"end": 3496,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 3639,
									"end": 3643,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "tag",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3505,
									"end": 3644,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3505,
									"end": 3644,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3797,
									"end": 3831,
									"name": "PUSH",
									"source": 14,
									"value": "43726F776473616C653A2077616C6C657420697320746865207A65726F206164"
								},
								{
									"begin": 3793,
									"end": 3794,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3785,
									"end": 3791,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3781,
									"end": 3795,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3774,
									"end": 3832,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3866,
									"end": 3873,
									"name": "PUSH",
									"source": 14,
									"value": "6472657373000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3861,
									"end": 3863,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3853,
									"end": 3859,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3849,
									"end": 3864,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3842,
									"end": 3874,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4029,
									"end": 4032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 4114,
									"end": 4116,
									"name": "PUSH",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 4109,
									"end": 4112,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "tag",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4043,
									"end": 4117,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4043,
									"end": 4117,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 4215,
									"end": 4218,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "tag",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4244,
									"end": 4246,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4239,
									"end": 4242,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4235,
									"end": 4247,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4228,
									"end": 4247,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4228,
									"end": 4247,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4425,
									"end": 4429,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4463,
									"end": 4465,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4452,
									"end": 4461,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4448,
									"end": 4466,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4440,
									"end": 4466,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4440,
									"end": 4466,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4512,
									"end": 4521,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4506,
									"end": 4510,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4502,
									"end": 4522,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4498,
									"end": 4499,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4487,
									"end": 4496,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4483,
									"end": 4500,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4476,
									"end": 4523,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 4666,
									"end": 4670,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "tag",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4532,
									"end": 4671,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4532,
									"end": 4671,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4824,
									"end": 4858,
									"name": "PUSH",
									"source": 14,
									"value": "43726F776473616C653A20746F6B656E20697320746865207A65726F20616464"
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4812,
									"end": 4818,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4808,
									"end": 4822,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4801,
									"end": 4859,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4893,
									"end": 4899,
									"name": "PUSH",
									"source": 14,
									"value": "7265737300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4888,
									"end": 4890,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4880,
									"end": 4886,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4876,
									"end": 4891,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4869,
									"end": 4900,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5055,
									"end": 5058,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 5140,
									"end": 5142,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 5135,
									"end": 5138,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "tag",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5069,
									"end": 5143,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5069,
									"end": 5143,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 5241,
									"end": 5244,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "tag",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5270,
									"end": 5272,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 5265,
									"end": 5268,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5261,
									"end": 5273,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5254,
									"end": 5273,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5254,
									"end": 5273,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5451,
									"end": 5455,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5489,
									"end": 5491,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 5478,
									"end": 5487,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5474,
									"end": 5492,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5538,
									"end": 5547,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5532,
									"end": 5536,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5528,
									"end": 5548,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 5524,
									"end": 5525,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5513,
									"end": 5522,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5509,
									"end": 5526,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5502,
									"end": 5549,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 5692,
									"end": 5696,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "tag",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5558,
									"end": 5697,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5558,
									"end": 5697,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1110,
									"end": 7995,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1110,
									"end": 7995,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1110,
									"end": 7995,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1110,
									"end": 7995,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1110,
									"end": 7995,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1110,
									"end": 7995,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1110,
									"end": 7995,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1110,
									"end": 7995,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1110,
									"end": 7995,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207fe8da5c9b3ac1b40555d8f8988569c44a30fd4b3047c6476f5e76c19b5800a964736f6c63430008090033",
									".code": [
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "521EB273"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "521EB273"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "EC8AC4D8"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "FC0C546A"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "2C4E722E"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH",
											"source": 12,
											"value": "4042B66F"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3383,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 3393,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 3393,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3405,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3393,
											"end": 3405,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 3393,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 3383,
											"end": 3406,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3383,
											"end": 3406,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 3383,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3309,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3319,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 3319,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3331,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3319,
											"end": 3331,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 3319,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 3309,
											"end": 3332,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3309,
											"end": 3332,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3309,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 7995,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4380,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4392,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4392,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4392,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4402,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 4423,
											"end": 4434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4436,
											"end": 4445,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4402,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 4402,
											"end": 4446,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4402,
											"end": 4446,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 4402,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4505,
											"end": 4519,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 4538,
											"end": 4547,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4522,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 4522,
											"end": 4548,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4522,
											"end": 4548,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 4522,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4505,
											"end": 4548,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4505,
											"end": 4548,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4560,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 4577,
											"end": 4588,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4590,
											"end": 4596,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4560,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 4560,
											"end": 4597,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4560,
											"end": 4597,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 4560,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4642,
											"end": 4653,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 4628,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4628,
											"end": 4640,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4628,
											"end": 4640,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 4628,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "PUSH",
											"source": 12,
											"value": "6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
										},
										{
											"begin": 4655,
											"end": 4664,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 4707,
											"end": 4718,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4720,
											"end": 4729,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4684,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 4741,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4766,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4810,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4766,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 4766,
											"end": 4811,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4811,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 4766,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4353,
											"end": 4818,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4353,
											"end": 4818,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4818,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2789,
											"end": 2800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3833,
											"end": 3840,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3852,
											"end": 3864,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3852,
											"end": 3864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3871,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4912,
											"end": 4916,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4899,
											"end": 4917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4899,
											"end": 4917,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4899,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6031,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6043,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6020,
											"end": 6043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6043,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6020,
											"end": 6043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6043,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6118,
											"end": 6122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6124,
											"end": 6131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6106,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3976,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4012,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4002,
											"end": 4012,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 4019,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3663,
											"end": 3678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3704,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3697,
											"end": 3704,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3697,
											"end": 3704,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3697,
											"end": 3704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3697,
											"end": 3704,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3697,
											"end": 3704,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3697,
											"end": 3704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3697,
											"end": 3704,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3697,
											"end": 3704,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3697,
											"end": 3704,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3690,
											"end": 3704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3690,
											"end": 3704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3711,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5325,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5355,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5373,
											"end": 5380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5355,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5355,
											"end": 5381,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5355,
											"end": 5381,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5355,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3548,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5360,
											"end": 5744,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 5360,
											"end": 5744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5494,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5495,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5470,
											"end": 5495,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5470,
											"end": 5481,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5470,
											"end": 5495,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5470,
											"end": 5495,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5470,
											"end": 5495,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5470,
											"end": 5495,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 5462,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 5552,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5360,
											"end": 5744,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5360,
											"end": 5744,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5360,
											"end": 5744,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7700,
											"end": 7828,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 7700,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 7782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 7815,
											"end": 7820,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7815,
											"end": 7820,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7810,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 7801,
											"end": 7814,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7794,
											"end": 7821,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7794,
											"end": 7821,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7700,
											"end": 7828,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7700,
											"end": 7828,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7700,
											"end": 7828,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7700,
											"end": 7828,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6887,
											"end": 7030,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 6887,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6983,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 6998,
											"end": 7009,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7011,
											"end": 7022,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6983,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 6983,
											"end": 7023,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6983,
											"end": 7023,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 6983,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6887,
											"end": 7030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6887,
											"end": 7030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6887,
											"end": 7030,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7300,
											"end": 7451,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7300,
											"end": 7451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 7422,
											"end": 7431,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7417,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 7407,
											"end": 7417,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 7407,
											"end": 7421,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7432,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7407,
											"end": 7432,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7432,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7407,
											"end": 7432,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 7407,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7300,
											"end": 7451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7300,
											"end": 7451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7300,
											"end": 7451,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7915,
											"end": 7993,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 7915,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7966,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7959,
											"end": 7966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7959,
											"end": 7966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7966,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7966,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7959,
											"end": 7966,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7966,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7966,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7959,
											"end": 7966,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7975,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7959,
											"end": 7975,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 7976,
											"end": 7985,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7959,
											"end": 7986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7915,
											"end": 7993,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6039,
											"end": 6196,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 6039,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6039,
											"end": 6196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6039,
											"end": 6196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6039,
											"end": 6196,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7557,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7565,
											"end": 7569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7557,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7557,
											"end": 7579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7557,
											"end": 7579,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7557,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7552,
											"end": 7701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7595,
											"end": 7601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7602,
											"end": 7606,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7616,
											"end": 7623,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7677,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7677,
											"end": 7689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7677,
											"end": 7689,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7677,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 7675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7666,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7701,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7552,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7969,
											"end": 7973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7975,
											"end": 7982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7957,
											"end": 8106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7957,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7957,
											"end": 8106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8010,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8020,
											"end": 8027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8082,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8082,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8082,
											"end": 8094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8082,
											"end": 8094,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8082,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7957,
											"end": 8106,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7957,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6476,
											"end": 6621,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 6476,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6602,
											"end": 6613,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6588,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6569,
											"end": 6588,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 6569,
											"end": 6588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6614,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6614,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6614,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6569,
											"end": 6614,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6614,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6569,
											"end": 6614,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 6569,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6476,
											"end": 6621,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6476,
											"end": 6621,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6476,
											"end": 6621,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4134,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4101,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 950,
											"end": 952,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 954,
											"end": 959,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 875,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1740,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "PUSH",
											"source": 8,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "PUSH",
											"source": 8,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1890,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1942,
											"name": "PUSH",
											"source": 8,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 1943,
											"end": 1948,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1954,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1924,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2013,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2085,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2086,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 4453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8131,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8167,
											"end": 8177,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8152,
											"end": 8196,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2632,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 2749,
											"end": 2754,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2726,
											"end": 2729,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2756,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2861,
											"end": 2865,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2901,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 2902,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2876,
											"end": 2902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2876,
											"end": 2902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2912,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2912,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 2912,
											"end": 2983,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2912,
											"end": 2983,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 2912,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3033,
											"end": 3040,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3115,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3071,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3062,
											"end": 3116,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3051,
											"end": 3116,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3051,
											"end": 3116,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 3212,
											"end": 3217,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3183,
											"end": 3218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3183,
											"end": 3218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 3321,
											"end": 3326,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3296,
											"end": 3301,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3293,
											"end": 3328,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3332,
											"end": 3344,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3404,
											"end": 3409,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3448,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 3485,
											"end": 3490,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3577,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3585,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3625,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3607,
											"end": 3614,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3603,
											"end": 3626,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3599,
											"end": 3631,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3634,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 3634,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 3634,
											"end": 3713,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3713,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 3634,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3754,
											"end": 3755,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 3824,
											"end": 3831,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3815,
											"end": 3821,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3779,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 3779,
											"end": 3832,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3779,
											"end": 3832,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 3779,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3769,
											"end": 3832,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3769,
											"end": 3832,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3725,
											"end": 3842,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3881,
											"end": 3883,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 3952,
											"end": 3959,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3932,
											"end": 3941,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3928,
											"end": 3950,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3897,
											"end": 3960,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3897,
											"end": 3960,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3852,
											"end": 3970,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3983,
											"end": 4087,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 3983,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4028,
											"end": 4035,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 4075,
											"end": 4080,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4057,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 4057,
											"end": 4081,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4081,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 4057,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4046,
											"end": 4081,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4046,
											"end": 4081,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 4087,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 4087,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 4087,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 4087,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4093,
											"end": 4235,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 4093,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4196,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 4222,
											"end": 4227,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4196,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 4196,
											"end": 4228,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4196,
											"end": 4228,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 4196,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4191,
											"end": 4194,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4229,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4093,
											"end": 4235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4093,
											"end": 4235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4093,
											"end": 4235,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4241,
											"end": 4495,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 4241,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4350,
											"end": 4354,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4390,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4386,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4373,
											"end": 4391,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4365,
											"end": 4391,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4365,
											"end": 4391,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4401,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 4485,
											"end": 4486,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4470,
											"end": 4487,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4461,
											"end": 4467,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4401,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 4401,
											"end": 4488,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4401,
											"end": 4488,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 4401,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4495,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4495,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4495,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4495,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4495,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4501,
											"end": 4830,
											"name": "tag",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 4501,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4560,
											"end": 4566,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4609,
											"end": 4611,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4597,
											"end": 4606,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4588,
											"end": 4595,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4584,
											"end": 4607,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4580,
											"end": 4612,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 4696,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 4577,
											"end": 4696,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4615,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 4615,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 4615,
											"end": 4694,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4615,
											"end": 4694,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 4615,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 4696,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 4577,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4735,
											"end": 4736,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 4805,
											"end": 4812,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4796,
											"end": 4802,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4785,
											"end": 4794,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4781,
											"end": 4803,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4760,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 4760,
											"end": 4813,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4760,
											"end": 4813,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 4760,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4750,
											"end": 4813,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4750,
											"end": 4813,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4706,
											"end": 4823,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4501,
											"end": 4830,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4501,
											"end": 4830,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4501,
											"end": 4830,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4501,
											"end": 4830,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4501,
											"end": 4830,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4836,
											"end": 4896,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 4836,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4864,
											"end": 4867,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4890,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4836,
											"end": 4896,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4836,
											"end": 4896,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4836,
											"end": 4896,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4836,
											"end": 4896,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4902,
											"end": 5044,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 4902,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 5003,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 5012,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 5030,
											"end": 5035,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5012,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 5012,
											"end": 5036,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5012,
											"end": 5036,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 5012,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5003,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 5003,
											"end": 5037,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5003,
											"end": 5037,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 5003,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4985,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 4985,
											"end": 5038,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4985,
											"end": 5038,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 4985,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5038,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5038,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4902,
											"end": 5044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4902,
											"end": 5044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4902,
											"end": 5044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4902,
											"end": 5044,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5050,
											"end": 5176,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 5050,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5100,
											"end": 5109,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5133,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 5164,
											"end": 5169,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5133,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 5133,
											"end": 5170,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5133,
											"end": 5170,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 5133,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5120,
											"end": 5170,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5120,
											"end": 5170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5176,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5176,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5176,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5182,
											"end": 5322,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 5182,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5246,
											"end": 5255,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 5310,
											"end": 5315,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5279,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 5279,
											"end": 5316,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5279,
											"end": 5316,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 5279,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5266,
											"end": 5316,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5266,
											"end": 5316,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5182,
											"end": 5322,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5182,
											"end": 5322,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5182,
											"end": 5322,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5182,
											"end": 5322,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5328,
											"end": 5487,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 5328,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5429,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 5474,
											"end": 5479,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5429,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 5429,
											"end": 5480,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5429,
											"end": 5480,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 5429,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5424,
											"end": 5427,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5417,
											"end": 5481,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5328,
											"end": 5487,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5328,
											"end": 5487,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5328,
											"end": 5487,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5493,
											"end": 5743,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 5493,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5640,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5615,
											"end": 5641,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5615,
											"end": 5641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5651,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 5733,
											"end": 5734,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5718,
											"end": 5735,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5709,
											"end": 5715,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5651,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 5651,
											"end": 5736,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5651,
											"end": 5736,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 5651,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5493,
											"end": 5743,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5493,
											"end": 5743,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5493,
											"end": 5743,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5493,
											"end": 5743,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5493,
											"end": 5743,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5749,
											"end": 5918,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 5749,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5833,
											"end": 5844,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5862,
											"end": 5865,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5855,
											"end": 5874,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5907,
											"end": 5911,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5902,
											"end": 5905,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5898,
											"end": 5912,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 5912,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 5912,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5749,
											"end": 5918,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5749,
											"end": 5918,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5749,
											"end": 5918,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5749,
											"end": 5918,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5749,
											"end": 5918,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5924,
											"end": 6105,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 5924,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6064,
											"end": 6097,
											"name": "PUSH",
											"source": 14,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 6060,
											"end": 6061,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6052,
											"end": 6058,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6048,
											"end": 6062,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6041,
											"end": 6098,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5924,
											"end": 6105,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5924,
											"end": 6105,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6111,
											"end": 6477,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 6111,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6253,
											"end": 6256,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 6338,
											"end": 6340,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6333,
											"end": 6336,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6274,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 6274,
											"end": 6341,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6274,
											"end": 6341,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 6274,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6267,
											"end": 6341,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6267,
											"end": 6341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6350,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6350,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 6350,
											"end": 6443,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6350,
											"end": 6443,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 6350,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6468,
											"end": 6470,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6463,
											"end": 6466,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6452,
											"end": 6471,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6111,
											"end": 6477,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6111,
											"end": 6477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6111,
											"end": 6477,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6111,
											"end": 6477,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6483,
											"end": 6902,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 6483,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6649,
											"end": 6653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6689,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6676,
											"end": 6685,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6664,
											"end": 6690,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6664,
											"end": 6690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6736,
											"end": 6745,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6730,
											"end": 6734,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6726,
											"end": 6746,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6722,
											"end": 6723,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6711,
											"end": 6720,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6707,
											"end": 6724,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6700,
											"end": 6747,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6764,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 6890,
											"end": 6894,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6764,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 6764,
											"end": 6895,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6764,
											"end": 6895,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 6764,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6756,
											"end": 6895,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6756,
											"end": 6895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6483,
											"end": 6902,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6483,
											"end": 6902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6483,
											"end": 6902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6483,
											"end": 6902,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6908,
											"end": 7240,
											"name": "tag",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 6908,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7029,
											"end": 7033,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7069,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7056,
											"end": 7065,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7052,
											"end": 7070,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7044,
											"end": 7070,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7044,
											"end": 7070,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7080,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 7148,
											"end": 7149,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7146,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7133,
											"end": 7150,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7124,
											"end": 7130,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7080,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 7080,
											"end": 7151,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7080,
											"end": 7151,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 7080,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7161,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 7229,
											"end": 7231,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7218,
											"end": 7227,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7214,
											"end": 7232,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7205,
											"end": 7211,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7161,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 7161,
											"end": 7233,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7161,
											"end": 7233,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 7161,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6908,
											"end": 7240,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6908,
											"end": 7240,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6908,
											"end": 7240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6908,
											"end": 7240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6908,
											"end": 7240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6908,
											"end": 7240,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7246,
											"end": 7480,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 7246,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7386,
											"end": 7420,
											"name": "PUSH",
											"source": 14,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 7382,
											"end": 7383,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7374,
											"end": 7380,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7370,
											"end": 7384,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7455,
											"end": 7472,
											"name": "PUSH",
											"source": 14,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 7450,
											"end": 7452,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7442,
											"end": 7448,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7438,
											"end": 7453,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7431,
											"end": 7473,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7246,
											"end": 7480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7246,
											"end": 7480,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7486,
											"end": 7852,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 7486,
											"end": 7852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7628,
											"end": 7631,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 7713,
											"end": 7715,
											"name": "PUSH",
											"source": 14,
											"value": "2F"
										},
										{
											"begin": 7708,
											"end": 7711,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 7649,
											"end": 7716,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7649,
											"end": 7716,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 7649,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7642,
											"end": 7716,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7642,
											"end": 7716,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7725,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 7814,
											"end": 7817,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7725,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 7725,
											"end": 7818,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7725,
											"end": 7818,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 7725,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7843,
											"end": 7845,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7838,
											"end": 7841,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7846,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7827,
											"end": 7846,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7827,
											"end": 7846,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7486,
											"end": 7852,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7486,
											"end": 7852,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7486,
											"end": 7852,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7486,
											"end": 7852,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7858,
											"end": 8277,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 7858,
											"end": 8277,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8024,
											"end": 8028,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8064,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8051,
											"end": 8060,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8065,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8039,
											"end": 8065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8111,
											"end": 8120,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8105,
											"end": 8109,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8101,
											"end": 8121,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8097,
											"end": 8098,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8086,
											"end": 8095,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8082,
											"end": 8099,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8122,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8139,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 8265,
											"end": 8269,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8139,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 8139,
											"end": 8270,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8139,
											"end": 8270,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 8139,
											"end": 8270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8270,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7858,
											"end": 8277,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7858,
											"end": 8277,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7858,
											"end": 8277,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7858,
											"end": 8277,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8283,
											"end": 8512,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 8283,
											"end": 8512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8423,
											"end": 8457,
											"name": "PUSH",
											"source": 14,
											"value": "43726F776473616C653A2062656E656669636961727920697320746865207A65"
										},
										{
											"begin": 8419,
											"end": 8420,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8417,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8407,
											"end": 8421,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8400,
											"end": 8458,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8492,
											"end": 8504,
											"name": "PUSH",
											"source": 14,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 8487,
											"end": 8489,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8479,
											"end": 8485,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8475,
											"end": 8490,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8468,
											"end": 8505,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8283,
											"end": 8512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8283,
											"end": 8512,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8518,
											"end": 8884,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 8518,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8660,
											"end": 8663,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8681,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 8745,
											"end": 8747,
											"name": "PUSH",
											"source": 14,
											"value": "2A"
										},
										{
											"begin": 8740,
											"end": 8743,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8681,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 8681,
											"end": 8748,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8681,
											"end": 8748,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 8681,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8674,
											"end": 8748,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8674,
											"end": 8748,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8757,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 8846,
											"end": 8849,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8757,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 8757,
											"end": 8850,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8757,
											"end": 8850,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 8757,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8875,
											"end": 8877,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8873,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8866,
											"end": 8878,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8859,
											"end": 8878,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8859,
											"end": 8878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8518,
											"end": 8884,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8518,
											"end": 8884,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8518,
											"end": 8884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8518,
											"end": 8884,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8890,
											"end": 9309,
											"name": "tag",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 8890,
											"end": 9309,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9056,
											"end": 9060,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9094,
											"end": 9096,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9083,
											"end": 9092,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9079,
											"end": 9097,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9071,
											"end": 9097,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9071,
											"end": 9097,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9143,
											"end": 9152,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9137,
											"end": 9141,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9133,
											"end": 9153,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9129,
											"end": 9130,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9127,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9114,
											"end": 9131,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9107,
											"end": 9154,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9171,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 9297,
											"end": 9301,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9171,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 9171,
											"end": 9302,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9171,
											"end": 9302,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 9171,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9163,
											"end": 9302,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9163,
											"end": 9302,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8890,
											"end": 9309,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8890,
											"end": 9309,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8890,
											"end": 9309,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8890,
											"end": 9309,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9315,
											"end": 9490,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 9315,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9455,
											"end": 9482,
											"name": "PUSH",
											"source": 14,
											"value": "43726F776473616C653A20776569416D6F756E74206973203000000000000000"
										},
										{
											"begin": 9451,
											"end": 9452,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9449,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9439,
											"end": 9453,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9432,
											"end": 9483,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9315,
											"end": 9490,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9315,
											"end": 9490,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9496,
											"end": 9862,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 9496,
											"end": 9862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9638,
											"end": 9641,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9659,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 9723,
											"end": 9725,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 9718,
											"end": 9721,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9659,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 9659,
											"end": 9726,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9659,
											"end": 9726,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 9659,
											"end": 9726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 9726,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 9726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9735,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 9824,
											"end": 9827,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9735,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 9735,
											"end": 9828,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9735,
											"end": 9828,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 9735,
											"end": 9828,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9853,
											"end": 9855,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9848,
											"end": 9851,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9844,
											"end": 9856,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9837,
											"end": 9856,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9837,
											"end": 9856,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9496,
											"end": 9862,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9496,
											"end": 9862,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9496,
											"end": 9862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9496,
											"end": 9862,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9868,
											"end": 10287,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 9868,
											"end": 10287,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10034,
											"end": 10038,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10072,
											"end": 10074,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10061,
											"end": 10070,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10057,
											"end": 10075,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10049,
											"end": 10075,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10049,
											"end": 10075,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10121,
											"end": 10130,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10115,
											"end": 10119,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10111,
											"end": 10131,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10107,
											"end": 10108,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10096,
											"end": 10105,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10092,
											"end": 10109,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10085,
											"end": 10132,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10149,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 10275,
											"end": 10279,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10149,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 10149,
											"end": 10280,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10149,
											"end": 10280,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 10149,
											"end": 10280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10141,
											"end": 10280,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10141,
											"end": 10280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9868,
											"end": 10287,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9868,
											"end": 10287,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9868,
											"end": 10287,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9868,
											"end": 10287,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10293,
											"end": 10473,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 10293,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10341,
											"end": 10418,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10338,
											"end": 10339,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10331,
											"end": 10419,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10438,
											"end": 10442,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 10435,
											"end": 10436,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10428,
											"end": 10443,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10462,
											"end": 10466,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10459,
											"end": 10460,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10452,
											"end": 10467,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10479,
											"end": 10827,
											"name": "tag",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 10479,
											"end": 10827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10519,
											"end": 10526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10542,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 10560,
											"end": 10561,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10542,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 10542,
											"end": 10562,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10542,
											"end": 10562,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 10542,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10537,
											"end": 10562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10537,
											"end": 10562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10576,
											"end": 10596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 10594,
											"end": 10595,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10576,
											"end": 10596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 10576,
											"end": 10596,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10576,
											"end": 10596,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 10576,
											"end": 10596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10571,
											"end": 10596,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10571,
											"end": 10596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10764,
											"end": 10765,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10696,
											"end": 10762,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10692,
											"end": 10766,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10689,
											"end": 10690,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10686,
											"end": 10767,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10681,
											"end": 10682,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10674,
											"end": 10683,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10667,
											"end": 10684,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10663,
											"end": 10768,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10660,
											"end": 10791,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10660,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 10660,
											"end": 10791,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10660,
											"end": 10791,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 10660,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10819,
											"end": 10820,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10816,
											"end": 10817,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10812,
											"end": 10821,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 10801,
											"end": 10821,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10801,
											"end": 10821,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10479,
											"end": 10827,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10479,
											"end": 10827,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10479,
											"end": 10827,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10479,
											"end": 10827,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10479,
											"end": 10827,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10833,
											"end": 11138,
											"name": "tag",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 10833,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10873,
											"end": 10876,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10892,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 10910,
											"end": 10911,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10892,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 10892,
											"end": 10912,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10892,
											"end": 10912,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 10892,
											"end": 10912,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10887,
											"end": 10912,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10887,
											"end": 10912,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 10944,
											"end": 10945,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10921,
											"end": 10946,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10921,
											"end": 10946,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11080,
											"end": 11081,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11012,
											"end": 11078,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11008,
											"end": 11082,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11005,
											"end": 11006,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11002,
											"end": 11083,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 11106,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 10999,
											"end": 11106,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 11106,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 10999,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11130,
											"end": 11131,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11127,
											"end": 11128,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11123,
											"end": 11132,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11116,
											"end": 11132,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11116,
											"end": 11132,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10833,
											"end": 11138,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10833,
											"end": 11138,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10833,
											"end": 11138,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10833,
											"end": 11138,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10833,
											"end": 11138,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11144,
											"end": 11292,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 11144,
											"end": 11292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11246,
											"end": 11257,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11286,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11268,
											"end": 11286,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11268,
											"end": 11286,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11144,
											"end": 11292,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11144,
											"end": 11292,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11144,
											"end": 11292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11144,
											"end": 11292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11144,
											"end": 11292,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11298,
											"end": 11471,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 11298,
											"end": 11471,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11438,
											"end": 11463,
											"name": "PUSH",
											"source": 14,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 11434,
											"end": 11435,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11426,
											"end": 11432,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11422,
											"end": 11436,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11415,
											"end": 11464,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11298,
											"end": 11471,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11298,
											"end": 11471,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11477,
											"end": 11879,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 11477,
											"end": 11879,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11637,
											"end": 11640,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11658,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 11740,
											"end": 11742,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 11735,
											"end": 11738,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11658,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 11658,
											"end": 11743,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11658,
											"end": 11743,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 11658,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11651,
											"end": 11743,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11651,
											"end": 11743,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11752,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 11841,
											"end": 11844,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11752,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 11752,
											"end": 11845,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11752,
											"end": 11845,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 11752,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11870,
											"end": 11872,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 11865,
											"end": 11868,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11861,
											"end": 11873,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11854,
											"end": 11873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11854,
											"end": 11873,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11477,
											"end": 11879,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11477,
											"end": 11879,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11477,
											"end": 11879,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11477,
											"end": 11879,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11885,
											"end": 11984,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 11885,
											"end": 11984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11937,
											"end": 11943,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 11976,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11965,
											"end": 11977,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11955,
											"end": 11977,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11955,
											"end": 11977,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11885,
											"end": 11984,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11885,
											"end": 11984,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11885,
											"end": 11984,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11885,
											"end": 11984,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11990,
											"end": 12297,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 11990,
											"end": 12297,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12058,
											"end": 12059,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12068,
											"end": 12181,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 12068,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12082,
											"end": 12088,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12079,
											"end": 12080,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12076,
											"end": 12089,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12068,
											"end": 12181,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12068,
											"end": 12181,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 12068,
											"end": 12181,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12167,
											"end": 12168,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12162,
											"end": 12165,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12158,
											"end": 12169,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12152,
											"end": 12170,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12148,
											"end": 12149,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12143,
											"end": 12146,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12139,
											"end": 12150,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12132,
											"end": 12171,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12104,
											"end": 12106,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12101,
											"end": 12102,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12107,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12092,
											"end": 12107,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12092,
											"end": 12107,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12068,
											"end": 12181,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 12068,
											"end": 12181,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12068,
											"end": 12181,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 12068,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12199,
											"end": 12205,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12196,
											"end": 12197,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12193,
											"end": 12206,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12190,
											"end": 12291,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12190,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 12190,
											"end": 12291,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12279,
											"end": 12280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12270,
											"end": 12276,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12265,
											"end": 12268,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12261,
											"end": 12277,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12254,
											"end": 12281,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12190,
											"end": 12291,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 12190,
											"end": 12291,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12039,
											"end": 12297,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11990,
											"end": 12297,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11990,
											"end": 12297,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11990,
											"end": 12297,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11990,
											"end": 12297,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12303,
											"end": 12680,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 12303,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12409,
											"end": 12412,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12437,
											"end": 12476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 12470,
											"end": 12475,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12437,
											"end": 12476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 12437,
											"end": 12476,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12437,
											"end": 12476,
											"name": "tag",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 12437,
											"end": 12476,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12492,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 12574,
											"end": 12580,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12569,
											"end": 12572,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12492,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 12492,
											"end": 12581,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12492,
											"end": 12581,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 12492,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12485,
											"end": 12581,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 12485,
											"end": 12581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12590,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 12635,
											"end": 12641,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12630,
											"end": 12633,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12623,
											"end": 12627,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12616,
											"end": 12621,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12612,
											"end": 12628,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12590,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 12590,
											"end": 12642,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12590,
											"end": 12642,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 12590,
											"end": 12642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12667,
											"end": 12673,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12662,
											"end": 12665,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12658,
											"end": 12674,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12651,
											"end": 12674,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12651,
											"end": 12674,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12413,
											"end": 12680,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12303,
											"end": 12680,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12303,
											"end": 12680,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12303,
											"end": 12680,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12303,
											"end": 12680,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12303,
											"end": 12680,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12686,
											"end": 12853,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 12686,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12826,
											"end": 12845,
											"name": "PUSH",
											"source": 14,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 12822,
											"end": 12823,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12814,
											"end": 12820,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12810,
											"end": 12824,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12803,
											"end": 12846,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12686,
											"end": 12853,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12686,
											"end": 12853,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12859,
											"end": 13261,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 12859,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13019,
											"end": 13022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13040,
											"end": 13125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 13122,
											"end": 13124,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 13117,
											"end": 13120,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13040,
											"end": 13125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 13040,
											"end": 13125,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13040,
											"end": 13125,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 13040,
											"end": 13125,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13033,
											"end": 13125,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13033,
											"end": 13125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13134,
											"end": 13227,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 13223,
											"end": 13226,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13134,
											"end": 13227,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 13134,
											"end": 13227,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13134,
											"end": 13227,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 13134,
											"end": 13227,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13252,
											"end": 13254,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 13247,
											"end": 13250,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13243,
											"end": 13255,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13236,
											"end": 13255,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13236,
											"end": 13255,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12859,
											"end": 13261,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12859,
											"end": 13261,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12859,
											"end": 13261,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12859,
											"end": 13261,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13267,
											"end": 14234,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 13267,
											"end": 14234,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13649,
											"end": 13652,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13671,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 13815,
											"end": 13818,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13671,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 13671,
											"end": 13819,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13671,
											"end": 13819,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 13671,
											"end": 13819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13664,
											"end": 13819,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13664,
											"end": 13819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13836,
											"end": 13931,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 13927,
											"end": 13930,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13918,
											"end": 13924,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13836,
											"end": 13931,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 13836,
											"end": 13931,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13836,
											"end": 13931,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 13836,
											"end": 13931,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13829,
											"end": 13931,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13829,
											"end": 13931,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13948,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 14092,
											"end": 14095,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13948,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 13948,
											"end": 14096,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13948,
											"end": 14096,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 13948,
											"end": 14096,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13941,
											"end": 14096,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13941,
											"end": 14096,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14113,
											"end": 14208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 14204,
											"end": 14207,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14195,
											"end": 14201,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14113,
											"end": 14208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 14113,
											"end": 14208,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14113,
											"end": 14208,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 14113,
											"end": 14208,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14106,
											"end": 14208,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14106,
											"end": 14208,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14228,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14218,
											"end": 14228,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14218,
											"end": 14228,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13267,
											"end": 14234,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13267,
											"end": 14234,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13267,
											"end": 14234,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13267,
											"end": 14234,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13267,
											"end": 14234,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13267,
											"end": 14234,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14240,
											"end": 14342,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 14240,
											"end": 14342,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14281,
											"end": 14287,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14332,
											"end": 14334,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 14328,
											"end": 14335,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 14323,
											"end": 14325,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 14316,
											"end": 14321,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14312,
											"end": 14326,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14308,
											"end": 14336,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14298,
											"end": 14336,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14298,
											"end": 14336,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14240,
											"end": 14342,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14240,
											"end": 14342,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14240,
											"end": 14342,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14240,
											"end": 14342,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14348,
											"end": 14712,
											"name": "tag",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 14348,
											"end": 14712,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14436,
											"end": 14439,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14464,
											"end": 14503,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 14497,
											"end": 14502,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14464,
											"end": 14503,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 14464,
											"end": 14503,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14464,
											"end": 14503,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 14464,
											"end": 14503,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14519,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 14583,
											"end": 14589,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14578,
											"end": 14581,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14519,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 14519,
											"end": 14590,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14519,
											"end": 14590,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 14519,
											"end": 14590,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14512,
											"end": 14590,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 14512,
											"end": 14590,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14599,
											"end": 14651,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 14644,
											"end": 14650,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14639,
											"end": 14642,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14632,
											"end": 14636,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14625,
											"end": 14630,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14621,
											"end": 14637,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14599,
											"end": 14651,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 14599,
											"end": 14651,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14599,
											"end": 14651,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 14599,
											"end": 14651,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14676,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 14698,
											"end": 14704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14676,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 14676,
											"end": 14705,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14676,
											"end": 14705,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 14676,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14671,
											"end": 14674,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14667,
											"end": 14706,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14660,
											"end": 14706,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14660,
											"end": 14706,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14440,
											"end": 14712,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14348,
											"end": 14712,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14348,
											"end": 14712,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14348,
											"end": 14712,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14348,
											"end": 14712,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14348,
											"end": 14712,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14718,
											"end": 15031,
											"name": "tag",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 14718,
											"end": 15031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14831,
											"end": 14835,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14869,
											"end": 14871,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14858,
											"end": 14867,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14854,
											"end": 14872,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14846,
											"end": 14872,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14846,
											"end": 14872,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14918,
											"end": 14927,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14912,
											"end": 14916,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14904,
											"end": 14905,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14902,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14889,
											"end": 14906,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14882,
											"end": 14929,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14946,
											"end": 15024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 15019,
											"end": 15023,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15010,
											"end": 15016,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14946,
											"end": 15024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 14946,
											"end": 15024,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14946,
											"end": 15024,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 14946,
											"end": 15024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14938,
											"end": 15024,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14938,
											"end": 15024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14718,
											"end": 15031,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14718,
											"end": 15031,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14718,
											"end": 15031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14718,
											"end": 15031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14718,
											"end": 15031,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15037,
											"end": 15155,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 15037,
											"end": 15155,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15124,
											"end": 15148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 15142,
											"end": 15147,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15124,
											"end": 15148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 15124,
											"end": 15148,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15124,
											"end": 15148,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 15124,
											"end": 15148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15119,
											"end": 15122,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15112,
											"end": 15149,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15037,
											"end": 15155,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15037,
											"end": 15155,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15037,
											"end": 15155,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15161,
											"end": 15493,
											"name": "tag",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 15161,
											"end": 15493,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15282,
											"end": 15286,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15320,
											"end": 15322,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15309,
											"end": 15318,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15305,
											"end": 15323,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15297,
											"end": 15323,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15297,
											"end": 15323,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15333,
											"end": 15404,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 15401,
											"end": 15402,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15390,
											"end": 15399,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15386,
											"end": 15403,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15377,
											"end": 15383,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15333,
											"end": 15404,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 15333,
											"end": 15404,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15333,
											"end": 15404,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 15333,
											"end": 15404,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15414,
											"end": 15486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 15482,
											"end": 15484,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15471,
											"end": 15480,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15467,
											"end": 15485,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15458,
											"end": 15464,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15414,
											"end": 15486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 15414,
											"end": 15486,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15414,
											"end": 15486,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 15414,
											"end": 15486,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15161,
											"end": 15493,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15161,
											"end": 15493,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15161,
											"end": 15493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15161,
											"end": 15493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15161,
											"end": 15493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15161,
											"end": 15493,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15499,
											"end": 15679,
											"name": "tag",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 15499,
											"end": 15679,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15547,
											"end": 15624,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15544,
											"end": 15545,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15537,
											"end": 15625,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15644,
											"end": 15648,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 15641,
											"end": 15642,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15634,
											"end": 15649,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15668,
											"end": 15672,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 15665,
											"end": 15666,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15658,
											"end": 15673,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 15685,
											"end": 15865,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 15685,
											"end": 15865,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15733,
											"end": 15810,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15730,
											"end": 15731,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15723,
											"end": 15811,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15830,
											"end": 15834,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 15827,
											"end": 15828,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15820,
											"end": 15835,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15854,
											"end": 15858,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 15851,
											"end": 15852,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15844,
											"end": 15859,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 15871,
											"end": 16042,
											"name": "tag",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 15871,
											"end": 16042,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15910,
											"end": 15913,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15933,
											"end": 15957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 15951,
											"end": 15956,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15933,
											"end": 15957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 15933,
											"end": 15957,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15933,
											"end": 15957,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 15933,
											"end": 15957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15924,
											"end": 15957,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15924,
											"end": 15957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15979,
											"end": 15983,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15972,
											"end": 15977,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15969,
											"end": 15984,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 15966,
											"end": 16007,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15966,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 15966,
											"end": 16007,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15987,
											"end": 16005,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 15987,
											"end": 16005,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 15987,
											"end": 16005,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15987,
											"end": 16005,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 15987,
											"end": 16005,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15966,
											"end": 16007,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 15966,
											"end": 16007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16034,
											"end": 16035,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16027,
											"end": 16032,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16023,
											"end": 16036,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16016,
											"end": 16036,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16016,
											"end": 16036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15871,
											"end": 16042,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15871,
											"end": 16042,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15871,
											"end": 16042,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15871,
											"end": 16042,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16048,
											"end": 16230,
											"name": "tag",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 16048,
											"end": 16230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16188,
											"end": 16222,
											"name": "PUSH",
											"source": 14,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 16184,
											"end": 16185,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16176,
											"end": 16182,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16172,
											"end": 16186,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16165,
											"end": 16223,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16048,
											"end": 16230,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16048,
											"end": 16230,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16236,
											"end": 16602,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 16236,
											"end": 16602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16378,
											"end": 16381,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16399,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 16463,
											"end": 16465,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16458,
											"end": 16461,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16399,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 16399,
											"end": 16466,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16399,
											"end": 16466,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 16399,
											"end": 16466,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16392,
											"end": 16466,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16392,
											"end": 16466,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16475,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 16564,
											"end": 16567,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16475,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 16475,
											"end": 16568,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16475,
											"end": 16568,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 16475,
											"end": 16568,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16593,
											"end": 16595,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16588,
											"end": 16591,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16584,
											"end": 16596,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16577,
											"end": 16596,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16577,
											"end": 16596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16236,
											"end": 16602,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16236,
											"end": 16602,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16236,
											"end": 16602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16236,
											"end": 16602,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16608,
											"end": 17027,
											"name": "tag",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 16608,
											"end": 17027,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16774,
											"end": 16778,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16812,
											"end": 16814,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16801,
											"end": 16810,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16797,
											"end": 16815,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16789,
											"end": 16815,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16789,
											"end": 16815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16861,
											"end": 16870,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16855,
											"end": 16859,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16851,
											"end": 16871,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16847,
											"end": 16848,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16836,
											"end": 16845,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16832,
											"end": 16849,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16825,
											"end": 16872,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16889,
											"end": 17020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 17015,
											"end": 17019,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16889,
											"end": 17020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 16889,
											"end": 17020,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16889,
											"end": 17020,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 16889,
											"end": 17020,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16881,
											"end": 17020,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16881,
											"end": 17020,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16608,
											"end": 17027,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16608,
											"end": 17027,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16608,
											"end": 17027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16608,
											"end": 17027,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17033,
											"end": 17149,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 17033,
											"end": 17149,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17103,
											"end": 17124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 17118,
											"end": 17123,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17103,
											"end": 17124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 17103,
											"end": 17124,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17103,
											"end": 17124,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 17103,
											"end": 17124,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17096,
											"end": 17101,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17093,
											"end": 17125,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 17083,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 17083,
											"end": 17143,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17139,
											"end": 17140,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17136,
											"end": 17137,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17129,
											"end": 17141,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17083,
											"end": 17143,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 17083,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17033,
											"end": 17149,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17033,
											"end": 17149,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17155,
											"end": 17292,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 17155,
											"end": 17292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17209,
											"end": 17214,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17240,
											"end": 17246,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17234,
											"end": 17247,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 17225,
											"end": 17247,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17225,
											"end": 17247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17256,
											"end": 17286,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 17280,
											"end": 17285,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17256,
											"end": 17286,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 17256,
											"end": 17286,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17256,
											"end": 17286,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 17256,
											"end": 17286,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17155,
											"end": 17292,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17155,
											"end": 17292,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17155,
											"end": 17292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17155,
											"end": 17292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17155,
											"end": 17292,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17298,
											"end": 17643,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 17298,
											"end": 17643,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17365,
											"end": 17371,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17414,
											"end": 17416,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17402,
											"end": 17411,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17393,
											"end": 17400,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17389,
											"end": 17412,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 17385,
											"end": 17417,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 17382,
											"end": 17501,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17382,
											"end": 17501,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 17382,
											"end": 17501,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17420,
											"end": 17499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 17420,
											"end": 17499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 17420,
											"end": 17499,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17420,
											"end": 17499,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 17420,
											"end": 17499,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17382,
											"end": 17501,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 17382,
											"end": 17501,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17540,
											"end": 17541,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17565,
											"end": 17626,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 17618,
											"end": 17625,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17609,
											"end": 17615,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17598,
											"end": 17607,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17594,
											"end": 17616,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17565,
											"end": 17626,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 17565,
											"end": 17626,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17565,
											"end": 17626,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 17565,
											"end": 17626,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17555,
											"end": 17626,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17555,
											"end": 17626,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17511,
											"end": 17636,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17298,
											"end": 17643,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17298,
											"end": 17643,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17298,
											"end": 17643,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17298,
											"end": 17643,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17298,
											"end": 17643,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17649,
											"end": 17878,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 17649,
											"end": 17878,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17789,
											"end": 17823,
											"name": "PUSH",
											"source": 14,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 17785,
											"end": 17786,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17777,
											"end": 17783,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17773,
											"end": 17787,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17766,
											"end": 17824,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17858,
											"end": 17870,
											"name": "PUSH",
											"source": 14,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 17853,
											"end": 17855,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17845,
											"end": 17851,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17841,
											"end": 17856,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17834,
											"end": 17871,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17649,
											"end": 17878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17649,
											"end": 17878,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17884,
											"end": 18250,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 17884,
											"end": 18250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18026,
											"end": 18029,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18047,
											"end": 18114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 18111,
											"end": 18113,
											"name": "PUSH",
											"source": 14,
											"value": "2A"
										},
										{
											"begin": 18106,
											"end": 18109,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18047,
											"end": 18114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 18047,
											"end": 18114,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18047,
											"end": 18114,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 18047,
											"end": 18114,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18040,
											"end": 18114,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18040,
											"end": 18114,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18123,
											"end": 18216,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 18212,
											"end": 18215,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18123,
											"end": 18216,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 18123,
											"end": 18216,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18123,
											"end": 18216,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 18123,
											"end": 18216,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18241,
											"end": 18243,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 18236,
											"end": 18239,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18232,
											"end": 18244,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18225,
											"end": 18244,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18225,
											"end": 18244,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17884,
											"end": 18250,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17884,
											"end": 18250,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17884,
											"end": 18250,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17884,
											"end": 18250,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18256,
											"end": 18675,
											"name": "tag",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 18256,
											"end": 18675,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18422,
											"end": 18426,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18460,
											"end": 18462,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18449,
											"end": 18458,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18445,
											"end": 18463,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18437,
											"end": 18463,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18437,
											"end": 18463,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18509,
											"end": 18518,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18503,
											"end": 18507,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18499,
											"end": 18519,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18495,
											"end": 18496,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18484,
											"end": 18493,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18480,
											"end": 18497,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18473,
											"end": 18520,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18537,
											"end": 18668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 18663,
											"end": 18667,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18537,
											"end": 18668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 18537,
											"end": 18668,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18537,
											"end": 18668,
											"name": "tag",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 18537,
											"end": 18668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18529,
											"end": 18668,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18529,
											"end": 18668,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18256,
											"end": 18675,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18256,
											"end": 18675,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18256,
											"end": 18675,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18256,
											"end": 18675,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18681,
											"end": 18906,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 18681,
											"end": 18906,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18821,
											"end": 18855,
											"name": "PUSH",
											"source": 14,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 18817,
											"end": 18818,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18809,
											"end": 18815,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18805,
											"end": 18819,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18798,
											"end": 18856,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18890,
											"end": 18898,
											"name": "PUSH",
											"source": 14,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18885,
											"end": 18887,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18877,
											"end": 18883,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18873,
											"end": 18888,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18866,
											"end": 18899,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18681,
											"end": 18906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18681,
											"end": 18906,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18912,
											"end": 19278,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 18912,
											"end": 19278,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19054,
											"end": 19057,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19075,
											"end": 19142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 19139,
											"end": 19141,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 19134,
											"end": 19137,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19075,
											"end": 19142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 19075,
											"end": 19142,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19075,
											"end": 19142,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 19075,
											"end": 19142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19068,
											"end": 19142,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19068,
											"end": 19142,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19151,
											"end": 19244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 19240,
											"end": 19243,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19151,
											"end": 19244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 19151,
											"end": 19244,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19151,
											"end": 19244,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 19151,
											"end": 19244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19269,
											"end": 19271,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19264,
											"end": 19267,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19260,
											"end": 19272,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19253,
											"end": 19272,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19253,
											"end": 19272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18912,
											"end": 19278,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18912,
											"end": 19278,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18912,
											"end": 19278,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18912,
											"end": 19278,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 19284,
											"end": 19703,
											"name": "tag",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 19284,
											"end": 19703,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19450,
											"end": 19454,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19488,
											"end": 19490,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19477,
											"end": 19486,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19473,
											"end": 19491,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19465,
											"end": 19491,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19465,
											"end": 19491,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19537,
											"end": 19546,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19531,
											"end": 19535,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19527,
											"end": 19547,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19523,
											"end": 19524,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19512,
											"end": 19521,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19508,
											"end": 19525,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19501,
											"end": 19548,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19565,
											"end": 19696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 19691,
											"end": 19695,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19565,
											"end": 19696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 19565,
											"end": 19696,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19565,
											"end": 19696,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 19565,
											"end": 19696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19557,
											"end": 19696,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19557,
											"end": 19696,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19284,
											"end": 19703,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19284,
											"end": 19703,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19284,
											"end": 19703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19284,
											"end": 19703,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 19709,
											"end": 19888,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 19709,
											"end": 19888,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19849,
											"end": 19880,
											"name": "PUSH",
											"source": 14,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 19845,
											"end": 19846,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19837,
											"end": 19843,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19833,
											"end": 19847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19826,
											"end": 19881,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19709,
											"end": 19888,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19709,
											"end": 19888,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 19894,
											"end": 20260,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 19894,
											"end": 20260,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20036,
											"end": 20039,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20057,
											"end": 20124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 20121,
											"end": 20123,
											"name": "PUSH",
											"source": 14,
											"value": "1D"
										},
										{
											"begin": 20116,
											"end": 20119,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20057,
											"end": 20124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 20057,
											"end": 20124,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20057,
											"end": 20124,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 20057,
											"end": 20124,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20050,
											"end": 20124,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20050,
											"end": 20124,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20133,
											"end": 20226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 20222,
											"end": 20225,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20133,
											"end": 20226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 20133,
											"end": 20226,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20133,
											"end": 20226,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 20133,
											"end": 20226,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20251,
											"end": 20253,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20246,
											"end": 20249,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20242,
											"end": 20254,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20235,
											"end": 20254,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20235,
											"end": 20254,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19894,
											"end": 20260,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19894,
											"end": 20260,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19894,
											"end": 20260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19894,
											"end": 20260,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 20266,
											"end": 20685,
											"name": "tag",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 20266,
											"end": 20685,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20432,
											"end": 20436,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20470,
											"end": 20472,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20459,
											"end": 20468,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20455,
											"end": 20473,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20447,
											"end": 20473,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20447,
											"end": 20473,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20519,
											"end": 20528,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20513,
											"end": 20517,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20509,
											"end": 20529,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20505,
											"end": 20506,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20494,
											"end": 20503,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20490,
											"end": 20507,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20483,
											"end": 20530,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20547,
											"end": 20678,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 20673,
											"end": 20677,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20547,
											"end": 20678,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 20547,
											"end": 20678,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20547,
											"end": 20678,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 20547,
											"end": 20678,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20539,
											"end": 20678,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20539,
											"end": 20678,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20266,
											"end": 20685,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20266,
											"end": 20685,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20266,
											"end": 20685,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20266,
											"end": 20685,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 20691,
											"end": 20789,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 20691,
											"end": 20789,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20742,
											"end": 20748,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20776,
											"end": 20781,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20770,
											"end": 20782,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 20760,
											"end": 20782,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20760,
											"end": 20782,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20691,
											"end": 20789,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20691,
											"end": 20789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20691,
											"end": 20789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20691,
											"end": 20789,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 20795,
											"end": 20942,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 20795,
											"end": 20942,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20896,
											"end": 20907,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20933,
											"end": 20936,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20918,
											"end": 20936,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20918,
											"end": 20936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20795,
											"end": 20942,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20795,
											"end": 20942,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20795,
											"end": 20942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20795,
											"end": 20942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20795,
											"end": 20942,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 20948,
											"end": 21321,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 20948,
											"end": 21321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21052,
											"end": 21055,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21080,
											"end": 21118,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 21112,
											"end": 21117,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21080,
											"end": 21118,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 21080,
											"end": 21118,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21080,
											"end": 21118,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 21080,
											"end": 21118,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21134,
											"end": 21222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 21215,
											"end": 21221,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21210,
											"end": 21213,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 21134,
											"end": 21222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 21134,
											"end": 21222,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21134,
											"end": 21222,
											"name": "tag",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 21134,
											"end": 21222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21127,
											"end": 21222,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 21127,
											"end": 21222,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21231,
											"end": 21283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 21276,
											"end": 21282,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21271,
											"end": 21274,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 21264,
											"end": 21268,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21257,
											"end": 21262,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 21253,
											"end": 21269,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21231,
											"end": 21283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 21231,
											"end": 21283,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21231,
											"end": 21283,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 21231,
											"end": 21283,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21308,
											"end": 21314,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21303,
											"end": 21306,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21299,
											"end": 21315,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21292,
											"end": 21315,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21292,
											"end": 21315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21056,
											"end": 21321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20948,
											"end": 21321,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20948,
											"end": 21321,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20948,
											"end": 21321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20948,
											"end": 21321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20948,
											"end": 21321,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 21327,
											"end": 21598,
											"name": "tag",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 21327,
											"end": 21598,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21457,
											"end": 21460,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21479,
											"end": 21572,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 21568,
											"end": 21571,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21559,
											"end": 21565,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21479,
											"end": 21572,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 21479,
											"end": 21572,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21479,
											"end": 21572,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 21479,
											"end": 21572,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21472,
											"end": 21572,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21472,
											"end": 21572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21589,
											"end": 21592,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21582,
											"end": 21592,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21582,
											"end": 21592,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21327,
											"end": 21598,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21327,
											"end": 21598,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21327,
											"end": 21598,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21327,
											"end": 21598,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21327,
											"end": 21598,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"buyTokens(address)": "ec8ac4d8",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"rate()": "2c4e722e",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"wallet_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.\",\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"constructor\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"rate_\":\"Number of token units a buyer gets per wei\",\"token_\":\"Address of the token being sold\",\"wallet_\":\"Address where collected funds will be forwarded to\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"Crowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/crowdsale/Crowdsale.sol\":\"Crowdsale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0x135b6b5dc2e85e7d1edb7de38d0bce6aee45d1cc689b1c611c784e089d23bb9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5787de50d375f0ccab174f0ca6447ae1f3fad4fcc32df24c5c39603ec8f3b8a\",\"dweb:/ipfs/QmQEDBhDFkH8mjUWJKgiHe7hNfQjFTbgKvLs5xZh5k3pxe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "contracts/crowdsale/Crowdsale.sol:Crowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 24,
								"contract": "contracts/crowdsale/Crowdsale.sol:Crowdsale",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 1743,
								"contract": "contracts/crowdsale/Crowdsale.sol:Crowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)510"
							},
							{
								"astId": 1745,
								"contract": "contracts/crowdsale/Crowdsale.sol:Crowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "3",
								"type": "t_address_payable"
							},
							{
								"astId": 1747,
								"contract": "contracts/crowdsale/Crowdsale.sol:Crowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1749,
								"contract": "contracts/crowdsale/Crowdsale.sol:Crowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)510": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/crowdsale/Crowdsale.sol:Crowdsale",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/crowdsale/Crowdsale.sol:Crowdsale",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/crowdsale/validation/TimedCrowdsale.sol": {
				"TimedCrowdsale": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "prevClosingTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newClosingTime",
									"type": "uint256"
								}
							],
							"name": "TimedCrowdsaleExtended",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "closingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasClosed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale accepting contributions only within a time frame.",
						"events": {
							"TimedCrowdsaleExtended(uint256,uint256)": {
								"params": {
									"newClosingTime": "new closing time",
									"prevClosingTime": "old closing time"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"closingTime()": {
								"returns": {
									"_0": "the crowdsale closing time."
								}
							},
							"constructor": {
								"details": "Constructor, takes crowdsale opening and closing times.",
								"params": {
									"closingTime_": "Crowdsale closing time",
									"openingTime_": "Crowdsale opening time"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasClosed()": {
								"details": "Checks whether the period in which the crowdsale is open has already elapsed.",
								"returns": {
									"_0": "Whether crowdsale period has elapsed"
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isOpen()": {
								"returns": {
									"_0": "true if the crowdsale is open, false otherwise."
								}
							},
							"openingTime()": {
								"returns": {
									"_0": "the crowdsale opening time."
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "TimedCrowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"buyTokens(address)": "ec8ac4d8",
							"closingTime()": "4b6753bc",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasClosed()": "1515bc2b",
							"hasRole(bytes32,address)": "91d14854",
							"isOpen()": "47535d7b",
							"openingTime()": "b7a8807c",
							"rate()": "2c4e722e",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevClosingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClosingTime\",\"type\":\"uint256\"}],\"name\":\"TimedCrowdsaleExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale accepting contributions only within a time frame.\",\"events\":{\"TimedCrowdsaleExtended(uint256,uint256)\":{\"params\":{\"newClosingTime\":\"new closing time\",\"prevClosingTime\":\"old closing time\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"closingTime()\":{\"returns\":{\"_0\":\"the crowdsale closing time.\"}},\"constructor\":{\"details\":\"Constructor, takes crowdsale opening and closing times.\",\"params\":{\"closingTime_\":\"Crowdsale closing time\",\"openingTime_\":\"Crowdsale opening time\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"returns\":{\"_0\":\"Whether crowdsale period has elapsed\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isOpen()\":{\"returns\":{\"_0\":\"true if the crowdsale is open, false otherwise.\"}},\"openingTime()\":{\"returns\":{\"_0\":\"the crowdsale opening time.\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"TimedCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TimedCrowdsaleExtended(uint256,uint256)\":{\"notice\":\"Event for crowdsale extending\"},\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/crowdsale/validation/TimedCrowdsale.sol\":\"TimedCrowdsale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0x135b6b5dc2e85e7d1edb7de38d0bce6aee45d1cc689b1c611c784e089d23bb9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5787de50d375f0ccab174f0ca6447ae1f3fad4fcc32df24c5c39603ec8f3b8a\",\"dweb:/ipfs/QmQEDBhDFkH8mjUWJKgiHe7hNfQjFTbgKvLs5xZh5k3pxe\"]},\"contracts/crowdsale/validation/TimedCrowdsale.sol\":{\"keccak256\":\"0x30e100e27a84f2bcc3ea78c38fb810230a9b58bc9b956d08f41fb9608d9bbc75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a442dd7d0d569d9f1c765917b3f467bb8430269d51b49466d80064e29faf165a\",\"dweb:/ipfs/QmZQD4vTnFnh2oSwu5araz6FeTqmMsf6EvbykugNzFoQHW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "contracts/crowdsale/validation/TimedCrowdsale.sol:TimedCrowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 24,
								"contract": "contracts/crowdsale/validation/TimedCrowdsale.sol:TimedCrowdsale",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 1743,
								"contract": "contracts/crowdsale/validation/TimedCrowdsale.sol:TimedCrowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)510"
							},
							{
								"astId": 1745,
								"contract": "contracts/crowdsale/validation/TimedCrowdsale.sol:TimedCrowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "3",
								"type": "t_address_payable"
							},
							{
								"astId": 1747,
								"contract": "contracts/crowdsale/validation/TimedCrowdsale.sol:TimedCrowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1749,
								"contract": "contracts/crowdsale/validation/TimedCrowdsale.sol:TimedCrowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2048,
								"contract": "contracts/crowdsale/validation/TimedCrowdsale.sol:TimedCrowdsale",
								"label": "_openingTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2050,
								"contract": "contracts/crowdsale/validation/TimedCrowdsale.sol:TimedCrowdsale",
								"label": "_closingTime",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)510": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/crowdsale/validation/TimedCrowdsale.sol:TimedCrowdsale",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/crowdsale/validation/TimedCrowdsale.sol:TimedCrowdsale",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TimedCrowdsaleExtended(uint256,uint256)": {
								"notice": "Event for crowdsale extending"
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/crowdsale/Crowdsale.sol:191:37:\n    |\n191 |     function _updatePurchasingState(address beneficiary, uint256 weiAmount) virtual internal {\n    |                                     ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7351,
					"file": "contracts/crowdsale/Crowdsale.sol",
					"start": 7332
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							1144
						],
						"ERC165": [
							1394
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							1406
						],
						"Strings": [
							1370
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 393,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 1145,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 1371,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 1395,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1144,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1394,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319,
								1394,
								1406,
								392,
								1144
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 319,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1393
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$392",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$319_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1393,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 319,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										359
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 319,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 135,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 319,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "3791:419:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 133,
												"nodeType": "IfStatement",
												"src": "3801:403:0",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "3830:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 115,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 97,
																										"src": "4017:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 114,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4009:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 113,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "4009:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 116,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4009:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4027:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1370,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1370_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1349,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 118,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4056:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 124,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4129:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 123,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4121:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 122,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4121:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 125,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4121:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 126,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4136:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 120,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1370,
																								"src": "4101:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1370_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 121,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1349,
																							"src": "4101:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4101:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 131,
															"nodeType": "ExpressionStatement",
															"src": "3844:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 319,
									"src": "3718:492:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										367
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4474:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 144,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 146,
														"indexExpression": {
															"id": 145,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "4498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4491:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4491:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 143,
												"id": 148,
												"nodeType": "Return",
												"src": "4484:29:0"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4216:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4400:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4447:8:0"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4413:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:14:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:9:0"
									},
									"scope": 319,
									"src": "4391:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										375
									],
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4919:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 165,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4940:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 166,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4946:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4929:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4929:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "4929:25:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4526:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 160,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4912:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 159,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4899:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4899:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 158,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4890:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4890:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4825:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4881:8:0"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4843:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4835:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4857:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4849:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4834:31:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4919:0:0"
									},
									"scope": 319,
									"src": "4816:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										383
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5345:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5367:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "5373:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5355:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5355:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5355:26:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4967:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5338:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "5325:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5325:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5316:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5316:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5250:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5307:8:0"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5269:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5261:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5283:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5275:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5260:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5345:0:0"
									},
									"scope": 319,
									"src": "5241:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										391
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "6002:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 200,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "6020:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 201,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "6031:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6031:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6020:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6045:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6012:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "6012:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "6118:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6124:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "6106:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6106:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6106:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5394:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5934:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5993:8:0"
									},
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5955:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5947:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5969:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5961:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5946:31:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6002:0:0"
									},
									"scope": 319,
									"src": "5925:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6892:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "6913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 223,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6919:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 221,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "6902:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6902:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "6902:25:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "6145:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6833:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6843:31:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6892:0:0"
									},
									"scope": 319,
									"src": "6824:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "7132:174:0",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7150:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "7142:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 235,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7142:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"arguments": [
														{
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7183:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "7170:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7170:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7142:46:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 241,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7198:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 243,
															"indexExpression": {
																"id": 242,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "7205:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7198:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7198:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "7223:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7198:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "7198:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7264:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 250,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7270:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 251,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7289:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "7247:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7247:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "EmitStatement",
												"src": "7242:57:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6940:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7068:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7090:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "7082:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7104:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "7096:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7081:33:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7132:0:0"
									},
									"scope": 319,
									"src": "7059:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "7542:165:0",
										"statements": [
											{
												"condition": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7556:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "7565:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 265,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "7571:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 263,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7557:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7557:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "7552:149:0",
												"trueBody": {
													"id": 284,
													"nodeType": "Block",
													"src": "7581:120:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 268,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7595:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 270,
																			"indexExpression": {
																				"id": 269,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7602:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7595:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7595:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 273,
																	"indexExpression": {
																		"id": 272,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7616:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7595:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7627:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7595:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "7595:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "7662:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 279,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7668:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 280,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "7677:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7677:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 277,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "7650:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7650:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "EmitStatement",
															"src": "7645:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "7312:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7483:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7502:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7494:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7508:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7493:31:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7542:0:0"
									},
									"scope": 319,
									"src": "7474:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "7947:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 296,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7969:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 297,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7975:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7961:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7961:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 316,
												"nodeType": "IfStatement",
												"src": "7957:149:0",
												"trueBody": {
													"id": 315,
													"nodeType": "Block",
													"src": "7985:121:0",
													"statements": [
														{
															"expression": {
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 299,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7999:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 301,
																			"indexExpression": {
																				"id": 300,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 290,
																				"src": "8006:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7999:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7999:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 304,
																	"indexExpression": {
																		"id": 303,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "8020:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7999:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8031:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7999:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "7999:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 309,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8067:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 310,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "8073:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 311,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "8082:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8082:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 308,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "8055:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8055:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 314,
															"nodeType": "EmitStatement",
															"src": "8050:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "7713:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7887:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7907:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7899:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7921:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7913:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7898:31:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7947:0:0"
									},
									"scope": 319,
									"src": "7878:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 320,
							"src": "1806:6308:0",
							"usedErrors": []
						}
					],
					"src": "108:8007:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 392,
							"linearizedBaseContracts": [
								392
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 331,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"id": 340,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 349,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 392,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 392,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 392,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 392,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 392,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							432
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1661:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1708:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1752:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1796:39:2",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1816:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:2"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:2"
									},
									"scope": 432,
									"src": "1782:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2236:421:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2325:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 416,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2336:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:2"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 421,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2455:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 422,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2465:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:2"
											},
											{
												"id": 425,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:2"
											},
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2638:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:2"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 431,
									"name": "nonReentrant",
									"nameLocation": "2221:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:2"
									},
									"src": "2212:445:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 433,
							"src": "873:1786:2",
							"usedErrors": []
						}
					],
					"src": "97:2563:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							510
						]
					},
					"id": 511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 435,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 510,
							"linearizedBaseContracts": [
								510
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 444,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 453,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 510,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 510,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 510,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 510,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 510,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2699:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2719:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:3"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2758:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:3"
									},
									"scope": 510,
									"src": "2646:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 511,
							"src": "202:2564:3",
							"usedErrors": []
						}
					],
					"src": "106:2661:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							546
						]
					},
					"id": 547,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 512,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 513,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 546,
							"linearizedBaseContracts": [
								546
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 531,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1471:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1494:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1519:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1542:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1568:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 523,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1585:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 525,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1604:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:4"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:4"
									},
									"scope": 546,
									"src": "1446:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1950:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:4"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1988:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:4"
									},
									"scope": 546,
									"src": "1934:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:4"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2240:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 542,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:4"
									},
									"scope": 546,
									"src": "2189:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 547,
							"src": "620:1631:4",
							"usedErrors": []
						}
					],
					"src": "114:2138:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1122
						],
						"IERC20": [
							510
						],
						"IERC20Permit": [
							546
						],
						"SafeERC20": [
							827
						]
					},
					"id": 828,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 548,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 549,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 828,
							"sourceUnit": 511,
							"src": "140:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 550,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 828,
							"sourceUnit": 547,
							"src": "164:46:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 551,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 828,
							"sourceUnit": 1123,
							"src": "211:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 552,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 827,
							"linearizedBaseContracts": [
								827
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 555,
									"libraryName": {
										"id": 553,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1122,
										"src": "737:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:5",
									"typeName": {
										"id": 554,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "865:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 566,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "895:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$510",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 569,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "925:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$510",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 477,
																		"src": "925:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 572,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "950:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 573,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "954:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 567,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$510",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 565,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "875:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$510_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "875:86:5"
											}
										]
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "794:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$510",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 557,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 556,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 510,
														"src": "794:6:5"
													},
													"referencedDeclaration": 510,
													"src": "794:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$510",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "816:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "836:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:5"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:5"
									},
									"scope": 827,
									"src": "763:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1102:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 591,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "1132:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$510",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 594,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1162:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$510",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 509,
																		"src": "1162:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 597,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1191:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 598,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "1197:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "1201:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 592,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$510",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 590,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "1112:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$510_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:5"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1009:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$510",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 580,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 579,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 510,
														"src": "1009:6:5"
													},
													"referencedDeclaration": 510,
													"src": "1009:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$510",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1031:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1053:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1073:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:5"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:5"
									},
									"scope": 827,
									"src": "974:241:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "1581:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 616,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "1830:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 619,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 624,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$827",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$827",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 623,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 622,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 625,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "1877:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 620,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 608,
																					"src": "1846:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$510",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 621,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 487,
																				"src": "1846:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 630,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 636,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "2001:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$510",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 639,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "2031:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$510",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 497,
																		"src": "2031:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 642,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "2055:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 643,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "2064:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 637,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$510",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 635,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "1981:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$510_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:5"
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1505:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$510",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 607,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 606,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 510,
														"src": "1505:6:5"
													},
													"referencedDeclaration": 510,
													"src": "1505:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$510",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1527:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1552:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:5"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:5"
									},
									"scope": 827,
									"src": "1475:603:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "2200:194:5",
										"statements": [
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "2210:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 664,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$827",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$827",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 662,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 666,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "2264:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 660,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "2233:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$510",
																	"typeString": "contract IERC20"
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 487,
															"src": "2233:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 668,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "2275:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 672,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "2310:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$510",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 675,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "2340:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$510",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 497,
																		"src": "2340:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 678,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "2364:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 679,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "2373:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 673,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$510",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 671,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "2290:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$510_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:5"
											}
										]
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2124:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$510",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 650,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 649,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 510,
														"src": "2124:6:5"
													},
													"referencedDeclaration": 510,
													"src": "2124:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$510",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2146:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2171:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:5"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:5"
									},
									"scope": 827,
									"src": "2084:310:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "2516:370:5",
										"statements": [
											{
												"id": 730,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:5",
												"statements": [
													{
														"assignments": [
															695
														],
														"declarations": [
															{
																"constant": false,
																"id": 695,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 730,
																"src": "2550:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 694,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 704,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 700,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$827",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$827",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 698,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "2604:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 696,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "2573:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$510",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 487,
																"src": "2573:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 706,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "2634:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 707,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 691,
																		"src": "2650:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 705,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 711,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:5"
													},
													{
														"assignments": [
															713
														],
														"declarations": [
															{
																"constant": false,
																"id": 713,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 730,
																"src": "2715:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 712,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 717,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 714,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "2738:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 715,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "2753:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 719,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "2792:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$510",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 722,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 687,
																					"src": "2822:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$510",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 497,
																				"src": "2822:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 725,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 689,
																			"src": "2846:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 726,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 713,
																			"src": "2855:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 720,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$510",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 718,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "2772:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$510_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 729,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:5"
													}
												]
											}
										]
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "2440:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$510",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 686,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 685,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 510,
														"src": "2440:6:5"
													},
													"referencedDeclaration": 510,
													"src": "2440:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$510",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "2462:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "2487:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:5"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:5"
									},
									"scope": 827,
									"src": "2400:486:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "3107:257:5",
										"statements": [
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "3117:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 752,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 758,
												"initialValue": {
													"arguments": [
														{
															"id": 756,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "3152:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 754,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "3139:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$546",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 539,
														"src": "3139:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 762,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "3181:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 763,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "3188:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "3197:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 765,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "3204:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 766,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "3214:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 767,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "3217:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 768,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "3220:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 759,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "3168:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$546",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 531,
														"src": "3168:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:5"
											},
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "3232:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 775,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "3266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 773,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "3253:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$546",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 539,
														"src": "3253:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "3290:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 780,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "3304:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:5"
											}
										]
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2921:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$546",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 734,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 733,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 546,
														"src": "2921:12:5"
													},
													"referencedDeclaration": 546,
													"src": "2921:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$546",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2949:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2972:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2997:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3020:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3046:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 744,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3063:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 746,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3082:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 748,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:5"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:5"
									},
									"scope": 827,
									"src": "2892:472:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "3817:636:5",
										"statements": [
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "4166:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 797,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"arguments": [
														{
															"id": 804,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "4220:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 801,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "4200:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$510",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$510",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 799,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 916,
														"src": "4192:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 808,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "4275:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "4271:176:5",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "4298:149:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 815,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "4370:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 817,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 816,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 818,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 813,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 812,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 822,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3776:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$510",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 791,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 790,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 510,
														"src": "3776:6:5"
													},
													"referencedDeclaration": 510,
													"src": "3776:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$510",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3790:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:5"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:5"
									},
									"scope": 827,
									"src": "3747:706:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 828,
							"src": "707:3748:5",
							"usedErrors": []
						}
					],
					"src": "115:4341:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1122
						]
					},
					"id": 1123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 829,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 830,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1122,
							"linearizedBaseContracts": [
								1122
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "1241:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 838,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "1465:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 837,
												"id": 843,
												"nodeType": "Return",
												"src": "1458:30:6"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "1195:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:6"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "1235:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:6"
									},
									"scope": 1122,
									"src": "1175:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "2483:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 856,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1122",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1122",
																				"typeString": "library Address"
																			}
																		],
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 854,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 859,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "2526:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 853,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:6"
											},
											{
												"assignments": [
													865,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 865,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 878,
														"src": "2578:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 864,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 872,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 866,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "2596:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 868,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "2618:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 874,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "2647:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 873,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:6"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2431:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2458:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:6"
									},
									"scope": 1122,
									"src": "2412:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "3555:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 890,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "3585:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 891,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "3593:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 889,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															896,
															916
														],
														"referencedDeclaration": 916,
														"src": "3572:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 888,
												"id": 894,
												"nodeType": "Return",
												"src": "3565:67:6"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "3488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "3504:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 883,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:6"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "3541:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 886,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:6"
									},
									"scope": 1122,
									"src": "3466:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "4008:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "4047:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "4055:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 912,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "4064:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 908,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															936,
															986
														],
														"referencedDeclaration": 986,
														"src": "4025:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 907,
												"id": 914,
												"nodeType": "Return",
												"src": "4018:59:6"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3892:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3916:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 900,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3943:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 902,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:6"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3994:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 905,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:6"
									},
									"scope": 1122,
									"src": "3861:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "4589:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "4628:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "4636:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 931,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "4642:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 928,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															936,
															986
														],
														"referencedDeclaration": 986,
														"src": "4606:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 927,
												"id": 934,
												"nodeType": "Return",
												"src": "4599:94:6"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "4486:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "4510:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 920,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "4537:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:6"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "4575:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 925,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:6"
									},
									"scope": 1122,
									"src": "4446:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "5127:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 953,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1122",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1122",
																				"typeString": "library Address"
																			}
																		],
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 951,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 956,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "5170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 950,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 963,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "5247:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 962,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "5236:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:6"
											},
											{
												"assignments": [
													969,
													971
												],
												"declarations": [
													{
														"constant": false,
														"id": 969,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "5300:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 968,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 971,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "5314:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 970,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"arguments": [
														{
															"id": 976,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "5367:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 972,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "5341:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 974,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "5360:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 980,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "5406:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 981,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "5415:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 982,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "5427:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 979,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "5389:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 949,
												"id": 984,
												"nodeType": "Return",
												"src": "5382:58:6"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "4988:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5012:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 940,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5039:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5062:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5113:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 947,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:6"
									},
									"scope": 1122,
									"src": "4948:499:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "5724:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 997,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "5760:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "5768:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 996,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1003,
															1038
														],
														"referencedDeclaration": 1038,
														"src": "5741:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 995,
												"id": 1001,
												"nodeType": "Return",
												"src": "5734:80:6"
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5652:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5668:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 990,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:6"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5710:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 993,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:6"
									},
									"scope": 1122,
									"src": "5624:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "6163:228:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1017,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "6192:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1016,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "6181:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1015,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:6"
											},
											{
												"assignments": [
													1023,
													1025
												],
												"declarations": [
													{
														"constant": false,
														"id": 1023,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "6252:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1022,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1025,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "6266:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1024,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1030,
												"initialValue": {
													"arguments": [
														{
															"id": 1028,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "6311:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1026,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "6293:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1032,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "6350:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1033,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "6359:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1034,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6371:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1031,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "6333:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1014,
												"id": 1036,
												"nodeType": "Return",
												"src": "6326:58:6"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "6042:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "6066:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1007,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "6093:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1009,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:6"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "6149:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:6"
									},
									"scope": 1122,
									"src": "6005:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "6667:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "6705:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "6713:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1048,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1055,
															1090
														],
														"referencedDeclaration": 1090,
														"src": "6684:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1047,
												"id": 1053,
												"nodeType": "Return",
												"src": "6677:84:6"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "6600:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:6"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "6653:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1045,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:6"
									},
									"scope": 1122,
									"src": "6570:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "7109:232:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1069,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "7138:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1068,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "7127:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:6"
											},
											{
												"assignments": [
													1075,
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1075,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "7200:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1074,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "7214:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1076,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1082,
												"initialValue": {
													"arguments": [
														{
															"id": 1080,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "7261:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1078,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "7241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1084,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "7300:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1085,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "7309:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1086,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "7321:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1083,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "7283:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1088,
												"nodeType": "Return",
												"src": "7276:58:6"
											}
										]
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "6993:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "7017:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1059,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "7044:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1061,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:6"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "7095:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:6"
									},
									"scope": 1122,
									"src": "6954:387:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "7721:582:6",
										"statements": [
											{
												"condition": {
													"id": 1102,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1093,
													"src": "7735:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1118,
													"nodeType": "Block",
													"src": "7792:505:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1106,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "7876:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1116,
																"nodeType": "Block",
																"src": "8234:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1113,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1097,
																					"src": "8259:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1112,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1115,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:6"
																	}
																]
															},
															"id": 1117,
															"nodeType": "IfStatement",
															"src": "7872:415:6",
															"trueBody": {
																"id": 1111,
																"nodeType": "Block",
																"src": "7899:329:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:6"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1095,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1095,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1110,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 1119,
												"nodeType": "IfStatement",
												"src": "7731:566:6",
												"trueBody": {
													"id": 1105,
													"nodeType": "Block",
													"src": "7744:42:6",
													"statements": [
														{
															"expression": {
																"id": 1103,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "7765:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1101,
															"id": 1104,
															"nodeType": "Return",
															"src": "7758:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "7596:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "7618:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1094,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "7651:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1096,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:6"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "7707:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1099,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:6"
									},
									"scope": 1122,
									"src": "7561:742:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1123,
							"src": "194:8111:6",
							"usedErrors": []
						}
					],
					"src": "101:8205:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1144
						]
					},
					"id": 1145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1125,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1144,
							"linearizedBaseContracts": [
								1144
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1130,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1129,
												"id": 1132,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 1144,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1139,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1138,
												"id": 1141,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 1144,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1145,
							"src": "608:235:7",
							"usedErrors": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1370
						]
					},
					"id": 1371,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1147,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1370,
							"linearizedBaseContracts": [
								1370
							],
							"name": "Strings",
							"nameLocation": "169:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1150,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1370,
									"src": "183:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1148,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1149,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1153,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1370,
									"src": "247:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1151,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "463:632:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1161,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "665:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1167,
												"nodeType": "IfStatement",
												"src": "661:51:8",
												"trueBody": {
													"id": 1166,
													"nodeType": "Block",
													"src": "677:35:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1160,
															"id": 1165,
															"nodeType": "Return",
															"src": "691:10:8"
														}
													]
												}
											},
											{
												"assignments": [
													1169
												],
												"declarations": [
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1231,
														"src": "721:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1168,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1171,
												"initialValue": {
													"id": 1170,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1156,
													"src": "736:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:8"
											},
											{
												"assignments": [
													1173
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1231,
														"src": "751:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1174,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:8"
											},
											{
												"body": {
													"id": 1185,
													"nodeType": "Block",
													"src": "793:57:8",
													"statements": [
														{
															"expression": {
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:8",
																"subExpression": {
																	"id": 1178,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "807:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1180,
															"nodeType": "ExpressionStatement",
															"src": "807:8:8"
														},
														{
															"expression": {
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1181,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "829:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1184,
															"nodeType": "ExpressionStatement",
															"src": "829:10:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1175,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "782:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "WhileStatement",
												"src": "775:75:8"
											},
											{
												"assignments": [
													1188
												],
												"declarations": [
													{
														"constant": false,
														"id": 1188,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1231,
														"src": "859:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1187,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"arguments": [
														{
															"id": 1191,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "891:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1189,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:8"
											},
											{
												"body": {
													"id": 1224,
													"nodeType": "Block",
													"src": "927:131:8",
													"statements": [
														{
															"expression": {
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1197,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "941:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1200,
															"nodeType": "ExpressionStatement",
															"src": "941:11:8"
														},
														{
															"expression": {
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1201,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1188,
																		"src": "966:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1203,
																	"indexExpression": {
																		"id": 1202,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1173,
																		"src": "973:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1215,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1208,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1213,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1211,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1156,
																									"src": "1009:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1212,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1210,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1209,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1214,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1206,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1204,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1219,
															"nodeType": "ExpressionStatement",
															"src": "966:56:8"
														},
														{
															"expression": {
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1220,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "1036:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1223,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1194,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "915:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1225,
												"nodeType": "WhileStatement",
												"src": "908:150:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1228,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "1081:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1226,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1160,
												"id": 1230,
												"nodeType": "Return",
												"src": "1067:21:8"
											}
										]
									},
									"documentation": {
										"id": 1154,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "410:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:8"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "448:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:8"
									},
									"scope": 1370,
									"src": "392:703:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "1274:255:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1240,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "1288:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "1284:54:8",
												"trueBody": {
													"id": 1245,
													"nodeType": "Block",
													"src": "1300:38:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1239,
															"id": 1244,
															"nodeType": "Return",
															"src": "1314:13:8"
														}
													]
												}
											},
											{
												"assignments": [
													1248
												],
												"declarations": [
													{
														"constant": false,
														"id": 1248,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1272,
														"src": "1347:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1247,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1250,
												"initialValue": {
													"id": 1249,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1235,
													"src": "1362:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:8"
											},
											{
												"assignments": [
													1252
												],
												"declarations": [
													{
														"constant": false,
														"id": 1252,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1272,
														"src": "1377:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1254,
												"initialValue": {
													"hexValue": "30",
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:8"
											},
											{
												"body": {
													"id": 1265,
													"nodeType": "Block",
													"src": "1423:57:8",
													"statements": [
														{
															"expression": {
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:8",
																"subExpression": {
																	"id": 1258,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "1437:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1260,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:8"
														},
														{
															"expression": {
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1261,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "1459:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1264,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1255,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "1412:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1266,
												"nodeType": "WhileStatement",
												"src": "1405:75:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1268,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "1508:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1269,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "1515:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1267,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1273,
															1349,
															1369
														],
														"referencedDeclaration": 1349,
														"src": "1496:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1239,
												"id": 1271,
												"nodeType": "Return",
												"src": "1489:33:8"
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1221:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:8"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1259:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1237,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:8"
									},
									"scope": 1370,
									"src": "1200:329:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "1742:351:8",
										"statements": [
											{
												"assignments": [
													1284
												],
												"declarations": [
													{
														"constant": false,
														"id": 1284,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "1752:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1283,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1293,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1288,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "1788:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1285,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:8"
											},
											{
												"expression": {
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1294,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "1809:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1296,
														"indexExpression": {
															"hexValue": "30",
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:8"
											},
											{
												"expression": {
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1300,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "1834:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1302,
														"indexExpression": {
															"hexValue": "31",
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:8"
											},
											{
												"body": {
													"id": 1334,
													"nodeType": "Block",
													"src": "1904:87:8",
													"statements": [
														{
															"expression": {
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1320,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "1918:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1322,
																	"indexExpression": {
																		"id": 1321,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "1925:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1323,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1150,
																		"src": "1930:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1327,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1324,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1276,
																			"src": "1943:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1329,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:8"
														},
														{
															"expression": {
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1330,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "1969:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1333,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1314,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "1892:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1335,
												"initializationExpression": {
													"assignments": [
														1307
													],
													"declarations": [
														{
															"constant": false,
															"id": 1307,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1335,
															"src": "1864:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1306,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1313,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1309,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "1880:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:8",
														"subExpression": {
															"id": 1317,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "1901:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1319,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:8"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1337,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "2008:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1345,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "2079:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1343,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1282,
												"id": 1347,
												"nodeType": "Return",
												"src": "2065:21:8"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "1673:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "1688:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:8"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "1727:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:8"
									},
									"scope": 1370,
									"src": "1652:441:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "2318:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1362,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "2363:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1360,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1358,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1365,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "2371:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1357,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1273,
															1349,
															1369
														],
														"referencedDeclaration": 1349,
														"src": "2335:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1367,
												"nodeType": "Return",
												"src": "2328:59:8"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "2266:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:8"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "2303:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1354,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:8"
									},
									"scope": 1370,
									"src": "2245:149:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1371,
							"src": "161:2235:8",
							"usedErrors": []
						}
					],
					"src": "101:2296:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1394
						],
						"IERC165": [
							1406
						]
					},
					"id": 1395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1372,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1373,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1395,
							"sourceUnit": 1407,
							"src": "124:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1375,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1406,
										"src": "754:7:9"
									},
									"id": 1376,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1374,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1394,
							"linearizedBaseContracts": [
								1394,
								1406
							],
							"name": "ERC165",
							"nameLocation": "744:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1405
									],
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "920:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1385,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "937:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1387,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "957:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1406_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1406_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1386,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1406",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1384,
												"id": 1391,
												"nodeType": "Return",
												"src": "930:47:9"
											}
										]
									},
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1381,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:9"
									},
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "856:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1378,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:9"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "914:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:9"
									},
									"scope": 1394,
									"src": "829:155:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1395,
							"src": "726:260:9",
							"usedErrors": []
						}
					],
					"src": "99:888:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1406
						]
					},
					"id": 1407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1397,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1406,
							"linearizedBaseContracts": [
								1406
							],
							"name": "IERC165",
							"nameLocation": "415:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "801:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1399,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:10"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "844:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:10"
									},
									"scope": 1406,
									"src": "774:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1407,
							"src": "405:447:10",
							"usedErrors": []
						}
					],
					"src": "100:753:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1718
						]
					},
					"id": 1719,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1408,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1409,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:11",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1718,
							"linearizedBaseContracts": [
								1718
							],
							"name": "SafeMath",
							"nameLocation": "490:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "717:140:11",
										"statements": [
											{
												"id": 1439,
												"nodeType": "UncheckedBlock",
												"src": "727:124:11",
												"statements": [
													{
														"assignments": [
															1422
														],
														"declarations": [
															{
																"constant": false,
																"id": 1422,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1439,
																"src": "751:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1421,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1426,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1423,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "763:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1424,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "767:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1427,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "786:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1428,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "790:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1434,
														"nodeType": "IfStatement",
														"src": "782:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1432,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1420,
															"id": 1433,
															"nodeType": "Return",
															"src": "793:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1436,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "838:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1437,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1420,
														"id": 1438,
														"nodeType": "Return",
														"src": "824:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "657:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "668:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:11"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "702:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1416,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "708:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:11"
									},
									"scope": 1718,
									"src": "641:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "1078:113:11",
										"statements": [
											{
												"id": 1467,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1453,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "1116:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1454,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "1120:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1460,
														"nodeType": "IfStatement",
														"src": "1112:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1458,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1452,
															"id": 1459,
															"nodeType": "Return",
															"src": "1123:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1462,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "1168:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1463,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1446,
																		"src": "1172:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1465,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1452,
														"id": 1466,
														"nodeType": "Return",
														"src": "1154:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "1018:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "1029:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:11"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "1063:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "1069:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:11"
									},
									"scope": 1718,
									"src": "1002:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "1415:417:11",
										"statements": [
											{
												"id": 1509,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1481,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "1683:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1488,
														"nodeType": "IfStatement",
														"src": "1679:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1486,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1480,
															"id": 1487,
															"nodeType": "Return",
															"src": "1691:16:11"
														}
													},
													{
														"assignments": [
															1490
														],
														"declarations": [
															{
																"constant": false,
																"id": 1490,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1509,
																"src": "1721:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1489,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1494,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1491,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "1733:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1492,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "1737:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1495,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1490,
																	"src": "1756:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1496,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "1760:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1498,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "1765:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1504,
														"nodeType": "IfStatement",
														"src": "1752:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1502,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1480,
															"id": 1503,
															"nodeType": "Return",
															"src": "1768:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1506,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1490,
																	"src": "1813:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1507,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1480,
														"id": 1508,
														"nodeType": "Return",
														"src": "1799:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "1355:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "1366:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:11"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "1400:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "1406:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:11"
									},
									"scope": 1718,
									"src": "1339:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "2057:114:11",
										"statements": [
											{
												"id": 1537,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1523,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "2095:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1530,
														"nodeType": "IfStatement",
														"src": "2091:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1528,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1522,
															"id": 1529,
															"nodeType": "Return",
															"src": "2103:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1532,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1514,
																		"src": "2148:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1533,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1516,
																		"src": "2152:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1522,
														"id": 1536,
														"nodeType": "Return",
														"src": "2134:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "1997:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2008:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:11"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2042:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2048:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:11"
									},
									"scope": 1718,
									"src": "1981:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "2406:114:11",
										"statements": [
											{
												"id": 1565,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1551,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "2444:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1558,
														"nodeType": "IfStatement",
														"src": "2440:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1556,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1550,
															"id": 1557,
															"nodeType": "Return",
															"src": "2452:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1560,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "2497:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1561,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1544,
																		"src": "2501:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1563,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1550,
														"id": 1564,
														"nodeType": "Return",
														"src": "2483:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "2346:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "2357:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:11"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "2391:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1546,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "2397:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:11"
									},
									"scope": 1718,
									"src": "2330:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "2822:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1577,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "2839:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1578,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "2843:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1576,
												"id": 1580,
												"nodeType": "Return",
												"src": "2832:12:11"
											}
										]
									},
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:11",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "2768:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "2779:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:11"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "2813:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:11"
									},
									"scope": 1718,
									"src": "2755:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "3189:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1592,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "3206:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1593,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "3210:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1591,
												"id": 1595,
												"nodeType": "Return",
												"src": "3199:12:11"
											}
										]
									},
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:11",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3135:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3146:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:11"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3180:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:11"
									},
									"scope": 1718,
									"src": "3122:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "3532:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1607,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "3549:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1608,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "3553:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1606,
												"id": 1610,
												"nodeType": "Return",
												"src": "3542:12:11"
											}
										]
									},
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:11",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3478:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3489:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:11"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3523:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:11"
									},
									"scope": 1718,
									"src": "3465:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "3917:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1622,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "3934:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1623,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "3938:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1621,
												"id": 1625,
												"nodeType": "Return",
												"src": "3927:12:11"
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:11",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "3863:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "3874:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:11"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "3908:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:11"
									},
									"scope": 1718,
									"src": "3850:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "4466:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1637,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "4483:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1638,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "4487:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1636,
												"id": 1640,
												"nodeType": "Return",
												"src": "4476:12:11"
											}
										]
									},
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "4412:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "4423:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:11"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "4457:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:11"
									},
									"scope": 1718,
									"src": "4399:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "5084:106:11",
										"statements": [
											{
												"id": 1665,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1655,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1647,
																		"src": "5126:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1656,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "5131:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1658,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "5134:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1654,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1660,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1661,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "5168:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1662,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1647,
																"src": "5172:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1653,
														"id": 1664,
														"nodeType": "Return",
														"src": "5161:12:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:11",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "4981:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "5000:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "5019:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1648,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:11"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "5075:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:11"
									},
									"scope": 1718,
									"src": "4959:231:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "5799:105:11",
										"statements": [
											{
												"id": 1690,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1680,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "5841:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1683,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1674,
																	"src": "5848:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1679,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1685,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1686,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1670,
																"src": "5882:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1687,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "5886:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1678,
														"id": 1689,
														"nodeType": "Return",
														"src": "5875:12:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:11",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "5696:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "5715:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "5734:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1673,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:11"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "5790:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:11"
									},
									"scope": 1718,
									"src": "5674:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "6675:105:11",
										"statements": [
											{
												"id": 1715,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1705,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "6717:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1708,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1699,
																	"src": "6724:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1704,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1710,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1711,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "6758:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1712,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "6762:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1703,
														"id": 1714,
														"nodeType": "Return",
														"src": "6751:12:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "6572:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "6591:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "6610:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1698,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:11"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "6666:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:11"
									},
									"scope": 1718,
									"src": "6550:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1719,
							"src": "482:6300:11",
							"usedErrors": []
						}
					],
					"src": "107:6676:11"
				},
				"id": 11
			},
			"contracts/crowdsale/Crowdsale.sol": {
				"ast": {
					"absolutePath": "contracts/crowdsale/Crowdsale.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Address": [
							1122
						],
						"Context": [
							1144
						],
						"Crowdsale": [
							2036
						],
						"ERC165": [
							1394
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							1406
						],
						"IERC20": [
							510
						],
						"IERC20Permit": [
							546
						],
						"ReentrancyGuard": [
							432
						],
						"SafeERC20": [
							827
						],
						"SafeMath": [
							1718
						],
						"Strings": [
							1370
						]
					},
					"id": 2037,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1720,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1721,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2037,
							"sourceUnit": 1145,
							"src": "57:51:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1722,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2037,
							"sourceUnit": 511,
							"src": "109:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1723,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2037,
							"sourceUnit": 1719,
							"src": "166:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1724,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2037,
							"sourceUnit": 828,
							"src": "224:65:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1725,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2037,
							"sourceUnit": 433,
							"src": "290:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2037,
							"sourceUnit": 320,
							"src": "353:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1728,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1144,
										"src": "1132:7:12"
									},
									"id": 1729,
									"nodeType": "InheritanceSpecifier",
									"src": "1132:7:12"
								},
								{
									"baseName": {
										"id": 1730,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 432,
										"src": "1141:15:12"
									},
									"id": 1731,
									"nodeType": "InheritanceSpecifier",
									"src": "1141:15:12"
								},
								{
									"baseName": {
										"id": 1732,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "1158:13:12"
									},
									"id": 1733,
									"nodeType": "InheritanceSpecifier",
									"src": "1158:13:12"
								}
							],
							"canonicalName": "Crowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1727,
								"nodeType": "StructuredDocumentation",
								"src": "414:695:12",
								"text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conforms\n the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropriate to concatenate\n behavior."
							},
							"fullyImplemented": true,
							"id": 2036,
							"linearizedBaseContracts": [
								2036,
								319,
								1394,
								1406,
								392,
								432,
								1144
							],
							"name": "Crowdsale",
							"nameLocation": "1119:9:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1736,
									"libraryName": {
										"id": 1734,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1718,
										"src": "1184:8:12"
									},
									"nodeType": "UsingForDirective",
									"src": "1178:27:12",
									"typeName": {
										"id": 1735,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1197:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1740,
									"libraryName": {
										"id": 1737,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 827,
										"src": "1216:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "1210:27:12",
									"typeName": {
										"id": 1739,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1738,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 510,
											"src": "1230:6:12"
										},
										"referencedDeclaration": 510,
										"src": "1230:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$510",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 1743,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "1286:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 2036,
									"src": "1271:21:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$510",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1742,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1741,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 510,
											"src": "1271:6:12"
										},
										"referencedDeclaration": 510,
										"src": "1271:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$510",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1745,
									"mutability": "mutable",
									"name": "_wallet",
									"nameLocation": "1364:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 2036,
									"src": "1340:31:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1744,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1340:15:12",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1747,
									"mutability": "mutable",
									"name": "_rate",
									"nameLocation": "1678:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 2036,
									"src": "1662:21:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1746,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1662:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1749,
									"mutability": "mutable",
									"name": "_weiRaised",
									"nameLocation": "1734:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2036,
									"src": "1718:26:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1748,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1718:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "1757:235:12",
										"text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
									},
									"id": 1760,
									"name": "TokensPurchased",
									"nameLocation": "2003:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"indexed": true,
												"mutability": "mutable",
												"name": "purchaser",
												"nameLocation": "2035:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "2019:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2062:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "2046:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2083:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "2075:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2075:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2098:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "2090:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2018:87:12"
									},
									"src": "1997:109:12"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "2625:356:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1772,
																"name": "rate_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1763,
																"src": "2643:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2651:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2643:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20726174652069732030",
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2654:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															},
															"value": "Crowdsale: rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															}
														],
														"id": 1771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2635:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2635:42:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1777,
												"nodeType": "ExpressionStatement",
												"src": "2635:42:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1779,
																"name": "wallet_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1765,
																"src": "2695:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2714:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2706:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1780,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2706:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2706:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2695:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2718:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															},
															"value": "Crowdsale: wallet is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															}
														],
														"id": 1778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2687:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2687:71:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1787,
												"nodeType": "ExpressionStatement",
												"src": "2687:71:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1791,
																		"name": "token_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "2784:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$510",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$510",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2776:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1789,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2776:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2776:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2803:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2795:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1793,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2795:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2795:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2776:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2807:38:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															},
															"value": "Crowdsale: token is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															}
														],
														"id": 1788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2768:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2768:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "2768:78:12"
											},
											{
												"expression": {
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1801,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "2857:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1802,
														"name": "rate_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "2865:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2857:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1804,
												"nodeType": "ExpressionStatement",
												"src": "2857:13:12"
											},
											{
												"expression": {
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1805,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "2880:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1806,
														"name": "wallet_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1765,
														"src": "2890:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2880:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "2880:17:12"
											},
											{
												"expression": {
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1809,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "2907:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$510",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1810,
														"name": "token_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1768,
														"src": "2916:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$510",
															"typeString": "contract IERC20"
														}
													},
													"src": "2907:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$510",
														"typeString": "contract IERC20"
													}
												},
												"id": 1812,
												"nodeType": "ExpressionStatement",
												"src": "2907:15:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1814,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "2943:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1815,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2963:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2963:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1813,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "2932:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2932:42:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1818,
												"nodeType": "ExpressionStatement",
												"src": "2932:42:12"
											}
										]
									},
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "2112:440:12",
										"text": " @param rate_ Number of token units a buyer gets per wei\n @dev The rate is the conversion between wei and the smallest and indivisible\n token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n @param wallet_ Address where collected funds will be forwarded to\n @param token_ Address of the token being sold"
									},
									"id": 1820,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "rate_",
												"nameLocation": "2578:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "2570:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "wallet_",
												"nameLocation": "2601:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "2585:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2585:15:12",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "token_",
												"nameLocation": "2617:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "2610:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$510",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1767,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1766,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 510,
														"src": "2610:6:12"
													},
													"referencedDeclaration": 510,
													"src": "2610:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$510",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:55:12"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2625:0:12"
									},
									"scope": 2036,
									"src": "2557:424:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "3299:40:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1825,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "3319:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3319:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1824,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "3309:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3309:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1828,
												"nodeType": "ExpressionStatement",
												"src": "3309:23:12"
											}
										]
									},
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "2987:278:12",
										"text": " @dev fallback function ***DO NOT OVERRIDE***\n Note that other contracts will transfer funds with a base gas stipend\n of 2300, which is not enough to call buyTokens. Consider calling\n buyTokens directly when purchasing tokens from a contract."
									},
									"id": 1830,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3279:2:12"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3299:0:12"
									},
									"scope": 2036,
									"src": "3270:69:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "3373:40:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1834,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "3393:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3393:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1833,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "3383:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3383:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "3383:23:12"
											}
										]
									},
									"id": 1839,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3353:2:12"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:12"
									},
									"scope": 2036,
									"src": "3345:68:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1848,
										"nodeType": "Block",
										"src": "3518:30:12",
										"statements": [
											{
												"expression": {
													"id": 1846,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1743,
													"src": "3535:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$510",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 1845,
												"id": 1847,
												"nodeType": "Return",
												"src": "3528:13:12"
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "3419:48:12",
										"text": " @return the token being sold."
									},
									"functionSelector": "fc0c546a",
									"id": 1849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "3481:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3486:2:12"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "3510:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$510",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1843,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1842,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 510,
														"src": "3510:6:12"
													},
													"referencedDeclaration": 510,
													"src": "3510:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$510",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:8:12"
									},
									"scope": 2036,
									"src": "3472:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1857,
										"nodeType": "Block",
										"src": "3680:31:12",
										"statements": [
											{
												"expression": {
													"id": 1855,
													"name": "_wallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1745,
													"src": "3697:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1856,
												"nodeType": "Return",
												"src": "3690:14:12"
											}
										]
									},
									"documentation": {
										"id": 1850,
										"nodeType": "StructuredDocumentation",
										"src": "3554:65:12",
										"text": " @return the address where funds are collected."
									},
									"functionSelector": "521eb273",
									"id": 1858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wallet",
									"nameLocation": "3633:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3639:2:12"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "3663:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3663:15:12",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3662:17:12"
									},
									"scope": 2036,
									"src": "3624:87:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1866,
										"nodeType": "Block",
										"src": "3842:29:12",
										"statements": [
											{
												"expression": {
													"id": 1864,
													"name": "_rate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1747,
													"src": "3859:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1863,
												"id": 1865,
												"nodeType": "Return",
												"src": "3852:12:12"
											}
										]
									},
									"documentation": {
										"id": 1859,
										"nodeType": "StructuredDocumentation",
										"src": "3717:74:12",
										"text": " @return the number of token units a buyer gets per wei."
									},
									"functionSelector": "2c4e722e",
									"id": 1867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rate",
									"nameLocation": "3805:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:12"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "3833:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3833:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3832:9:12"
									},
									"scope": 2036,
									"src": "3796:75:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1875,
										"nodeType": "Block",
										"src": "3985:34:12",
										"statements": [
											{
												"expression": {
													"id": 1873,
													"name": "_weiRaised",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1749,
													"src": "4002:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1872,
												"id": 1874,
												"nodeType": "Return",
												"src": "3995:17:12"
											}
										]
									},
									"documentation": {
										"id": 1868,
										"nodeType": "StructuredDocumentation",
										"src": "3877:52:12",
										"text": " @return the amount of wei raised."
									},
									"functionSelector": "4042b66f",
									"id": 1876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weiRaised",
									"nameLocation": "3943:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3952:2:12"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "3976:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3975:9:12"
									},
									"scope": 2036,
									"src": "3934:85:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "4353:465:12",
										"statements": [
											{
												"assignments": [
													1885
												],
												"declarations": [
													{
														"constant": false,
														"id": 1885,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "4371:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 1926,
														"src": "4363:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1884,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4363:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1888,
												"initialValue": {
													"expression": {
														"id": 1886,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4383:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "4383:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4363:29:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1890,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "4423:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1891,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "4436:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1889,
														"name": "_preValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1955,
														"src": "4402:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4402:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1893,
												"nodeType": "ExpressionStatement",
												"src": "4402:44:12"
											},
											{
												"assignments": [
													1895
												],
												"declarations": [
													{
														"constant": false,
														"id": 1895,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "4513:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1926,
														"src": "4505:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1894,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4505:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1899,
												"initialValue": {
													"arguments": [
														{
															"id": 1897,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "4538:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1896,
														"name": "_getTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2023,
														"src": "4522:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4522:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4505:43:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1901,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "4577:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1902,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "4590:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1900,
														"name": "_processPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "4560:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4560:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "4560:37:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1906,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "4628:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4628:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1908,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "4642:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1909,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "4655:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1910,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "4666:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1905,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "4612:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4612:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1912,
												"nodeType": "EmitStatement",
												"src": "4607:66:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1914,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "4707:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1915,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "4720:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1913,
														"name": "_updatePurchasingState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2009,
														"src": "4684:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4684:46:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1917,
												"nodeType": "ExpressionStatement",
												"src": "4684:46:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1918,
														"name": "_forwardFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2035,
														"src": "4741:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4741:15:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1920,
												"nodeType": "ExpressionStatement",
												"src": "4741:15:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1922,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "4788:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1923,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "4801:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1921,
														"name": "_postValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1964,
														"src": "4766:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4766:45:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1925,
												"nodeType": "ExpressionStatement",
												"src": "4766:45:12"
											}
										]
									},
									"documentation": {
										"id": 1877,
										"nodeType": "StructuredDocumentation",
										"src": "4025:246:12",
										"text": " @dev low level token purchase ***DO NOT OVERRIDE***\n This function has a non-reentrancy guard, so it shouldn't be called by\n another `nonReentrant` function.\n @param beneficiary Recipient of the token purchase"
									},
									"functionSelector": "ec8ac4d8",
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1882,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1881,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 431,
												"src": "4332:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4332:12:12"
										}
									],
									"name": "buyTokens",
									"nameLocation": "4285:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4303:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "4295:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4295:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4294:21:12"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4353:0:12"
									},
									"scope": 2036,
									"src": "4276:542:12",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "5452:292:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1936,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "5470:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5493:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5485:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1937,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5485:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5470:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5497:44:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															},
															"value": "Crowdsale: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															}
														],
														"id": 1935,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5462:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5462:80:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1944,
												"nodeType": "ExpressionStatement",
												"src": "5462:80:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1946,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1932,
																"src": "5560:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5573:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5560:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5576:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															},
															"value": "Crowdsale: weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															}
														],
														"id": 1945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5552:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5552:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1951,
												"nodeType": "ExpressionStatement",
												"src": "5552:52:12"
											},
											{
												"expression": {
													"id": 1952,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "5614:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Crowdsale_$2036",
														"typeString": "contract Crowdsale"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "5614:4:12"
											}
										]
									},
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "4824:531:12",
										"text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "5369:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5398:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "5390:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "5419:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "5411:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5411:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5389:40:12"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5452:0:12"
									},
									"scope": 2036,
									"src": "5360:384:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "6132:64:12",
										"statements": []
									},
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "5750:284:12",
										"text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n conditions are not met.\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postValidatePurchase",
									"nameLocation": "6048:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6078:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "6070:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "6099:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "6091:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6091:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6069:40:12"
									},
									"returnParameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6132:0:12"
									},
									"scope": 2036,
									"src": "6039:157:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "6559:62:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1975,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "6589:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1976,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "6602:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1972,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "6569:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$510",
																"typeString": "contract IERC20"
															}
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "6569:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$510_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$510_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6569:45:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1978,
												"nodeType": "ExpressionStatement",
												"src": "6569:45:12"
											}
										]
									},
									"documentation": {
										"id": 1965,
										"nodeType": "StructuredDocumentation",
										"src": "6202:269:12",
										"text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n its tokens.\n @param beneficiary Address performing the token purchase\n @param tokenAmount Number of tokens to be emitted"
									},
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deliverTokens",
									"nameLocation": "6485:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6508:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "6500:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6500:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6529:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "6521:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6521:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6499:42:12"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6559:0:12"
									},
									"scope": 2036,
									"src": "6476:145:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "6973:57:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1989,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1983,
															"src": "6998:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1990,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "7011:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1988,
														"name": "_deliverTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1980,
														"src": "6983:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6983:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1992,
												"nodeType": "ExpressionStatement",
												"src": "6983:40:12"
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "6627:255:12",
										"text": " @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n tokens.\n @param beneficiary Address receiving the tokens\n @param tokenAmount Number of tokens to be purchased"
									},
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processPurchase",
									"nameLocation": "6896:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6921:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "6913:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6913:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6942:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "6934:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6934:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6912:42:12"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6973:0:12"
									},
									"scope": 2036,
									"src": "6887:143:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "7389:62:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2005,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "7422:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2002,
															"name": "_weiRaised",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "7407:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1582,
														"src": "7407:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7407:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "7407:25:12"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "7036:259:12",
										"text": " @dev Override for extensions that require an internal state to check for validity (current user contributions,\n etc.)\n @param beneficiary Address receiving the tokens\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePurchasingState",
									"nameLocation": "7309:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7340:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "7332:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7332:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7361:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "7353:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7353:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7331:40:12"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7389:0:12"
									},
									"scope": 2036,
									"src": "7300:151:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "7784:44:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2019,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "7815:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2017,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "7801:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1612,
														"src": "7801:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7801:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2016,
												"id": 2021,
												"nodeType": "Return",
												"src": "7794:27:12"
											}
										]
									},
									"documentation": {
										"id": 2010,
										"nodeType": "StructuredDocumentation",
										"src": "7457:238:12",
										"text": " @dev Override to extend the way in which ether is converted to tokens.\n @param weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
									},
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmount",
									"nameLocation": "7709:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7733:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "7725:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7725:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7724:19:12"
									},
									"returnParameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "7775:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7775:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7774:9:12"
									},
									"scope": 2036,
									"src": "7700:128:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2034,
										"nodeType": "Block",
										"src": "7949:44:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2030,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7976:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "7976:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2027,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "7959:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7959:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7959:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2033,
												"nodeType": "ExpressionStatement",
												"src": "7959:27:12"
											}
										]
									},
									"documentation": {
										"id": 2024,
										"nodeType": "StructuredDocumentation",
										"src": "7834:76:12",
										"text": " @dev Determines how ETH is stored/forwarded on purchases."
									},
									"id": 2035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_forwardFunds",
									"nameLocation": "7924:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7937:2:12"
									},
									"returnParameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7949:0:12"
									},
									"scope": 2036,
									"src": "7915:78:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2037,
							"src": "1110:6885:12",
							"usedErrors": []
						}
					],
					"src": "32:7964:12"
				},
				"id": 12
			},
			"contracts/crowdsale/validation/TimedCrowdsale.sol": {
				"ast": {
					"absolutePath": "contracts/crowdsale/validation/TimedCrowdsale.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Address": [
							1122
						],
						"Context": [
							1144
						],
						"Crowdsale": [
							2036
						],
						"ERC165": [
							1394
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							1406
						],
						"IERC20": [
							510
						],
						"IERC20Permit": [
							546
						],
						"ReentrancyGuard": [
							432
						],
						"SafeERC20": [
							827
						],
						"SafeMath": [
							1718
						],
						"Strings": [
							1370
						],
						"TimedCrowdsale": [
							2197
						]
					},
					"id": 2198,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2038,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2039,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2198,
							"sourceUnit": 1719,
							"src": "58:57:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/crowdsale/Crowdsale.sol",
							"file": "../Crowdsale.sol",
							"id": 2040,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2198,
							"sourceUnit": 2037,
							"src": "116:26:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2042,
										"name": "Crowdsale",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2036,
										"src": "281:9:13"
									},
									"id": 2043,
									"nodeType": "InheritanceSpecifier",
									"src": "281:9:13"
								}
							],
							"canonicalName": "TimedCrowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2041,
								"nodeType": "StructuredDocumentation",
								"src": "144:100:13",
								"text": " @title TimedCrowdsale\n @dev Crowdsale accepting contributions only within a time frame."
							},
							"fullyImplemented": false,
							"id": 2197,
							"linearizedBaseContracts": [
								2197,
								2036,
								319,
								1394,
								1406,
								392,
								432,
								1144
							],
							"name": "TimedCrowdsale",
							"nameLocation": "263:14:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2046,
									"libraryName": {
										"id": 2044,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1718,
										"src": "303:8:13"
									},
									"nodeType": "UsingForDirective",
									"src": "297:27:13",
									"typeName": {
										"id": 2045,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "316:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 2048,
									"mutability": "mutable",
									"name": "_openingTime",
									"nameLocation": "346:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2197,
									"src": "330:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2047,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "330:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2050,
									"mutability": "mutable",
									"name": "_closingTime",
									"nameLocation": "380:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2197,
									"src": "364:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2049,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "364:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2051,
										"nodeType": "StructuredDocumentation",
										"src": "399:141:13",
										"text": " Event for crowdsale extending\n @param newClosingTime new closing time\n @param prevClosingTime old closing time"
									},
									"id": 2057,
									"name": "TimedCrowdsaleExtended",
									"nameLocation": "551:22:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"indexed": false,
												"mutability": "mutable",
												"name": "prevClosingTime",
												"nameLocation": "582:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "574:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2055,
												"indexed": false,
												"mutability": "mutable",
												"name": "newClosingTime",
												"nameLocation": "607:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "599:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:49:13"
									},
									"src": "545:78:13"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "720:73:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2061,
																"name": "isOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "738:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "738:8:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a206e6f74206f70656e",
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "748:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739",
																"typeString": "literal_string \"TimedCrowdsale: not open\""
															},
															"value": "TimedCrowdsale: not open"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739",
																"typeString": "literal_string \"TimedCrowdsale: not open\""
															}
														],
														"id": 2060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "730:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:45:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2065,
												"nodeType": "ExpressionStatement",
												"src": "730:45:13"
											},
											{
												"id": 2066,
												"nodeType": "PlaceholderStatement",
												"src": "785:1:13"
											}
										]
									},
									"documentation": {
										"id": 2058,
										"nodeType": "StructuredDocumentation",
										"src": "629:63:13",
										"text": " @dev Reverts if not in crowdsale time range."
									},
									"id": 2068,
									"name": "onlyWhileOpen",
									"nameLocation": "706:13:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "720:0:13"
									},
									"src": "697:96:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "1040:399:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2077,
																"name": "openingTime_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "1112:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 2078,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1128:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1128:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1112:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a206f70656e696e672074696d65206973206265666f72652063757272656e742074696d65",
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1145:53:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd",
																"typeString": "literal_string \"TimedCrowdsale: opening time is before current time\""
															},
															"value": "TimedCrowdsale: opening time is before current time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd",
																"typeString": "literal_string \"TimedCrowdsale: opening time is before current time\""
															}
														],
														"id": 2076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1104:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1104:95:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2083,
												"nodeType": "ExpressionStatement",
												"src": "1104:95:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2085,
																"name": "closingTime_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "1270:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2086,
																"name": "openingTime_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "1285:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1270:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a206f70656e696e672074696d65206973206e6f74206265666f726520636c6f73696e672074696d65",
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1299:57:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b",
																"typeString": "literal_string \"TimedCrowdsale: opening time is not before closing time\""
															},
															"value": "TimedCrowdsale: opening time is not before closing time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b",
																"typeString": "literal_string \"TimedCrowdsale: opening time is not before closing time\""
															}
														],
														"id": 2084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1262:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1262:95:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2090,
												"nodeType": "ExpressionStatement",
												"src": "1262:95:13"
											},
											{
												"expression": {
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2091,
														"name": "_openingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "1368:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2092,
														"name": "openingTime_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2071,
														"src": "1383:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1368:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2094,
												"nodeType": "ExpressionStatement",
												"src": "1368:27:13"
											},
											{
												"expression": {
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2095,
														"name": "_closingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2050,
														"src": "1405:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2096,
														"name": "closingTime_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2073,
														"src": "1420:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1405:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2098,
												"nodeType": "ExpressionStatement",
												"src": "1405:27:13"
											}
										]
									},
									"documentation": {
										"id": 2069,
										"nodeType": "StructuredDocumentation",
										"src": "799:179:13",
										"text": " @dev Constructor, takes crowdsale opening and closing times.\n @param openingTime_ Crowdsale opening time\n @param closingTime_ Crowdsale closing time"
									},
									"id": 2100,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "openingTime_",
												"nameLocation": "1004:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "996:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "closingTime_",
												"nameLocation": "1026:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "1018:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "995:44:13"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:13"
									},
									"scope": 2197,
									"src": "983:456:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "1557:36:13",
										"statements": [
											{
												"expression": {
													"id": 2106,
													"name": "_openingTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2048,
													"src": "1574:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2105,
												"id": 2107,
												"nodeType": "Return",
												"src": "1567:19:13"
											}
										]
									},
									"documentation": {
										"id": 2101,
										"nodeType": "StructuredDocumentation",
										"src": "1445:54:13",
										"text": " @return the crowdsale opening time."
									},
									"functionSelector": "b7a8807c",
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "openingTime",
									"nameLocation": "1513:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:13"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "1548:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:9:13"
									},
									"scope": 2197,
									"src": "1504:89:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2117,
										"nodeType": "Block",
										"src": "1711:36:13",
										"statements": [
											{
												"expression": {
													"id": 2115,
													"name": "_closingTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2050,
													"src": "1728:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2114,
												"id": 2116,
												"nodeType": "Return",
												"src": "1721:19:13"
											}
										]
									},
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "1599:54:13",
										"text": " @return the crowdsale closing time."
									},
									"functionSelector": "4b6753bc",
									"id": 2118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closingTime",
									"nameLocation": "1667:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1678:2:13"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "1702:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1702:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:9:13"
									},
									"scope": 2197,
									"src": "1658:89:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2134,
										"nodeType": "Block",
										"src": "1877:144:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2124,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1948:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1948:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 2126,
															"name": "_openingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "1967:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1948:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2128,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1983:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1983:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 2130,
															"name": "_closingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "2002:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1983:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1948:66:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2123,
												"id": 2133,
												"nodeType": "Return",
												"src": "1941:73:13"
											}
										]
									},
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "1753:74:13",
										"text": " @return true if the crowdsale is open, false otherwise."
									},
									"functionSelector": "47535d7b",
									"id": 2135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOpen",
									"nameLocation": "1841:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1847:2:13"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "1871:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1871:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:6:13"
									},
									"scope": 2197,
									"src": "1832:189:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "2233:108:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2141,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2304:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2304:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2143,
														"name": "_closingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2050,
														"src": "2322:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2304:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2140,
												"id": 2145,
												"nodeType": "Return",
												"src": "2297:37:13"
											}
										]
									},
									"documentation": {
										"id": 2136,
										"nodeType": "StructuredDocumentation",
										"src": "2027:153:13",
										"text": " @dev Checks whether the period in which the crowdsale is open has already elapsed.\n @return Whether crowdsale period has elapsed"
									},
									"functionSelector": "1515bc2b",
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasClosed",
									"nameLocation": "2194:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2203:2:13"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "2227:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2227:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2226:6:13"
									},
									"scope": 2197,
									"src": "2185:156:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1955
									],
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "2672:67:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2161,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "2709:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2162,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "2722:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2158,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2682:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TimedCrowdsale_$2197_$",
																"typeString": "type(contract super TimedCrowdsale)"
															}
														},
														"id": 2160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_preValidatePurchase",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1955,
														"src": "2682:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2164,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:13"
											}
										]
									},
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "2347:182:13",
										"text": " @dev Extend parent behavior requiring to be within contributing period.\n @param beneficiary Token purchaser\n @param weiAmount Amount of wei contributed"
									},
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2156,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2155,
												"name": "onlyWhileOpen",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2068,
												"src": "2648:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2648:13:13"
										}
									],
									"name": "_preValidatePurchase",
									"nameLocation": "2543:20:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2154,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2623:8:13"
									},
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2572:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "2564:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "2593:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "2585:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2585:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:40:13"
									},
									"returnParameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2672:0:13"
									},
									"scope": 2197,
									"src": "2534:205:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2195,
										"nodeType": "Block",
										"src": "2897:347:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2915:12:13",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2173,
																	"name": "hasClosed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2147,
																	"src": "2916:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2916:11:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a20616c726561647920636c6f736564",
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2929:32:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_634cbd3056ed66fa4fcc9199d612886e4e9f90ebde3b0c138adb38373b973e15",
																"typeString": "literal_string \"TimedCrowdsale: already closed\""
															},
															"value": "TimedCrowdsale: already closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_634cbd3056ed66fa4fcc9199d612886e4e9f90ebde3b0c138adb38373b973e15",
																"typeString": "literal_string \"TimedCrowdsale: already closed\""
															}
														],
														"id": 2172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2907:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2907:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2178,
												"nodeType": "ExpressionStatement",
												"src": "2907:55:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2180,
																"name": "newClosingTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2169,
																"src": "3033:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2181,
																"name": "_closingTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "3050:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3033:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a206e657720636c6f73696e672074696d65206973206265666f72652063757272656e7420636c6f73696e672074696d65",
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3064:65:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_800b650950b0df3fae7606c8f23fafd9964a9f77f965079b0fc21e897862f129",
																"typeString": "literal_string \"TimedCrowdsale: new closing time is before current closing time\""
															},
															"value": "TimedCrowdsale: new closing time is before current closing time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_800b650950b0df3fae7606c8f23fafd9964a9f77f965079b0fc21e897862f129",
																"typeString": "literal_string \"TimedCrowdsale: new closing time is before current closing time\""
															}
														],
														"id": 2179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3025:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3025:105:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2185,
												"nodeType": "ExpressionStatement",
												"src": "3025:105:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2187,
															"name": "_closingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "3169:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2188,
															"name": "newClosingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2169,
															"src": "3183:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2186,
														"name": "TimedCrowdsaleExtended",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2057,
														"src": "3146:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3146:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2190,
												"nodeType": "EmitStatement",
												"src": "3141:57:13"
											},
											{
												"expression": {
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2191,
														"name": "_closingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2050,
														"src": "3208:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2192,
														"name": "newClosingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "3223:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3208:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2194,
												"nodeType": "ExpressionStatement",
												"src": "3208:29:13"
											}
										]
									},
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "2745:93:13",
										"text": " @dev Extend crowdsale.\n @param newClosingTime Crowdsale closing time"
									},
									"id": 2196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extendTime",
									"nameLocation": "2852:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "newClosingTime",
												"nameLocation": "2872:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "2864:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2864:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2863:24:13"
									},
									"returnParameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2897:0:13"
									},
									"scope": 2197,
									"src": "2843:401:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2198,
							"src": "245:3001:13",
							"usedErrors": []
						}
					],
					"src": "33:3214:13"
				},
				"id": 13
			}
		}
	}
}
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PayMETokenVesting,
  PayMETokenVestingInterface,
} from "../../../contracts/ico/PayMETokenVesting";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Revoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenReleasedAtTGE",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "VestingScheduleCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "computeNextVestingScheduleIdForHolder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "computeReleasableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "computeVestingScheduleIdForAddressAndIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "iBeneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "iStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "iCliff",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "iDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "iSlicePeriodSeconds",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "iRevocable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "iAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "iReleaseAtTGE",
        type: "bool",
      },
    ],
    name: "createVestingSchedule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "crowdsalesAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "getLastVestingScheduleForHolder",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cliff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "releaseAtTGE",
            type: "bool",
          },
        ],
        internalType: "struct payMETokenVesting.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getVestingIdAtIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "getVestingSchedule",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cliff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "releaseAtTGE",
            type: "bool",
          },
        ],
        internalType: "struct payMETokenVesting.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getVestingScheduleByAddressAndIndex",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cliff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "releaseAtTGE",
            type: "bool",
          },
        ],
        internalType: "struct payMETokenVesting.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVestingSchedulesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "iBeneficiary",
        type: "address",
      },
    ],
    name: "getVestingSchedulesCountByBeneficiary",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVestingSchedulesTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWithdrawableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "iToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "iTGEPercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "iTGEOpeningTime",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "releaseTokenForTGE",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "icrowdsalesAddress",
        type: "address",
      },
    ],
    name: "setCrowdsaleAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tgeOpeningTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tgePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tgeTokenParticipants",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506120c0806100206000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638af104da116100de578063e2f0f42d11610097578063f51321d711610071578063f51321d714610363578063f7c469f014610376578063f9079b3714610389578063f9299dd91461039c57600080fd5b8063e2f0f42d14610334578063ea1bb3d51461033d578063f2fde38b1461035057600080fd5b80638af104da146102c25780638da5cb5b146102d557806390be10cc146102e65780639ef346b4146102ee578063b75c7dc614610301578063c8ac75d21461031457600080fd5b806348deb4711161014b578063715018a611610125578063715018a6146102745780637a1ac61e1461027c5780637df8df921461028f5780637e913dc6146102a257600080fd5b806348deb471146102305780635a7bb69a1461023857806366afd8ef1461026157600080fd5b806313083617146101935780631f35bc40146101aa57806321df0da7146101dc578063260a51e5146102015780632e1a7d4d1461021457806340a9627f14610227575b600080fd5b609a545b6040519081526020015b60405180910390f35b6101da6101b8366004611c79565b609f80546001600160a01b0319166001600160a01b0392909216919091179055565b005b6097546001600160a01b03165b6040516001600160a01b0390911681526020016101a1565b609f546101e9906001600160a01b031681565b6101da610222366004611c96565b6103af565b61019760995481565b609c54610197565b610197610246366004611c79565b6001600160a01b03166000908152609d602052604090205490565b6101da61026f366004611caf565b6104ec565b6101da610714565b6101da61028a366004611cd1565b610728565b6101da61029d366004611d14565b61096a565b6102b56102b0366004611c79565b610e99565b6040516101a19190611d90565b6101976102d0366004611e27565b610f7f565b6033546001600160a01b03166101e9565b610197610fc7565b6102b56102fc366004611c96565b611059565b6101da61030f366004611c96565b61110b565b610197610322366004611c96565b609e6020526000908152604090205481565b61019760985481565b61019761034b366004611c96565b6112b6565b6101da61035e366004611c79565b6113ad565b6102b5610371366004611e27565b611426565b610197610384366004611c79565b611442565b610197610397366004611c96565b611466565b6101da6103aa366004611c96565b6114ee565b600260655414156103db5760405162461bcd60e51b81526004016103d290611e53565b60405180910390fd5b60026065556103e8611765565b80306001600160a01b03166390be10cc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561042257600080fd5b505afa158015610436573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045a9190611e8a565b10156104bc5760405162461bcd60e51b815260206004820152602b60248201527f546f6b656e56657374696e673a206e6f7420656e6f756768207769746864726160448201526a7761626c652066756e647360a81b60648201526084016103d2565b6104e46104d16033546001600160a01b031690565b6097546001600160a01b031690836117bf565b506001606555565b6002606554141561050f5760405162461bcd60e51b81526004016103d290611e53565b60026065556000828152609b6020526040902054829060ff1661053157600080fd5b6000818152609b602052604090206008015460ff161561055057600080fd5b6000838152609b602052604090208054603354336001600160a01b0361010090930483168114929091161481806105845750805b6105a05760405162461bcd60e51b81526004016103d290611ea3565b6040805161016081018252845460ff808216151583526001600160a01b03610100928390041660208401526001870154938301939093526002860154606083015260038601546080830152600486015460a083015260058601548316151560c0830152600686015460e083015260078601548183015260088601548084161515610120840152049091161515610140820152600090610640908890611816565b9050858110156106b85760405162461bcd60e51b815260206004820152603d60248201527f546f6b656e56657374696e673a2063616e6e6f742072656c6561736520746f6b60448201527f656e732c206e6f7420656e6f7567682076657374656420746f6b656e7300000060648201526084016103d2565b60078401546106c79087611933565b60078501558354609c546101009091046001600160a01b0316906106eb908861193f565b609c55609754610705906001600160a01b031682896117bf565b50506001606555505050505050565b61071c611765565b610726600061194b565b565b600054610100900460ff16158080156107485750600054600160ff909116105b806107625750303b158015610762575060005460ff166001145b6107c55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103d2565b6000805460ff1916600117905580156107e8576000805461ff0019166101001790555b6001600160a01b0384166107fb57600080fd5b60008311801561080b5750606483105b6108745760405162461bcd60e51b815260206004820152603460248201527f5447452050657263656e74206d7573742062652067726561746572207468616e6044820152730203020616e64204c657373207468616e203130360641b60648201526084016103d2565b4282116108e95760405162461bcd60e51b815260206004820152603760248201527f544745204f70656e6e696e672074696d65206d7573742062652067726561746560448201527f72207468616e207468652063757272656e742074696d6500000000000000000060648201526084016103d2565b6108f161199d565b6108f96119cd565b609780546001600160a01b0319166001600160a01b038616179055609982905560988390558015610964576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b609f546001600160a01b031633148061098d57506033546001600160a01b031633145b6109c55760405162461bcd60e51b81526020600482015260096024820152684e6f2041636365737360b81b60448201526064016103d2565b81306001600160a01b03166390be10cc6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109ff57600080fd5b505afa158015610a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a379190611e8a565b1015610abe5760405162461bcd60e51b815260206004820152604a60248201527f546f6b656e56657374696e673a2063616e6e6f7420637265617465207665737460448201527f696e67207363686564756c652062656361757365206e6f742073756666696369606482015269656e7420746f6b656e7360b01b608482015260a4016103d2565b60008511610b195760405162461bcd60e51b815260206004820152602260248201527f546f6b656e56657374696e673a206475726174696f6e206d757374206265203e604482015261020360f41b60648201526084016103d2565b60008211610b695760405162461bcd60e51b815260206004820181905260248201527f546f6b656e56657374696e673a20616d6f756e74206d757374206265203e203060448201526064016103d2565b6001841015610bd05760405162461bcd60e51b815260206004820152602d60248201527f546f6b656e56657374696e673a20736c696365506572696f645365636f6e647360448201526c206d757374206265203e3d203160981b60648201526084016103d2565b604051630f7c469f60e41b81526001600160a01b0389166004820152600090309063f7c469f09060240160206040518083038186803b158015610c1257600080fd5b505afa158015610c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4a9190611e8a565b90506000610c588989611933565b90506040518061016001604052806001151581526020018b6001600160a01b031681526020018281526020018a8152602001888152602001878152602001861515815260200185815260200160008152602001600015158152602001841515815250609b600084815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004015560c08201518160050160006101000a81548160ff02191690831515021790555060e0820151816006015561010082015181600701556101208201518160080160006101000a81548160ff0219169083151502179055506101408201518160080160016101000a81548160ff021916908315150217905550905050610dd184609c5461193390919063ffffffff16565b609c55609a805460018181019092557f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be4018390556001600160a01b038b166000908152609d602052604090205490610e2a908290611933565b6001600160a01b038c166000908152609d6020908152604080832093909355858252609e905281812055517f7deecc243dec36156ece079ae8e71cb3f5b8a86d4ee141e3733216e23614e0c390610e849085815260200190565b60405180910390a15050505050505050505050565b610ea1611bf9565b6001600160a01b0382166000908152609d6020526040812054609b9190610ed09085906102d090600190611f21565b81526020808201929092526040908101600020815161016081018352815460ff808216151583526001600160a01b036101009283900416958301959095526001830154938201939093526002820154606082015260038201546080820152600482015460a082015260058201548416151560c0820152600682015460e0820152600782015483820152600890910154808416151561012083015291909104909116151561014082015292915050565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290526000906054016040516020818303038152906040528051906020012090505b92915050565b609c546097546040516370a0823160e01b81523060048201526000926110549290916001600160a01b03909116906370a082319060240160206040518083038186803b15801561101657600080fd5b505afa15801561102a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104e9190611e8a565b9061193f565b905090565b611061611bf9565b506000908152609b6020908152604091829020825161016081018452815460ff808216151583526001600160a01b036101009283900416948301949094526001830154948201949094526002820154606082015260038201546080820152600482015460a082015260058201548316151560c0820152600682015460e082015260078201548482015260089091015480831615156101208301529290920416151561014082015290565b611113611765565b6000818152609b6020526040902054819060ff1661113057600080fd5b6000818152609b602052604090206008015460ff161561114f57600080fd5b6000828152609b60205260409020600581015460ff166111c05760405162461bcd60e51b815260206004820152602660248201527f546f6b656e56657374696e673a2076657374696e67206973206e6f74207265766044820152656f6361626c6560d01b60648201526084016103d2565b6040805161016081018252825460ff808216151583526001600160a01b03610100928390041660208401526001850154938301939093526002840154606083015260038401546080830152600484015460a083015260058401548316151560c0830152600684015460e083015260078401548183015260088401548084161515610120840152049091161515610140820152600090611260908590611816565b905080156112725761127284826104ec565b600061128f8360070154846006015461193f90919063ffffffff16565b609c5490915061129f908261193f565b609c555050600801805460ff191660011790555050565b6000818152609b6020526040812054829060ff166112d357600080fd5b6000818152609b602052604090206008015460ff16156112f257600080fd5b6000838152609b6020908152604091829020825161016081018452815460ff808216151583526001600160a01b036101009283900416948301949094526001830154948201949094526002820154606082015260038201546080820152600482015460a082015260058201548316151560c0820152600682015460e082015260078201548482015260088201548084161515610120830152939093049091161515610140830152906113a5908590611816565b949350505050565b6113b5611765565b6001600160a01b03811661141a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103d2565b6114238161194b565b50565b61142e611bf9565b61143b6102fc8484610f7f565b9392505050565b6001600160a01b0381166000908152609d6020526040812054610fc1908390610f7f565b6000611471609a5490565b82106114c95760405162461bcd60e51b815260206004820152602160248201527f546f6b656e56657374696e673a20696e646578206f7574206f6620626f756e646044820152607360f81b60648201526084016103d2565b609a82815481106114dc576114dc611f38565b90600052602060002001549050919050565b600260655414156115115760405162461bcd60e51b81526004016103d290611e53565b60026065556000818152609b602052604090208054603354336001600160a01b03610100909304831681149290911614818061154a5750805b6115665760405162461bcd60e51b81526004016103d290611ea3565b6008830154610100900460ff166115e55760405162461bcd60e51b815260206004820152603860248201527f52656c65617365546f6b656e41745447453a206f6e6c7920696e766573746f7260448201527f732063616e20636c61696d20746f6b656e20617420544745000000000000000060648201526084016103d2565b60995442908110156116325760405162461bcd60e51b81526020600482015260166024820152755447453a2074696d65206e6f7420726561636865642160501b60448201526064016103d2565b6000858152609e60205260409020541561168e5760405162461bcd60e51b815260206004820152601a60248201527f5447453a20546f6b656e20416c726561647920636c61696d656400000000000060448201526064016103d2565b60006116b460646116ae60985488600601546119fb90919063ffffffff16565b90611a07565b60078601549091506116c69082611933565b60078601556000868152609e602052604090208190558454609c546101009091046001600160a01b0316906116fb908361193f565b609c55609754611715906001600160a01b031682846117bf565b604080516001600160a01b0383168152602081018490527fd9215c0345f0d530c5101edea49413960423257c62dd4dcc18b5e6c0b63a0227910160405180910390a1505060016065555050505050565b6033546001600160a01b031633146107265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103d2565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611811908490611a13565b505050565b609954600090429081101561182f576000915050610fc1565b6000848152609e602052604081205415801561184e5750836101200151155b156118745761187160646116ae6098548760e001516119fb90919063ffffffff16565b90505b836040015182108061188857508361012001515b15611896579150610fc19050565b608084015160608501516118a991611933565b82106118cc5761010084015160e08501516118c39161193f565b92505050610fc1565b60006118e585606001518461193f90919063ffffffff16565b9050600061190886608001516116ae848960e001516119fb90919063ffffffff16565b61010087015190915061191f9061104e8386611933565b9450610fc19350505050565b505092915050565b600061143b8284611f4e565b600061143b8284611f21565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166119c45760405162461bcd60e51b81526004016103d290611f66565b6107263361194b565b600054610100900460ff166119f45760405162461bcd60e51b81526004016103d290611f66565b6001606555565b600061143b8284611fb1565b600061143b8284611fd0565b6000611a68826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611ae59092919063ffffffff16565b8051909150156118115780806020019051810190611a869190611ff2565b6118115760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103d2565b60606113a58484600085856001600160a01b0385163b611b475760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103d2565b600080866001600160a01b03168587604051611b63919061203b565b60006040518083038185875af1925050503d8060008114611ba0576040519150601f19603f3d011682016040523d82523d6000602084013e611ba5565b606091505b5091509150611bb5828286611bc0565b979650505050505050565b60608315611bcf57508161143b565b825115611bdf5782518084602001fd5b8160405162461bcd60e51b81526004016103d29190612057565b60405180610160016040528060001515815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081526020016000151581526020016000151581525090565b6001600160a01b038116811461142357600080fd5b600060208284031215611c8b57600080fd5b813561143b81611c64565b600060208284031215611ca857600080fd5b5035919050565b60008060408385031215611cc257600080fd5b50508035926020909101359150565b600080600060608486031215611ce657600080fd5b8335611cf181611c64565b95602085013595506040909401359392505050565b801515811461142357600080fd5b600080600080600080600080610100898b031215611d3157600080fd5b8835611d3c81611c64565b97506020890135965060408901359550606089013594506080890135935060a0890135611d6881611d06565b925060c0890135915060e0890135611d7f81611d06565b809150509295985092959890939650565b81511515815261016081016020830151611db560208401826001600160a01b03169052565b5060408301516040830152606083015160608301526080830151608083015260a083015160a083015260c0830151611df160c084018215159052565b5060e08381015190830152610100808401519083015261012080840151151590830152610140808401518015158285015261192b565b60008060408385031215611e3a57600080fd5b8235611e4581611c64565b946020939093013593505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600060208284031215611e9c57600080fd5b5051919050565b60208082526042908201527f546f6b656e56657374696e673a206f6e6c792062656e6566696369617279206160408201527f6e64206f776e65722063616e2072656c656173652076657374656420746f6b656060820152616e7360f01b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b600082821015611f3357611f33611f0b565b500390565b634e487b7160e01b600052603260045260246000fd5b60008219821115611f6157611f61611f0b565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000816000190483118215151615611fcb57611fcb611f0b565b500290565b600082611fed57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561200457600080fd5b815161143b81611d06565b60005b8381101561202a578181015183820152602001612012565b838111156109645750506000910152565b6000825161204d81846020870161200f565b9190910192915050565b602081526000825180602084015261207681604085016020870161200f565b601f01601f1916919091016040019291505056fea26469706673582212206397ea45ebad045a714355952947921c5e82faba444a24de68fc1e525ff07fa364736f6c63430008090033";

type PayMETokenVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PayMETokenVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PayMETokenVesting__factory extends ContractFactory {
  constructor(...args: PayMETokenVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PayMETokenVesting> {
    return super.deploy(overrides || {}) as Promise<PayMETokenVesting>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PayMETokenVesting {
    return super.attach(address) as PayMETokenVesting;
  }
  override connect(signer: Signer): PayMETokenVesting__factory {
    return super.connect(signer) as PayMETokenVesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PayMETokenVestingInterface {
    return new utils.Interface(_abi) as PayMETokenVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PayMETokenVesting {
    return new Contract(address, _abi, signerOrProvider) as PayMETokenVesting;
  }
}
